// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Workflows/GeneralGoWorkflows/general_go_workflows.proto

#include "Workflows/GeneralGoWorkflows/general_go_workflows.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_Common_2fentities_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ActorID_Common_2fentities_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_Common_2fentities_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Location_Common_2fentities_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_Common_2fheaders_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<3> scc_info_RequestHeaders_Common_2fheaders_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_Workflows_2fGeneralGoWorkflows_2fgeneral_5fgo_5fworkflows_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Attributes_Workflows_2fGeneralGoWorkflows_2fgeneral_5fgo_5fworkflows_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fprotobuf_2fduration_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Duration_google_2fprotobuf_2fduration_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fprotobuf_2ftimestamp_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Timestamp_google_2fprotobuf_2ftimestamp_2eproto;
namespace farm {
namespace nurture {
namespace core {
namespace contracts {
namespace workflows {
namespace generalgo {
class ClearStaleCreatedOrderRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ClearStaleCreatedOrderRequest> _instance;
} _ClearStaleCreatedOrderRequest_default_instance_;
class ClearStaleCreatedOrderResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ClearStaleCreatedOrderResponse> _instance;
} _ClearStaleCreatedOrderResponse_default_instance_;
class ScoreComputationRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ScoreComputationRequest> _instance;
} _ScoreComputationRequest_default_instance_;
class ScoreComputationResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ScoreComputationResponse> _instance;
} _ScoreComputationResponse_default_instance_;
class IotComputationRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<IotComputationRequest> _instance;
} _IotComputationRequest_default_instance_;
class IotComputationResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<IotComputationResponse> _instance;
} _IotComputationResponse_default_instance_;
class PostServiceFeedbackPNRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PostServiceFeedbackPNRequest> _instance;
} _PostServiceFeedbackPNRequest_default_instance_;
class PostPusaSprayPopUpRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PostPusaSprayPopUpRequest> _instance;
} _PostPusaSprayPopUpRequest_default_instance_;
class PostServiceFeedbackPNResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PostServiceFeedbackPNResponse> _instance;
} _PostServiceFeedbackPNResponse_default_instance_;
class PostPusaSprayPopUpResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PostPusaSprayPopUpResponse> _instance;
} _PostPusaSprayPopUpResponse_default_instance_;
class ExecuteUserJourneyCampaignRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ExecuteUserJourneyCampaignRequest> _instance;
} _ExecuteUserJourneyCampaignRequest_default_instance_;
class ExecuteUserJourneyCampaignResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ExecuteUserJourneyCampaignResponse> _instance;
} _ExecuteUserJourneyCampaignResponse_default_instance_;
class ExecuteCampaignRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ExecuteCampaignRequest> _instance;
} _ExecuteCampaignRequest_default_instance_;
class ExecuteCampaignResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ExecuteCampaignResponse> _instance;
} _ExecuteCampaignResponse_default_instance_;
class RefreshUserContentRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<RefreshUserContentRequest> _instance;
} _RefreshUserContentRequest_default_instance_;
class RefreshUserContentResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<RefreshUserContentResponse> _instance;
} _RefreshUserContentResponse_default_instance_;
class PreventiveMaintenanceTriggerRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PreventiveMaintenanceTriggerRequest> _instance;
} _PreventiveMaintenanceTriggerRequest_default_instance_;
class PreventiveMaintenanceTriggerResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PreventiveMaintenanceTriggerResponse> _instance;
} _PreventiveMaintenanceTriggerResponse_default_instance_;
class UpdateActorsMachinePreventiveMaintenanceRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<UpdateActorsMachinePreventiveMaintenanceRequest> _instance;
} _UpdateActorsMachinePreventiveMaintenanceRequest_default_instance_;
class UpdateActorsMachinePreventiveMaintenanceResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<UpdateActorsMachinePreventiveMaintenanceResponse> _instance;
} _UpdateActorsMachinePreventiveMaintenanceResponse_default_instance_;
class RescheduleMachinePreventiveMaintenanceRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<RescheduleMachinePreventiveMaintenanceRequest> _instance;
} _RescheduleMachinePreventiveMaintenanceRequest_default_instance_;
class RescheduleMachinePreventiveMaintenanceResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<RescheduleMachinePreventiveMaintenanceResponse> _instance;
} _RescheduleMachinePreventiveMaintenanceResponse_default_instance_;
class HandoverOtpRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<HandoverOtpRequest> _instance;
} _HandoverOtpRequest_default_instance_;
class HandoverOtpResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<HandoverOtpResponse> _instance;
} _HandoverOtpResponse_default_instance_;
class AttributesDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Attributes> _instance;
} _Attributes_default_instance_;
class OfferRewardRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<OfferRewardRequest> _instance;
} _OfferRewardRequest_default_instance_;
class OfferRewardResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<OfferRewardResponse> _instance;
} _OfferRewardResponse_default_instance_;
class DiscountedSprayServiceRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DiscountedSprayServiceRequest> _instance;
} _DiscountedSprayServiceRequest_default_instance_;
class OfferInsuranceRewardRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<OfferInsuranceRewardRequest> _instance;
} _OfferInsuranceRewardRequest_default_instance_;
class OfferInsuranceRewardResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<OfferInsuranceRewardResponse> _instance;
} _OfferInsuranceRewardResponse_default_instance_;
class CreatePartitionsRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CreatePartitionsRequest> _instance;
} _CreatePartitionsRequest_default_instance_;
class CreatePartitionsResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CreatePartitionsResponse> _instance;
} _CreatePartitionsResponse_default_instance_;
class TriggerF2FPointExpiryCronRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<TriggerF2FPointExpiryCronRequest> _instance;
} _TriggerF2FPointExpiryCronRequest_default_instance_;
class TriggerF2FPointExpiryCronResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<TriggerF2FPointExpiryCronResponse> _instance;
} _TriggerF2FPointExpiryCronResponse_default_instance_;
class InsurancePurchaseEventRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<InsurancePurchaseEventRequest> _instance;
} _InsurancePurchaseEventRequest_default_instance_;
class InsurancePurchaseEventResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<InsurancePurchaseEventResponse> _instance;
} _InsurancePurchaseEventResponse_default_instance_;
}  // namespace generalgo
}  // namespace workflows
}  // namespace contracts
}  // namespace core
}  // namespace nurture
}  // namespace farm
static void InitDefaultsscc_info_Attributes_Workflows_2fGeneralGoWorkflows_2fgeneral_5fgo_5fworkflows_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::farm::nurture::core::contracts::workflows::generalgo::_Attributes_default_instance_;
    new (ptr) ::farm::nurture::core::contracts::workflows::generalgo::Attributes();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Attributes_Workflows_2fGeneralGoWorkflows_2fgeneral_5fgo_5fworkflows_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Attributes_Workflows_2fGeneralGoWorkflows_2fgeneral_5fgo_5fworkflows_2eproto}, {}};

static void InitDefaultsscc_info_ClearStaleCreatedOrderRequest_Workflows_2fGeneralGoWorkflows_2fgeneral_5fgo_5fworkflows_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::farm::nurture::core::contracts::workflows::generalgo::_ClearStaleCreatedOrderRequest_default_instance_;
    new (ptr) ::farm::nurture::core::contracts::workflows::generalgo::ClearStaleCreatedOrderRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ClearStaleCreatedOrderRequest_Workflows_2fGeneralGoWorkflows_2fgeneral_5fgo_5fworkflows_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_ClearStaleCreatedOrderRequest_Workflows_2fGeneralGoWorkflows_2fgeneral_5fgo_5fworkflows_2eproto}, {
      &scc_info_RequestHeaders_Common_2fheaders_2eproto.base,}};

static void InitDefaultsscc_info_ClearStaleCreatedOrderResponse_Workflows_2fGeneralGoWorkflows_2fgeneral_5fgo_5fworkflows_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::farm::nurture::core::contracts::workflows::generalgo::_ClearStaleCreatedOrderResponse_default_instance_;
    new (ptr) ::farm::nurture::core::contracts::workflows::generalgo::ClearStaleCreatedOrderResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ClearStaleCreatedOrderResponse_Workflows_2fGeneralGoWorkflows_2fgeneral_5fgo_5fworkflows_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ClearStaleCreatedOrderResponse_Workflows_2fGeneralGoWorkflows_2fgeneral_5fgo_5fworkflows_2eproto}, {}};

static void InitDefaultsscc_info_CreatePartitionsRequest_Workflows_2fGeneralGoWorkflows_2fgeneral_5fgo_5fworkflows_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::farm::nurture::core::contracts::workflows::generalgo::_CreatePartitionsRequest_default_instance_;
    new (ptr) ::farm::nurture::core::contracts::workflows::generalgo::CreatePartitionsRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_CreatePartitionsRequest_Workflows_2fGeneralGoWorkflows_2fgeneral_5fgo_5fworkflows_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_CreatePartitionsRequest_Workflows_2fGeneralGoWorkflows_2fgeneral_5fgo_5fworkflows_2eproto}, {}};

static void InitDefaultsscc_info_CreatePartitionsResponse_Workflows_2fGeneralGoWorkflows_2fgeneral_5fgo_5fworkflows_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::farm::nurture::core::contracts::workflows::generalgo::_CreatePartitionsResponse_default_instance_;
    new (ptr) ::farm::nurture::core::contracts::workflows::generalgo::CreatePartitionsResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_CreatePartitionsResponse_Workflows_2fGeneralGoWorkflows_2fgeneral_5fgo_5fworkflows_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_CreatePartitionsResponse_Workflows_2fGeneralGoWorkflows_2fgeneral_5fgo_5fworkflows_2eproto}, {}};

static void InitDefaultsscc_info_DiscountedSprayServiceRequest_Workflows_2fGeneralGoWorkflows_2fgeneral_5fgo_5fworkflows_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::farm::nurture::core::contracts::workflows::generalgo::_DiscountedSprayServiceRequest_default_instance_;
    new (ptr) ::farm::nurture::core::contracts::workflows::generalgo::DiscountedSprayServiceRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_DiscountedSprayServiceRequest_Workflows_2fGeneralGoWorkflows_2fgeneral_5fgo_5fworkflows_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_DiscountedSprayServiceRequest_Workflows_2fGeneralGoWorkflows_2fgeneral_5fgo_5fworkflows_2eproto}, {
      &scc_info_ActorID_Common_2fentities_2eproto.base,}};

static void InitDefaultsscc_info_ExecuteCampaignRequest_Workflows_2fGeneralGoWorkflows_2fgeneral_5fgo_5fworkflows_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::farm::nurture::core::contracts::workflows::generalgo::_ExecuteCampaignRequest_default_instance_;
    new (ptr) ::farm::nurture::core::contracts::workflows::generalgo::ExecuteCampaignRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ExecuteCampaignRequest_Workflows_2fGeneralGoWorkflows_2fgeneral_5fgo_5fworkflows_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_ExecuteCampaignRequest_Workflows_2fGeneralGoWorkflows_2fgeneral_5fgo_5fworkflows_2eproto}, {
      &scc_info_Duration_google_2fprotobuf_2fduration_2eproto.base,}};

static void InitDefaultsscc_info_ExecuteCampaignResponse_Workflows_2fGeneralGoWorkflows_2fgeneral_5fgo_5fworkflows_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::farm::nurture::core::contracts::workflows::generalgo::_ExecuteCampaignResponse_default_instance_;
    new (ptr) ::farm::nurture::core::contracts::workflows::generalgo::ExecuteCampaignResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ExecuteCampaignResponse_Workflows_2fGeneralGoWorkflows_2fgeneral_5fgo_5fworkflows_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ExecuteCampaignResponse_Workflows_2fGeneralGoWorkflows_2fgeneral_5fgo_5fworkflows_2eproto}, {}};

static void InitDefaultsscc_info_ExecuteUserJourneyCampaignRequest_Workflows_2fGeneralGoWorkflows_2fgeneral_5fgo_5fworkflows_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::farm::nurture::core::contracts::workflows::generalgo::_ExecuteUserJourneyCampaignRequest_default_instance_;
    new (ptr) ::farm::nurture::core::contracts::workflows::generalgo::ExecuteUserJourneyCampaignRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_ExecuteUserJourneyCampaignRequest_Workflows_2fGeneralGoWorkflows_2fgeneral_5fgo_5fworkflows_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_ExecuteUserJourneyCampaignRequest_Workflows_2fGeneralGoWorkflows_2fgeneral_5fgo_5fworkflows_2eproto}, {
      &scc_info_RequestHeaders_Common_2fheaders_2eproto.base,
      &scc_info_Duration_google_2fprotobuf_2fduration_2eproto.base,}};

static void InitDefaultsscc_info_ExecuteUserJourneyCampaignResponse_Workflows_2fGeneralGoWorkflows_2fgeneral_5fgo_5fworkflows_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::farm::nurture::core::contracts::workflows::generalgo::_ExecuteUserJourneyCampaignResponse_default_instance_;
    new (ptr) ::farm::nurture::core::contracts::workflows::generalgo::ExecuteUserJourneyCampaignResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ExecuteUserJourneyCampaignResponse_Workflows_2fGeneralGoWorkflows_2fgeneral_5fgo_5fworkflows_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ExecuteUserJourneyCampaignResponse_Workflows_2fGeneralGoWorkflows_2fgeneral_5fgo_5fworkflows_2eproto}, {}};

static void InitDefaultsscc_info_HandoverOtpRequest_Workflows_2fGeneralGoWorkflows_2fgeneral_5fgo_5fworkflows_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::farm::nurture::core::contracts::workflows::generalgo::_HandoverOtpRequest_default_instance_;
    new (ptr) ::farm::nurture::core::contracts::workflows::generalgo::HandoverOtpRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_HandoverOtpRequest_Workflows_2fGeneralGoWorkflows_2fgeneral_5fgo_5fworkflows_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_HandoverOtpRequest_Workflows_2fGeneralGoWorkflows_2fgeneral_5fgo_5fworkflows_2eproto}, {
      &scc_info_ActorID_Common_2fentities_2eproto.base,}};

static void InitDefaultsscc_info_HandoverOtpResponse_Workflows_2fGeneralGoWorkflows_2fgeneral_5fgo_5fworkflows_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::farm::nurture::core::contracts::workflows::generalgo::_HandoverOtpResponse_default_instance_;
    new (ptr) ::farm::nurture::core::contracts::workflows::generalgo::HandoverOtpResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_HandoverOtpResponse_Workflows_2fGeneralGoWorkflows_2fgeneral_5fgo_5fworkflows_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_HandoverOtpResponse_Workflows_2fGeneralGoWorkflows_2fgeneral_5fgo_5fworkflows_2eproto}, {}};

static void InitDefaultsscc_info_InsurancePurchaseEventRequest_Workflows_2fGeneralGoWorkflows_2fgeneral_5fgo_5fworkflows_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::farm::nurture::core::contracts::workflows::generalgo::_InsurancePurchaseEventRequest_default_instance_;
    new (ptr) ::farm::nurture::core::contracts::workflows::generalgo::InsurancePurchaseEventRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_InsurancePurchaseEventRequest_Workflows_2fGeneralGoWorkflows_2fgeneral_5fgo_5fworkflows_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_InsurancePurchaseEventRequest_Workflows_2fGeneralGoWorkflows_2fgeneral_5fgo_5fworkflows_2eproto}, {
      &scc_info_ActorID_Common_2fentities_2eproto.base,}};

static void InitDefaultsscc_info_InsurancePurchaseEventResponse_Workflows_2fGeneralGoWorkflows_2fgeneral_5fgo_5fworkflows_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::farm::nurture::core::contracts::workflows::generalgo::_InsurancePurchaseEventResponse_default_instance_;
    new (ptr) ::farm::nurture::core::contracts::workflows::generalgo::InsurancePurchaseEventResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_InsurancePurchaseEventResponse_Workflows_2fGeneralGoWorkflows_2fgeneral_5fgo_5fworkflows_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_InsurancePurchaseEventResponse_Workflows_2fGeneralGoWorkflows_2fgeneral_5fgo_5fworkflows_2eproto}, {}};

static void InitDefaultsscc_info_IotComputationRequest_Workflows_2fGeneralGoWorkflows_2fgeneral_5fgo_5fworkflows_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::farm::nurture::core::contracts::workflows::generalgo::_IotComputationRequest_default_instance_;
    new (ptr) ::farm::nurture::core::contracts::workflows::generalgo::IotComputationRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_IotComputationRequest_Workflows_2fGeneralGoWorkflows_2fgeneral_5fgo_5fworkflows_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_IotComputationRequest_Workflows_2fGeneralGoWorkflows_2fgeneral_5fgo_5fworkflows_2eproto}, {}};

static void InitDefaultsscc_info_IotComputationResponse_Workflows_2fGeneralGoWorkflows_2fgeneral_5fgo_5fworkflows_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::farm::nurture::core::contracts::workflows::generalgo::_IotComputationResponse_default_instance_;
    new (ptr) ::farm::nurture::core::contracts::workflows::generalgo::IotComputationResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_IotComputationResponse_Workflows_2fGeneralGoWorkflows_2fgeneral_5fgo_5fworkflows_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_IotComputationResponse_Workflows_2fGeneralGoWorkflows_2fgeneral_5fgo_5fworkflows_2eproto}, {}};

static void InitDefaultsscc_info_OfferInsuranceRewardRequest_Workflows_2fGeneralGoWorkflows_2fgeneral_5fgo_5fworkflows_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::farm::nurture::core::contracts::workflows::generalgo::_OfferInsuranceRewardRequest_default_instance_;
    new (ptr) ::farm::nurture::core::contracts::workflows::generalgo::OfferInsuranceRewardRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<3> scc_info_OfferInsuranceRewardRequest_Workflows_2fGeneralGoWorkflows_2fgeneral_5fgo_5fworkflows_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 3, 0, InitDefaultsscc_info_OfferInsuranceRewardRequest_Workflows_2fGeneralGoWorkflows_2fgeneral_5fgo_5fworkflows_2eproto}, {
      &scc_info_ActorID_Common_2fentities_2eproto.base,
      &scc_info_Location_Common_2fentities_2eproto.base,
      &scc_info_Attributes_Workflows_2fGeneralGoWorkflows_2fgeneral_5fgo_5fworkflows_2eproto.base,}};

static void InitDefaultsscc_info_OfferInsuranceRewardResponse_Workflows_2fGeneralGoWorkflows_2fgeneral_5fgo_5fworkflows_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::farm::nurture::core::contracts::workflows::generalgo::_OfferInsuranceRewardResponse_default_instance_;
    new (ptr) ::farm::nurture::core::contracts::workflows::generalgo::OfferInsuranceRewardResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_OfferInsuranceRewardResponse_Workflows_2fGeneralGoWorkflows_2fgeneral_5fgo_5fworkflows_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_OfferInsuranceRewardResponse_Workflows_2fGeneralGoWorkflows_2fgeneral_5fgo_5fworkflows_2eproto}, {}};

static void InitDefaultsscc_info_OfferRewardRequest_Workflows_2fGeneralGoWorkflows_2fgeneral_5fgo_5fworkflows_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::farm::nurture::core::contracts::workflows::generalgo::_OfferRewardRequest_default_instance_;
    new (ptr) ::farm::nurture::core::contracts::workflows::generalgo::OfferRewardRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<3> scc_info_OfferRewardRequest_Workflows_2fGeneralGoWorkflows_2fgeneral_5fgo_5fworkflows_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 3, 0, InitDefaultsscc_info_OfferRewardRequest_Workflows_2fGeneralGoWorkflows_2fgeneral_5fgo_5fworkflows_2eproto}, {
      &scc_info_ActorID_Common_2fentities_2eproto.base,
      &scc_info_Timestamp_google_2fprotobuf_2ftimestamp_2eproto.base,
      &scc_info_Attributes_Workflows_2fGeneralGoWorkflows_2fgeneral_5fgo_5fworkflows_2eproto.base,}};

static void InitDefaultsscc_info_OfferRewardResponse_Workflows_2fGeneralGoWorkflows_2fgeneral_5fgo_5fworkflows_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::farm::nurture::core::contracts::workflows::generalgo::_OfferRewardResponse_default_instance_;
    new (ptr) ::farm::nurture::core::contracts::workflows::generalgo::OfferRewardResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_OfferRewardResponse_Workflows_2fGeneralGoWorkflows_2fgeneral_5fgo_5fworkflows_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_OfferRewardResponse_Workflows_2fGeneralGoWorkflows_2fgeneral_5fgo_5fworkflows_2eproto}, {}};

static void InitDefaultsscc_info_PostPusaSprayPopUpRequest_Workflows_2fGeneralGoWorkflows_2fgeneral_5fgo_5fworkflows_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::farm::nurture::core::contracts::workflows::generalgo::_PostPusaSprayPopUpRequest_default_instance_;
    new (ptr) ::farm::nurture::core::contracts::workflows::generalgo::PostPusaSprayPopUpRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_PostPusaSprayPopUpRequest_Workflows_2fGeneralGoWorkflows_2fgeneral_5fgo_5fworkflows_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_PostPusaSprayPopUpRequest_Workflows_2fGeneralGoWorkflows_2fgeneral_5fgo_5fworkflows_2eproto}, {
      &scc_info_ActorID_Common_2fentities_2eproto.base,}};

static void InitDefaultsscc_info_PostPusaSprayPopUpResponse_Workflows_2fGeneralGoWorkflows_2fgeneral_5fgo_5fworkflows_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::farm::nurture::core::contracts::workflows::generalgo::_PostPusaSprayPopUpResponse_default_instance_;
    new (ptr) ::farm::nurture::core::contracts::workflows::generalgo::PostPusaSprayPopUpResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_PostPusaSprayPopUpResponse_Workflows_2fGeneralGoWorkflows_2fgeneral_5fgo_5fworkflows_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_PostPusaSprayPopUpResponse_Workflows_2fGeneralGoWorkflows_2fgeneral_5fgo_5fworkflows_2eproto}, {}};

static void InitDefaultsscc_info_PostServiceFeedbackPNRequest_Workflows_2fGeneralGoWorkflows_2fgeneral_5fgo_5fworkflows_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::farm::nurture::core::contracts::workflows::generalgo::_PostServiceFeedbackPNRequest_default_instance_;
    new (ptr) ::farm::nurture::core::contracts::workflows::generalgo::PostServiceFeedbackPNRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_PostServiceFeedbackPNRequest_Workflows_2fGeneralGoWorkflows_2fgeneral_5fgo_5fworkflows_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_PostServiceFeedbackPNRequest_Workflows_2fGeneralGoWorkflows_2fgeneral_5fgo_5fworkflows_2eproto}, {
      &scc_info_ActorID_Common_2fentities_2eproto.base,}};

static void InitDefaultsscc_info_PostServiceFeedbackPNResponse_Workflows_2fGeneralGoWorkflows_2fgeneral_5fgo_5fworkflows_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::farm::nurture::core::contracts::workflows::generalgo::_PostServiceFeedbackPNResponse_default_instance_;
    new (ptr) ::farm::nurture::core::contracts::workflows::generalgo::PostServiceFeedbackPNResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_PostServiceFeedbackPNResponse_Workflows_2fGeneralGoWorkflows_2fgeneral_5fgo_5fworkflows_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_PostServiceFeedbackPNResponse_Workflows_2fGeneralGoWorkflows_2fgeneral_5fgo_5fworkflows_2eproto}, {}};

static void InitDefaultsscc_info_PreventiveMaintenanceTriggerRequest_Workflows_2fGeneralGoWorkflows_2fgeneral_5fgo_5fworkflows_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::farm::nurture::core::contracts::workflows::generalgo::_PreventiveMaintenanceTriggerRequest_default_instance_;
    new (ptr) ::farm::nurture::core::contracts::workflows::generalgo::PreventiveMaintenanceTriggerRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_PreventiveMaintenanceTriggerRequest_Workflows_2fGeneralGoWorkflows_2fgeneral_5fgo_5fworkflows_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_PreventiveMaintenanceTriggerRequest_Workflows_2fGeneralGoWorkflows_2fgeneral_5fgo_5fworkflows_2eproto}, {}};

static void InitDefaultsscc_info_PreventiveMaintenanceTriggerResponse_Workflows_2fGeneralGoWorkflows_2fgeneral_5fgo_5fworkflows_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::farm::nurture::core::contracts::workflows::generalgo::_PreventiveMaintenanceTriggerResponse_default_instance_;
    new (ptr) ::farm::nurture::core::contracts::workflows::generalgo::PreventiveMaintenanceTriggerResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_PreventiveMaintenanceTriggerResponse_Workflows_2fGeneralGoWorkflows_2fgeneral_5fgo_5fworkflows_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_PreventiveMaintenanceTriggerResponse_Workflows_2fGeneralGoWorkflows_2fgeneral_5fgo_5fworkflows_2eproto}, {}};

static void InitDefaultsscc_info_RefreshUserContentRequest_Workflows_2fGeneralGoWorkflows_2fgeneral_5fgo_5fworkflows_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::farm::nurture::core::contracts::workflows::generalgo::_RefreshUserContentRequest_default_instance_;
    new (ptr) ::farm::nurture::core::contracts::workflows::generalgo::RefreshUserContentRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_RefreshUserContentRequest_Workflows_2fGeneralGoWorkflows_2fgeneral_5fgo_5fworkflows_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_RefreshUserContentRequest_Workflows_2fGeneralGoWorkflows_2fgeneral_5fgo_5fworkflows_2eproto}, {
      &scc_info_ActorID_Common_2fentities_2eproto.base,}};

static void InitDefaultsscc_info_RefreshUserContentResponse_Workflows_2fGeneralGoWorkflows_2fgeneral_5fgo_5fworkflows_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::farm::nurture::core::contracts::workflows::generalgo::_RefreshUserContentResponse_default_instance_;
    new (ptr) ::farm::nurture::core::contracts::workflows::generalgo::RefreshUserContentResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_RefreshUserContentResponse_Workflows_2fGeneralGoWorkflows_2fgeneral_5fgo_5fworkflows_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_RefreshUserContentResponse_Workflows_2fGeneralGoWorkflows_2fgeneral_5fgo_5fworkflows_2eproto}, {}};

static void InitDefaultsscc_info_RescheduleMachinePreventiveMaintenanceRequest_Workflows_2fGeneralGoWorkflows_2fgeneral_5fgo_5fworkflows_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::farm::nurture::core::contracts::workflows::generalgo::_RescheduleMachinePreventiveMaintenanceRequest_default_instance_;
    new (ptr) ::farm::nurture::core::contracts::workflows::generalgo::RescheduleMachinePreventiveMaintenanceRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_RescheduleMachinePreventiveMaintenanceRequest_Workflows_2fGeneralGoWorkflows_2fgeneral_5fgo_5fworkflows_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_RescheduleMachinePreventiveMaintenanceRequest_Workflows_2fGeneralGoWorkflows_2fgeneral_5fgo_5fworkflows_2eproto}, {}};

static void InitDefaultsscc_info_RescheduleMachinePreventiveMaintenanceResponse_Workflows_2fGeneralGoWorkflows_2fgeneral_5fgo_5fworkflows_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::farm::nurture::core::contracts::workflows::generalgo::_RescheduleMachinePreventiveMaintenanceResponse_default_instance_;
    new (ptr) ::farm::nurture::core::contracts::workflows::generalgo::RescheduleMachinePreventiveMaintenanceResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_RescheduleMachinePreventiveMaintenanceResponse_Workflows_2fGeneralGoWorkflows_2fgeneral_5fgo_5fworkflows_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_RescheduleMachinePreventiveMaintenanceResponse_Workflows_2fGeneralGoWorkflows_2fgeneral_5fgo_5fworkflows_2eproto}, {}};

static void InitDefaultsscc_info_ScoreComputationRequest_Workflows_2fGeneralGoWorkflows_2fgeneral_5fgo_5fworkflows_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::farm::nurture::core::contracts::workflows::generalgo::_ScoreComputationRequest_default_instance_;
    new (ptr) ::farm::nurture::core::contracts::workflows::generalgo::ScoreComputationRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ScoreComputationRequest_Workflows_2fGeneralGoWorkflows_2fgeneral_5fgo_5fworkflows_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ScoreComputationRequest_Workflows_2fGeneralGoWorkflows_2fgeneral_5fgo_5fworkflows_2eproto}, {}};

static void InitDefaultsscc_info_ScoreComputationResponse_Workflows_2fGeneralGoWorkflows_2fgeneral_5fgo_5fworkflows_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::farm::nurture::core::contracts::workflows::generalgo::_ScoreComputationResponse_default_instance_;
    new (ptr) ::farm::nurture::core::contracts::workflows::generalgo::ScoreComputationResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ScoreComputationResponse_Workflows_2fGeneralGoWorkflows_2fgeneral_5fgo_5fworkflows_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ScoreComputationResponse_Workflows_2fGeneralGoWorkflows_2fgeneral_5fgo_5fworkflows_2eproto}, {}};

static void InitDefaultsscc_info_TriggerF2FPointExpiryCronRequest_Workflows_2fGeneralGoWorkflows_2fgeneral_5fgo_5fworkflows_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::farm::nurture::core::contracts::workflows::generalgo::_TriggerF2FPointExpiryCronRequest_default_instance_;
    new (ptr) ::farm::nurture::core::contracts::workflows::generalgo::TriggerF2FPointExpiryCronRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_TriggerF2FPointExpiryCronRequest_Workflows_2fGeneralGoWorkflows_2fgeneral_5fgo_5fworkflows_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_TriggerF2FPointExpiryCronRequest_Workflows_2fGeneralGoWorkflows_2fgeneral_5fgo_5fworkflows_2eproto}, {}};

static void InitDefaultsscc_info_TriggerF2FPointExpiryCronResponse_Workflows_2fGeneralGoWorkflows_2fgeneral_5fgo_5fworkflows_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::farm::nurture::core::contracts::workflows::generalgo::_TriggerF2FPointExpiryCronResponse_default_instance_;
    new (ptr) ::farm::nurture::core::contracts::workflows::generalgo::TriggerF2FPointExpiryCronResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_TriggerF2FPointExpiryCronResponse_Workflows_2fGeneralGoWorkflows_2fgeneral_5fgo_5fworkflows_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_TriggerF2FPointExpiryCronResponse_Workflows_2fGeneralGoWorkflows_2fgeneral_5fgo_5fworkflows_2eproto}, {}};

static void InitDefaultsscc_info_UpdateActorsMachinePreventiveMaintenanceRequest_Workflows_2fGeneralGoWorkflows_2fgeneral_5fgo_5fworkflows_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::farm::nurture::core::contracts::workflows::generalgo::_UpdateActorsMachinePreventiveMaintenanceRequest_default_instance_;
    new (ptr) ::farm::nurture::core::contracts::workflows::generalgo::UpdateActorsMachinePreventiveMaintenanceRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_UpdateActorsMachinePreventiveMaintenanceRequest_Workflows_2fGeneralGoWorkflows_2fgeneral_5fgo_5fworkflows_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_UpdateActorsMachinePreventiveMaintenanceRequest_Workflows_2fGeneralGoWorkflows_2fgeneral_5fgo_5fworkflows_2eproto}, {
      &scc_info_ActorID_Common_2fentities_2eproto.base,}};

static void InitDefaultsscc_info_UpdateActorsMachinePreventiveMaintenanceResponse_Workflows_2fGeneralGoWorkflows_2fgeneral_5fgo_5fworkflows_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::farm::nurture::core::contracts::workflows::generalgo::_UpdateActorsMachinePreventiveMaintenanceResponse_default_instance_;
    new (ptr) ::farm::nurture::core::contracts::workflows::generalgo::UpdateActorsMachinePreventiveMaintenanceResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_UpdateActorsMachinePreventiveMaintenanceResponse_Workflows_2fGeneralGoWorkflows_2fgeneral_5fgo_5fworkflows_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_UpdateActorsMachinePreventiveMaintenanceResponse_Workflows_2fGeneralGoWorkflows_2fgeneral_5fgo_5fworkflows_2eproto}, {}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_Workflows_2fGeneralGoWorkflows_2fgeneral_5fgo_5fworkflows_2eproto[36];
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_Workflows_2fGeneralGoWorkflows_2fgeneral_5fgo_5fworkflows_2eproto[1];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_Workflows_2fGeneralGoWorkflows_2fgeneral_5fgo_5fworkflows_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_Workflows_2fGeneralGoWorkflows_2fgeneral_5fgo_5fworkflows_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::farm::nurture::core::contracts::workflows::generalgo::ClearStaleCreatedOrderRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::farm::nurture::core::contracts::workflows::generalgo::ClearStaleCreatedOrderRequest, requestheaders_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::farm::nurture::core::contracts::workflows::generalgo::ClearStaleCreatedOrderResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::farm::nurture::core::contracts::workflows::generalgo::ClearStaleCreatedOrderResponse, status_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::farm::nurture::core::contracts::workflows::generalgo::ScoreComputationRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::farm::nurture::core::contracts::workflows::generalgo::ScoreComputationRequest, scoring_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::farm::nurture::core::contracts::workflows::generalgo::ScoreComputationResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::farm::nurture::core::contracts::workflows::generalgo::ScoreComputationResponse, status_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::farm::nurture::core::contracts::workflows::generalgo::IotComputationRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::farm::nurture::core::contracts::workflows::generalgo::IotComputationResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::farm::nurture::core::contracts::workflows::generalgo::IotComputationResponse, status_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::farm::nurture::core::contracts::workflows::generalgo::PostServiceFeedbackPNRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::farm::nurture::core::contracts::workflows::generalgo::PostServiceFeedbackPNRequest, actor_),
  PROTOBUF_FIELD_OFFSET(::farm::nurture::core::contracts::workflows::generalgo::PostServiceFeedbackPNRequest, languagecode_),
  PROTOBUF_FIELD_OFFSET(::farm::nurture::core::contracts::workflows::generalgo::PostServiceFeedbackPNRequest, servicename_),
  PROTOBUF_FIELD_OFFSET(::farm::nurture::core::contracts::workflows::generalgo::PostServiceFeedbackPNRequest, externaltype_),
  PROTOBUF_FIELD_OFFSET(::farm::nurture::core::contracts::workflows::generalgo::PostServiceFeedbackPNRequest, externalid_),
  PROTOBUF_FIELD_OFFSET(::farm::nurture::core::contracts::workflows::generalgo::PostServiceFeedbackPNRequest, feature_),
  PROTOBUF_FIELD_OFFSET(::farm::nurture::core::contracts::workflows::generalgo::PostServiceFeedbackPNRequest, namespace__),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::farm::nurture::core::contracts::workflows::generalgo::PostPusaSprayPopUpRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::farm::nurture::core::contracts::workflows::generalgo::PostPusaSprayPopUpRequest, actor_),
  PROTOBUF_FIELD_OFFSET(::farm::nurture::core::contracts::workflows::generalgo::PostPusaSprayPopUpRequest, languagecode_),
  PROTOBUF_FIELD_OFFSET(::farm::nurture::core::contracts::workflows::generalgo::PostPusaSprayPopUpRequest, servicename_),
  PROTOBUF_FIELD_OFFSET(::farm::nurture::core::contracts::workflows::generalgo::PostPusaSprayPopUpRequest, externaltype_),
  PROTOBUF_FIELD_OFFSET(::farm::nurture::core::contracts::workflows::generalgo::PostPusaSprayPopUpRequest, externalid_),
  PROTOBUF_FIELD_OFFSET(::farm::nurture::core::contracts::workflows::generalgo::PostPusaSprayPopUpRequest, namespace__),
  PROTOBUF_FIELD_OFFSET(::farm::nurture::core::contracts::workflows::generalgo::PostPusaSprayPopUpRequest, eventid_),
  PROTOBUF_FIELD_OFFSET(::farm::nurture::core::contracts::workflows::generalgo::PostPusaSprayPopUpRequest, farmid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::farm::nurture::core::contracts::workflows::generalgo::PostServiceFeedbackPNResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::farm::nurture::core::contracts::workflows::generalgo::PostServiceFeedbackPNResponse, status_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::farm::nurture::core::contracts::workflows::generalgo::PostPusaSprayPopUpResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::farm::nurture::core::contracts::workflows::generalgo::PostPusaSprayPopUpResponse, status_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::farm::nurture::core::contracts::workflows::generalgo::ExecuteUserJourneyCampaignRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::farm::nurture::core::contracts::workflows::generalgo::ExecuteUserJourneyCampaignRequest, requestheaders_),
  PROTOBUF_FIELD_OFFSET(::farm::nurture::core::contracts::workflows::generalgo::ExecuteUserJourneyCampaignRequest, campaignid_),
  PROTOBUF_FIELD_OFFSET(::farm::nurture::core::contracts::workflows::generalgo::ExecuteUserJourneyCampaignRequest, engagementvertexid_),
  PROTOBUF_FIELD_OFFSET(::farm::nurture::core::contracts::workflows::generalgo::ExecuteUserJourneyCampaignRequest, referenceid_),
  PROTOBUF_FIELD_OFFSET(::farm::nurture::core::contracts::workflows::generalgo::ExecuteUserJourneyCampaignRequest, waitduration_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::farm::nurture::core::contracts::workflows::generalgo::ExecuteUserJourneyCampaignResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::farm::nurture::core::contracts::workflows::generalgo::ExecuteUserJourneyCampaignResponse, status_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::farm::nurture::core::contracts::workflows::generalgo::ExecuteCampaignRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::farm::nurture::core::contracts::workflows::generalgo::ExecuteCampaignRequest, campaign_id_),
  PROTOBUF_FIELD_OFFSET(::farm::nurture::core::contracts::workflows::generalgo::ExecuteCampaignRequest, campaignscheduletype_),
  PROTOBUF_FIELD_OFFSET(::farm::nurture::core::contracts::workflows::generalgo::ExecuteCampaignRequest, inactionduration_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::farm::nurture::core::contracts::workflows::generalgo::ExecuteCampaignResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::farm::nurture::core::contracts::workflows::generalgo::ExecuteCampaignResponse, status_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::farm::nurture::core::contracts::workflows::generalgo::RefreshUserContentRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::farm::nurture::core::contracts::workflows::generalgo::RefreshUserContentRequest, actor_),
  PROTOBUF_FIELD_OFFSET(::farm::nurture::core::contracts::workflows::generalgo::RefreshUserContentRequest, languagecodes_),
  PROTOBUF_FIELD_OFFSET(::farm::nurture::core::contracts::workflows::generalgo::RefreshUserContentRequest, latitude_),
  PROTOBUF_FIELD_OFFSET(::farm::nurture::core::contracts::workflows::generalgo::RefreshUserContentRequest, longitude_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::farm::nurture::core::contracts::workflows::generalgo::RefreshUserContentResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::farm::nurture::core::contracts::workflows::generalgo::RefreshUserContentResponse, status_),
  PROTOBUF_FIELD_OFFSET(::farm::nurture::core::contracts::workflows::generalgo::RefreshUserContentResponse, contentids_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::farm::nurture::core::contracts::workflows::generalgo::PreventiveMaintenanceTriggerRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::farm::nurture::core::contracts::workflows::generalgo::PreventiveMaintenanceTriggerResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::farm::nurture::core::contracts::workflows::generalgo::PreventiveMaintenanceTriggerResponse, status_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::farm::nurture::core::contracts::workflows::generalgo::UpdateActorsMachinePreventiveMaintenanceRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::farm::nurture::core::contracts::workflows::generalgo::UpdateActorsMachinePreventiveMaintenanceRequest, actordetails_),
  PROTOBUF_FIELD_OFFSET(::farm::nurture::core::contracts::workflows::generalgo::UpdateActorsMachinePreventiveMaintenanceRequest, preventivemaintenanceid_),
  PROTOBUF_FIELD_OFFSET(::farm::nurture::core::contracts::workflows::generalgo::UpdateActorsMachinePreventiveMaintenanceRequest, machineid_),
  PROTOBUF_FIELD_OFFSET(::farm::nurture::core::contracts::workflows::generalgo::UpdateActorsMachinePreventiveMaintenanceRequest, machinepreventivemaintenanceid_),
  PROTOBUF_FIELD_OFFSET(::farm::nurture::core::contracts::workflows::generalgo::UpdateActorsMachinePreventiveMaintenanceRequest, pmstatus_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::farm::nurture::core::contracts::workflows::generalgo::UpdateActorsMachinePreventiveMaintenanceResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::farm::nurture::core::contracts::workflows::generalgo::UpdateActorsMachinePreventiveMaintenanceResponse, status_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::farm::nurture::core::contracts::workflows::generalgo::RescheduleMachinePreventiveMaintenanceRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::farm::nurture::core::contracts::workflows::generalgo::RescheduleMachinePreventiveMaintenanceRequest, machineid_),
  PROTOBUF_FIELD_OFFSET(::farm::nurture::core::contracts::workflows::generalgo::RescheduleMachinePreventiveMaintenanceRequest, date_),
  PROTOBUF_FIELD_OFFSET(::farm::nurture::core::contracts::workflows::generalgo::RescheduleMachinePreventiveMaintenanceRequest, machinepreventivemaintenanceid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::farm::nurture::core::contracts::workflows::generalgo::RescheduleMachinePreventiveMaintenanceResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::farm::nurture::core::contracts::workflows::generalgo::RescheduleMachinePreventiveMaintenanceResponse, status_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::farm::nurture::core::contracts::workflows::generalgo::HandoverOtpRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::farm::nurture::core::contracts::workflows::generalgo::HandoverOtpRequest, otp_),
  PROTOBUF_FIELD_OFFSET(::farm::nurture::core::contracts::workflows::generalgo::HandoverOtpRequest, actordetails_),
  PROTOBUF_FIELD_OFFSET(::farm::nurture::core::contracts::workflows::generalgo::HandoverOtpRequest, mobilenumber_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::farm::nurture::core::contracts::workflows::generalgo::HandoverOtpResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::farm::nurture::core::contracts::workflows::generalgo::HandoverOtpResponse, status_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::farm::nurture::core::contracts::workflows::generalgo::Attributes, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::farm::nurture::core::contracts::workflows::generalgo::Attributes, key_),
  PROTOBUF_FIELD_OFFSET(::farm::nurture::core::contracts::workflows::generalgo::Attributes, value_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::farm::nurture::core::contracts::workflows::generalgo::OfferRewardRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::farm::nurture::core::contracts::workflows::generalgo::OfferRewardRequest, id_),
  PROTOBUF_FIELD_OFFSET(::farm::nurture::core::contracts::workflows::generalgo::OfferRewardRequest, userdetails_),
  PROTOBUF_FIELD_OFFSET(::farm::nurture::core::contracts::workflows::generalgo::OfferRewardRequest, useractiontype_),
  PROTOBUF_FIELD_OFFSET(::farm::nurture::core::contracts::workflows::generalgo::OfferRewardRequest, rewardtype_),
  PROTOBUF_FIELD_OFFSET(::farm::nurture::core::contracts::workflows::generalgo::OfferRewardRequest, rewardpoints_),
  PROTOBUF_FIELD_OFFSET(::farm::nurture::core::contracts::workflows::generalgo::OfferRewardRequest, allottedtime_),
  PROTOBUF_FIELD_OFFSET(::farm::nurture::core::contracts::workflows::generalgo::OfferRewardRequest, source_),
  PROTOBUF_FIELD_OFFSET(::farm::nurture::core::contracts::workflows::generalgo::OfferRewardRequest, sourcereferenceid_),
  PROTOBUF_FIELD_OFFSET(::farm::nurture::core::contracts::workflows::generalgo::OfferRewardRequest, correctionid_),
  PROTOBUF_FIELD_OFFSET(::farm::nurture::core::contracts::workflows::generalgo::OfferRewardRequest, parentcorrectionid_),
  PROTOBUF_FIELD_OFFSET(::farm::nurture::core::contracts::workflows::generalgo::OfferRewardRequest, titlekey_),
  PROTOBUF_FIELD_OFFSET(::farm::nurture::core::contracts::workflows::generalgo::OfferRewardRequest, descriptionkey_),
  PROTOBUF_FIELD_OFFSET(::farm::nurture::core::contracts::workflows::generalgo::OfferRewardRequest, validfrom_),
  PROTOBUF_FIELD_OFFSET(::farm::nurture::core::contracts::workflows::generalgo::OfferRewardRequest, validto_),
  PROTOBUF_FIELD_OFFSET(::farm::nurture::core::contracts::workflows::generalgo::OfferRewardRequest, attributes_),
  PROTOBUF_FIELD_OFFSET(::farm::nurture::core::contracts::workflows::generalgo::OfferRewardRequest, status_),
  PROTOBUF_FIELD_OFFSET(::farm::nurture::core::contracts::workflows::generalgo::OfferRewardRequest, createdat_),
  PROTOBUF_FIELD_OFFSET(::farm::nurture::core::contracts::workflows::generalgo::OfferRewardRequest, updatedat_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::farm::nurture::core::contracts::workflows::generalgo::OfferRewardResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::farm::nurture::core::contracts::workflows::generalgo::OfferRewardResponse, status_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::farm::nurture::core::contracts::workflows::generalgo::DiscountedSprayServiceRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::farm::nurture::core::contracts::workflows::generalgo::DiscountedSprayServiceRequest, userdetails_),
  PROTOBUF_FIELD_OFFSET(::farm::nurture::core::contracts::workflows::generalgo::DiscountedSprayServiceRequest, bookingid_),
  PROTOBUF_FIELD_OFFSET(::farm::nurture::core::contracts::workflows::generalgo::DiscountedSprayServiceRequest, serviceid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::farm::nurture::core::contracts::workflows::generalgo::OfferInsuranceRewardRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::farm::nurture::core::contracts::workflows::generalgo::OfferInsuranceRewardRequest, userdetails_),
  PROTOBUF_FIELD_OFFSET(::farm::nurture::core::contracts::workflows::generalgo::OfferInsuranceRewardRequest, location_),
  PROTOBUF_FIELD_OFFSET(::farm::nurture::core::contracts::workflows::generalgo::OfferInsuranceRewardRequest, paymentmethod_),
  PROTOBUF_FIELD_OFFSET(::farm::nurture::core::contracts::workflows::generalgo::OfferInsuranceRewardRequest, schemequantities_),
  PROTOBUF_FIELD_OFFSET(::farm::nurture::core::contracts::workflows::generalgo::OfferInsuranceRewardRequest, offerid_),
  PROTOBUF_FIELD_OFFSET(::farm::nurture::core::contracts::workflows::generalgo::OfferInsuranceRewardRequest, languagecode_),
  PROTOBUF_FIELD_OFFSET(::farm::nurture::core::contracts::workflows::generalgo::OfferInsuranceRewardRequest, attributes_),
  PROTOBUF_FIELD_OFFSET(::farm::nurture::core::contracts::workflows::generalgo::OfferInsuranceRewardRequest, userrewardid_),
  PROTOBUF_FIELD_OFFSET(::farm::nurture::core::contracts::workflows::generalgo::OfferInsuranceRewardRequest, rewardtype_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::farm::nurture::core::contracts::workflows::generalgo::OfferInsuranceRewardResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::farm::nurture::core::contracts::workflows::generalgo::OfferInsuranceRewardResponse, status_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::farm::nurture::core::contracts::workflows::generalgo::CreatePartitionsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::farm::nurture::core::contracts::workflows::generalgo::CreatePartitionsRequest, tablename_),
  PROTOBUF_FIELD_OFFSET(::farm::nurture::core::contracts::workflows::generalgo::CreatePartitionsRequest, databasename_),
  PROTOBUF_FIELD_OFFSET(::farm::nurture::core::contracts::workflows::generalgo::CreatePartitionsRequest, bucket_),
  PROTOBUF_FIELD_OFFSET(::farm::nurture::core::contracts::workflows::generalgo::CreatePartitionsRequest, numberofdays_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::farm::nurture::core::contracts::workflows::generalgo::CreatePartitionsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::farm::nurture::core::contracts::workflows::generalgo::CreatePartitionsResponse, status_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::farm::nurture::core::contracts::workflows::generalgo::TriggerF2FPointExpiryCronRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::farm::nurture::core::contracts::workflows::generalgo::TriggerF2FPointExpiryCronRequest, cronexp_),
  PROTOBUF_FIELD_OFFSET(::farm::nurture::core::contracts::workflows::generalgo::TriggerF2FPointExpiryCronRequest, segmentid_),
  PROTOBUF_FIELD_OFFSET(::farm::nurture::core::contracts::workflows::generalgo::TriggerF2FPointExpiryCronRequest, expirypoints_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::farm::nurture::core::contracts::workflows::generalgo::TriggerF2FPointExpiryCronResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::farm::nurture::core::contracts::workflows::generalgo::TriggerF2FPointExpiryCronResponse, status_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::farm::nurture::core::contracts::workflows::generalgo::InsurancePurchaseEventRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::farm::nurture::core::contracts::workflows::generalgo::InsurancePurchaseEventRequest, actorid_),
  PROTOBUF_FIELD_OFFSET(::farm::nurture::core::contracts::workflows::generalgo::InsurancePurchaseEventRequest, userschemeid_),
  PROTOBUF_FIELD_OFFSET(::farm::nurture::core::contracts::workflows::generalgo::InsurancePurchaseEventRequest, servicetype_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::farm::nurture::core::contracts::workflows::generalgo::InsurancePurchaseEventResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::farm::nurture::core::contracts::workflows::generalgo::InsurancePurchaseEventResponse, status_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::farm::nurture::core::contracts::workflows::generalgo::ClearStaleCreatedOrderRequest)},
  { 6, -1, sizeof(::farm::nurture::core::contracts::workflows::generalgo::ClearStaleCreatedOrderResponse)},
  { 12, -1, sizeof(::farm::nurture::core::contracts::workflows::generalgo::ScoreComputationRequest)},
  { 18, -1, sizeof(::farm::nurture::core::contracts::workflows::generalgo::ScoreComputationResponse)},
  { 24, -1, sizeof(::farm::nurture::core::contracts::workflows::generalgo::IotComputationRequest)},
  { 29, -1, sizeof(::farm::nurture::core::contracts::workflows::generalgo::IotComputationResponse)},
  { 35, -1, sizeof(::farm::nurture::core::contracts::workflows::generalgo::PostServiceFeedbackPNRequest)},
  { 47, -1, sizeof(::farm::nurture::core::contracts::workflows::generalgo::PostPusaSprayPopUpRequest)},
  { 60, -1, sizeof(::farm::nurture::core::contracts::workflows::generalgo::PostServiceFeedbackPNResponse)},
  { 66, -1, sizeof(::farm::nurture::core::contracts::workflows::generalgo::PostPusaSprayPopUpResponse)},
  { 72, -1, sizeof(::farm::nurture::core::contracts::workflows::generalgo::ExecuteUserJourneyCampaignRequest)},
  { 82, -1, sizeof(::farm::nurture::core::contracts::workflows::generalgo::ExecuteUserJourneyCampaignResponse)},
  { 88, -1, sizeof(::farm::nurture::core::contracts::workflows::generalgo::ExecuteCampaignRequest)},
  { 96, -1, sizeof(::farm::nurture::core::contracts::workflows::generalgo::ExecuteCampaignResponse)},
  { 102, -1, sizeof(::farm::nurture::core::contracts::workflows::generalgo::RefreshUserContentRequest)},
  { 111, -1, sizeof(::farm::nurture::core::contracts::workflows::generalgo::RefreshUserContentResponse)},
  { 118, -1, sizeof(::farm::nurture::core::contracts::workflows::generalgo::PreventiveMaintenanceTriggerRequest)},
  { 123, -1, sizeof(::farm::nurture::core::contracts::workflows::generalgo::PreventiveMaintenanceTriggerResponse)},
  { 129, -1, sizeof(::farm::nurture::core::contracts::workflows::generalgo::UpdateActorsMachinePreventiveMaintenanceRequest)},
  { 139, -1, sizeof(::farm::nurture::core::contracts::workflows::generalgo::UpdateActorsMachinePreventiveMaintenanceResponse)},
  { 145, -1, sizeof(::farm::nurture::core::contracts::workflows::generalgo::RescheduleMachinePreventiveMaintenanceRequest)},
  { 153, -1, sizeof(::farm::nurture::core::contracts::workflows::generalgo::RescheduleMachinePreventiveMaintenanceResponse)},
  { 159, -1, sizeof(::farm::nurture::core::contracts::workflows::generalgo::HandoverOtpRequest)},
  { 167, -1, sizeof(::farm::nurture::core::contracts::workflows::generalgo::HandoverOtpResponse)},
  { 173, -1, sizeof(::farm::nurture::core::contracts::workflows::generalgo::Attributes)},
  { 180, -1, sizeof(::farm::nurture::core::contracts::workflows::generalgo::OfferRewardRequest)},
  { 203, -1, sizeof(::farm::nurture::core::contracts::workflows::generalgo::OfferRewardResponse)},
  { 209, -1, sizeof(::farm::nurture::core::contracts::workflows::generalgo::DiscountedSprayServiceRequest)},
  { 217, -1, sizeof(::farm::nurture::core::contracts::workflows::generalgo::OfferInsuranceRewardRequest)},
  { 231, -1, sizeof(::farm::nurture::core::contracts::workflows::generalgo::OfferInsuranceRewardResponse)},
  { 237, -1, sizeof(::farm::nurture::core::contracts::workflows::generalgo::CreatePartitionsRequest)},
  { 246, -1, sizeof(::farm::nurture::core::contracts::workflows::generalgo::CreatePartitionsResponse)},
  { 252, -1, sizeof(::farm::nurture::core::contracts::workflows::generalgo::TriggerF2FPointExpiryCronRequest)},
  { 260, -1, sizeof(::farm::nurture::core::contracts::workflows::generalgo::TriggerF2FPointExpiryCronResponse)},
  { 266, -1, sizeof(::farm::nurture::core::contracts::workflows::generalgo::InsurancePurchaseEventRequest)},
  { 274, -1, sizeof(::farm::nurture::core::contracts::workflows::generalgo::InsurancePurchaseEventResponse)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::farm::nurture::core::contracts::workflows::generalgo::_ClearStaleCreatedOrderRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::farm::nurture::core::contracts::workflows::generalgo::_ClearStaleCreatedOrderResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::farm::nurture::core::contracts::workflows::generalgo::_ScoreComputationRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::farm::nurture::core::contracts::workflows::generalgo::_ScoreComputationResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::farm::nurture::core::contracts::workflows::generalgo::_IotComputationRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::farm::nurture::core::contracts::workflows::generalgo::_IotComputationResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::farm::nurture::core::contracts::workflows::generalgo::_PostServiceFeedbackPNRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::farm::nurture::core::contracts::workflows::generalgo::_PostPusaSprayPopUpRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::farm::nurture::core::contracts::workflows::generalgo::_PostServiceFeedbackPNResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::farm::nurture::core::contracts::workflows::generalgo::_PostPusaSprayPopUpResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::farm::nurture::core::contracts::workflows::generalgo::_ExecuteUserJourneyCampaignRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::farm::nurture::core::contracts::workflows::generalgo::_ExecuteUserJourneyCampaignResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::farm::nurture::core::contracts::workflows::generalgo::_ExecuteCampaignRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::farm::nurture::core::contracts::workflows::generalgo::_ExecuteCampaignResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::farm::nurture::core::contracts::workflows::generalgo::_RefreshUserContentRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::farm::nurture::core::contracts::workflows::generalgo::_RefreshUserContentResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::farm::nurture::core::contracts::workflows::generalgo::_PreventiveMaintenanceTriggerRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::farm::nurture::core::contracts::workflows::generalgo::_PreventiveMaintenanceTriggerResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::farm::nurture::core::contracts::workflows::generalgo::_UpdateActorsMachinePreventiveMaintenanceRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::farm::nurture::core::contracts::workflows::generalgo::_UpdateActorsMachinePreventiveMaintenanceResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::farm::nurture::core::contracts::workflows::generalgo::_RescheduleMachinePreventiveMaintenanceRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::farm::nurture::core::contracts::workflows::generalgo::_RescheduleMachinePreventiveMaintenanceResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::farm::nurture::core::contracts::workflows::generalgo::_HandoverOtpRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::farm::nurture::core::contracts::workflows::generalgo::_HandoverOtpResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::farm::nurture::core::contracts::workflows::generalgo::_Attributes_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::farm::nurture::core::contracts::workflows::generalgo::_OfferRewardRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::farm::nurture::core::contracts::workflows::generalgo::_OfferRewardResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::farm::nurture::core::contracts::workflows::generalgo::_DiscountedSprayServiceRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::farm::nurture::core::contracts::workflows::generalgo::_OfferInsuranceRewardRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::farm::nurture::core::contracts::workflows::generalgo::_OfferInsuranceRewardResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::farm::nurture::core::contracts::workflows::generalgo::_CreatePartitionsRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::farm::nurture::core::contracts::workflows::generalgo::_CreatePartitionsResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::farm::nurture::core::contracts::workflows::generalgo::_TriggerF2FPointExpiryCronRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::farm::nurture::core::contracts::workflows::generalgo::_TriggerF2FPointExpiryCronResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::farm::nurture::core::contracts::workflows::generalgo::_InsurancePurchaseEventRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::farm::nurture::core::contracts::workflows::generalgo::_InsurancePurchaseEventResponse_default_instance_),
};

const char descriptor_table_protodef_Workflows_2fGeneralGoWorkflows_2fgeneral_5fgo_5fworkflows_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n7Workflows/GeneralGoWorkflows/general_g"
  "o_workflows.proto\022/farm.nurture.core.con"
  "tracts.workflows.generalgo\032\022Common/enums"
  ".proto\032\025Common/entities.proto\032$MachineSe"
  "rvice/machine_service.proto\032\024Common/head"
  "ers.proto\032.CommunicationEngine/communica"
  "tion_engine.proto\032&FeedbackService/feedb"
  "ack_service.proto\032(InsuranceService/insu"
  "rance_service.proto\032\037google/protobuf/tim"
  "estamp.proto\032\036google/protobuf/duration.p"
  "roto\"k\n\035ClearStaleCreatedOrderRequest\022J\n"
  "\016requestHeaders\030\001 \001(\01322.farm.nurture.cor"
  "e.contracts.common.RequestHeaders\"d\n\036Cle"
  "arStaleCreatedOrderResponse\022B\n\006status\030\001 "
  "\001(\01622.farm.nurture.core.contracts.common"
  ".ResponseStatus\"-\n\027ScoreComputationReque"
  "st\022\022\n\nscoring_id\030\001 \001(\003\"^\n\030ScoreComputati"
  "onResponse\022B\n\006status\030\001 \001(\01622.farm.nurtur"
  "e.core.contracts.common.ResponseStatus\"\027"
  "\n\025IotComputationRequest\"\\\n\026IotComputatio"
  "nResponse\022B\n\006status\030\001 \001(\01622.farm.nurture"
  ".core.contracts.common.ResponseStatus\"\266\002"
  "\n\034PostServiceFeedbackPNRequest\022:\n\005actor\030"
  "\001 \001(\0132+.farm.nurture.core.contracts.comm"
  "on.ActorID\022F\n\014languageCode\030\002 \001(\01620.farm."
  "nurture.core.contracts.common.LanguageCo"
  "de\022\023\n\013serviceName\030\003 \001(\t\022\024\n\014externalType\030"
  "\004 \001(\t\022\022\n\nexternalId\030\005 \001(\t\022\017\n\007feature\030\006 \001"
  "(\t\022B\n\tnamespace\030\007 \001(\0162/.farm.nurture.cor"
  "e.contracts.feedback.Namespace\"\303\002\n\031PostP"
  "usaSprayPopUpRequest\022:\n\005actor\030\001 \001(\0132+.fa"
  "rm.nurture.core.contracts.common.ActorID"
  "\022F\n\014languageCode\030\002 \001(\01620.farm.nurture.co"
  "re.contracts.common.LanguageCode\022\023\n\013serv"
  "iceName\030\003 \001(\t\022\024\n\014externalType\030\004 \001(\t\022\022\n\ne"
  "xternalId\030\005 \001(\t\022B\n\tnamespace\030\007 \001(\0162/.far"
  "m.nurture.core.contracts.feedback.Namesp"
  "ace\022\017\n\007eventId\030\010 \001(\003\022\016\n\006farmId\030\t \001(\003\"c\n\035"
  "PostServiceFeedbackPNResponse\022B\n\006status\030"
  "\001 \001(\01622.farm.nurture.core.contracts.comm"
  "on.ResponseStatus\"`\n\032PostPusaSprayPopUpR"
  "esponse\022B\n\006status\030\001 \001(\01622.farm.nurture.c"
  "ore.contracts.common.ResponseStatus\"\345\001\n!"
  "ExecuteUserJourneyCampaignRequest\022J\n\016req"
  "uestHeaders\030\001 \001(\01322.farm.nurture.core.co"
  "ntracts.common.RequestHeaders\022\022\n\ncampaig"
  "nId\030\002 \001(\003\022\032\n\022engagementVertexId\030\003 \001(\003\022\023\n"
  "\013referenceId\030\004 \001(\t\022/\n\014waitDuration\030\005 \001(\013"
  "2\031.google.protobuf.Duration\"h\n\"ExecuteUs"
  "erJourneyCampaignResponse\022B\n\006status\030\001 \001("
  "\01622.farm.nurture.core.contracts.common.R"
  "esponseStatus\"\272\001\n\026ExecuteCampaignRequest"
  "\022\023\n\013campaign_id\030\001 \001(\003\022V\n\024campaignSchedul"
  "eType\030\002 \001(\01628.farm.nurture.core.contract"
  "s.common.CampaignScheduleType\0223\n\020inactio"
  "nDuration\030\003 \001(\0132\031.google.protobuf.Durati"
  "on\"]\n\027ExecuteCampaignResponse\022B\n\006status\030"
  "\001 \001(\01622.farm.nurture.core.contracts.comm"
  "on.ResponseStatus\"\305\001\n\031RefreshUserContent"
  "Request\022:\n\005actor\030\001 \001(\0132+.farm.nurture.co"
  "re.contracts.common.ActorID\022G\n\rlanguageC"
  "odes\030\002 \003(\01620.farm.nurture.core.contracts"
  ".common.LanguageCode\022\020\n\010latitude\030\006 \001(\001\022\021"
  "\n\tlongitude\030\007 \001(\001\"t\n\032RefreshUserContentR"
  "esponse\022B\n\006status\030\001 \001(\01622.farm.nurture.c"
  "ore.contracts.common.ResponseStatus\022\022\n\nc"
  "ontentIds\030\002 \003(\003\"%\n#PreventiveMaintenance"
  "TriggerRequest\"j\n$PreventiveMaintenanceT"
  "riggerResponse\022B\n\006status\030\001 \001(\01622.farm.nu"
  "rture.core.contracts.common.ResponseStat"
  "us\"\237\002\n/UpdateActorsMachinePreventiveMain"
  "tenanceRequest\022A\n\014actorDetails\030\001 \003(\0132+.f"
  "arm.nurture.core.contracts.common.ActorI"
  "D\022\037\n\027preventiveMaintenanceId\030\002 \001(\005\022\021\n\tma"
  "chineId\030\003 \001(\003\022&\n\036machinePreventiveMainte"
  "nanceId\030\004 \001(\003\022M\n\010pmStatus\030\005 \001(\0162;.farm.n"
  "urture.core.contracts.ms.PreventiveMaint"
  "enanceStatus\"v\n0UpdateActorsMachinePreve"
  "ntiveMaintenanceResponse\022B\n\006status\030\001 \001(\016"
  "22.farm.nurture.core.contracts.common.Re"
  "sponseStatus\"x\n-RescheduleMachinePrevent"
  "iveMaintenanceRequest\022\021\n\tmachineId\030\001 \001(\003"
  "\022\014\n\004date\030\002 \001(\003\022&\n\036machinePreventiveMaint"
  "enanceId\030\003 \001(\003\"t\n.RescheduleMachinePreve"
  "ntiveMaintenanceResponse\022B\n\006status\030\001 \001(\016"
  "22.farm.nurture.core.contracts.common.Re"
  "sponseStatus\"z\n\022HandoverOtpRequest\022\013\n\003ot"
  "p\030\001 \001(\t\022A\n\014actorDetails\030\002 \001(\0132+.farm.nur"
  "ture.core.contracts.common.ActorID\022\024\n\014mo"
  "bileNumber\030\003 \001(\t\"Y\n\023HandoverOtpResponse\022"
  "B\n\006status\030\001 \001(\01622.farm.nurture.core.cont"
  "racts.common.ResponseStatus\"(\n\nAttribute"
  "s\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t\"\225\006\n\022OfferR"
  "ewardRequest\022\n\n\002id\030\001 \001(\003\022@\n\013userDetails\030"
  "\002 \001(\0132+.farm.nurture.core.contracts.comm"
  "on.ActorID\022J\n\016userActionType\030\003 \001(\01622.far"
  "m.nurture.core.contracts.common.UserActi"
  "onType\022B\n\nrewardType\030\004 \001(\0162..farm.nurtur"
  "e.core.contracts.common.RewardType\022\024\n\014re"
  "wardPoints\030\005 \001(\005\0220\n\014allottedTime\030\006 \001(\0132\032"
  ".google.protobuf.Timestamp\022\016\n\006source\030\007 \001"
  "(\t\022\031\n\021sourceReferenceId\030\010 \001(\t\022\024\n\014correct"
  "ionId\030\t \001(\t\022\032\n\022parentCorrectionId\030\n \001(\t\022"
  "\020\n\010titleKey\030\013 \001(\t\022\026\n\016descriptionKey\030\014 \001("
  "\t\022-\n\tvalidFrom\030\r \001(\0132\032.google.protobuf.T"
  "imestamp\022+\n\007validTo\030\016 \001(\0132\032.google.proto"
  "buf.Timestamp\022O\n\nattributes\030\017 \003(\0132;.farm"
  ".nurture.core.contracts.workflows.genera"
  "lgo.Attributes\022G\n\006status\030\020 \001(\01627.farm.nu"
  "rture.core.contracts.workflows.generalgo"
  ".Status\022-\n\tcreatedAt\030\022 \001(\0132\032.google.prot"
  "obuf.Timestamp\022-\n\tupdatedAt\030\023 \001(\0132\032.goog"
  "le.protobuf.Timestamp\"Y\n\023OfferRewardResp"
  "onse\022B\n\006status\030\001 \001(\01622.farm.nurture.core"
  ".contracts.common.ResponseStatus\"\207\001\n\035Dis"
  "countedSprayServiceRequest\022@\n\013userDetail"
  "s\030\001 \001(\0132+.farm.nurture.core.contracts.co"
  "mmon.ActorID\022\021\n\tbookingId\030\002 \001(\003\022\021\n\tservi"
  "ceId\030\003 \001(\003\"\207\004\n\033OfferInsuranceRewardReque"
  "st\022@\n\013userDetails\030\001 \001(\0132+.farm.nurture.c"
  "ore.contracts.common.ActorID\022>\n\010location"
  "\030\002 \001(\0132,.farm.nurture.core.contracts.com"
  "mon.Location\022H\n\rpaymentMethod\030\003 \001(\01621.fa"
  "rm.nurture.core.contracts.common.Payment"
  "Method\022\030\n\020schemeQuantities\030\004 \003(\003\022\017\n\007offe"
  "rId\030\005 \001(\003\022F\n\014languageCode\030\006 \001(\01620.farm.n"
  "urture.core.contracts.common.LanguageCod"
  "e\022O\n\nattributes\030\007 \003(\0132;.farm.nurture.cor"
  "e.contracts.workflows.generalgo.Attribut"
  "es\022\024\n\014userRewardId\030\010 \001(\003\022B\n\nrewardType\030\t"
  " \001(\0162..farm.nurture.core.contracts.commo"
  "n.RewardType\"b\n\034OfferInsuranceRewardResp"
  "onse\022B\n\006status\030\001 \001(\01622.farm.nurture.core"
  ".contracts.common.ResponseStatus\"h\n\027Crea"
  "tePartitionsRequest\022\021\n\ttableName\030\001 \001(\t\022\024"
  "\n\014databaseName\030\002 \001(\t\022\016\n\006bucket\030\003 \001(\t\022\024\n\014"
  "numberOfDays\030\004 \001(\003\"^\n\030CreatePartitionsRe"
  "sponse\022B\n\006status\030\001 \001(\01622.farm.nurture.co"
  "re.contracts.common.ResponseStatus\"\\\n Tr"
  "iggerF2FPointExpiryCronRequest\022\017\n\007cronEx"
  "p\030\001 \001(\t\022\021\n\tsegmentId\030\002 \001(\003\022\024\n\014expiryPoin"
  "ts\030\004 \001(\003\"g\n!TriggerF2FPointExpiryCronRes"
  "ponse\022B\n\006status\030\001 \001(\01622.farm.nurture.cor"
  "e.contracts.common.ResponseStatus\"\303\001\n\035In"
  "surancePurchaseEventRequest\022<\n\007actorId\030\001"
  " \001(\0132+.farm.nurture.core.contracts.commo"
  "n.ActorID\022\024\n\014userSchemeId\030\002 \001(\003\022N\n\013servi"
  "ceType\030\003 \001(\01629.farm.nurture.core.contrac"
  "ts.InsuranceService.ServiceType\"d\n\036Insur"
  "ancePurchaseEventResponse\022B\n\006status\030\001 \001("
  "\01622.farm.nurture.core.contracts.common.R"
  "esponseStatus*C\n\006Status\022\r\n\tNO_STATUS\020\000\022\017"
  "\n\013IN_PROGRESS\020\001\022\r\n\tCOMPLETED\020\002\022\n\n\006FAILED"
  "\020\0032\365\030\n\022GeneralGoWorkflows\022\230\001\n\013OfferRewar"
  "d\022C.farm.nurture.core.contracts.workflow"
  "s.generalgo.OfferRewardRequest\032D.farm.nu"
  "rture.core.contracts.workflows.generalgo"
  ".OfferRewardResponse\022\263\001\n\033OfferDiscounted"
  "SprayService\022N.farm.nurture.core.contrac"
  "ts.workflows.generalgo.DiscountedSpraySe"
  "rviceRequest\032D.farm.nurture.core.contrac"
  "ts.workflows.generalgo.OfferRewardRespon"
  "se\022\230\001\n\013HandoverOtp\022C.farm.nurture.core.c"
  "ontracts.workflows.generalgo.HandoverOtp"
  "Request\032D.farm.nurture.core.contracts.wo"
  "rkflows.generalgo.HandoverOtpResponse\022\351\001"
  "\n&RescheduleMachinePreventiveMaintenance"
  "\022^.farm.nurture.core.contracts.workflows"
  ".generalgo.RescheduleMachinePreventiveMa"
  "intenanceRequest\032_.farm.nurture.core.con"
  "tracts.workflows.generalgo.RescheduleMac"
  "hinePreventiveMaintenanceResponse\022\357\001\n(Up"
  "dateActorsMachinePreventiveMaintenance\022`"
  ".farm.nurture.core.contracts.workflows.g"
  "eneralgo.UpdateActorsMachinePreventiveMa"
  "intenanceRequest\032a.farm.nurture.core.con"
  "tracts.workflows.generalgo.UpdateActorsM"
  "achinePreventiveMaintenanceResponse\022\313\001\n\034"
  "PreventiveMaintenanceTrigger\022T.farm.nurt"
  "ure.core.contracts.workflows.generalgo.P"
  "reventiveMaintenanceTriggerRequest\032U.far"
  "m.nurture.core.contracts.workflows.gener"
  "algo.PreventiveMaintenanceTriggerRespons"
  "e\022\257\001\n\022RefreshUserContent\022J.farm.nurture."
  "core.contracts.workflows.generalgo.Refre"
  "shUserContentRequest\032K.farm.nurture.core"
  ".contracts.workflows.generalgo.RefreshUs"
  "erContentResponse\"\000\022\246\001\n\017ExecuteCampaign\022"
  "G.farm.nurture.core.contracts.workflows."
  "generalgo.ExecuteCampaignRequest\032H.farm."
  "nurture.core.contracts.workflows.general"
  "go.ExecuteCampaignResponse\"\000\022\266\001\n\025PostSer"
  "viceFeedbackPN\022M.farm.nurture.core.contr"
  "acts.workflows.generalgo.PostServiceFeed"
  "backPNRequest\032N.farm.nurture.core.contra"
  "cts.workflows.generalgo.PostServiceFeedb"
  "ackPNResponse\022\255\001\n\022PostPusaSprayPopUp\022J.f"
  "arm.nurture.core.contracts.workflows.gen"
  "eralgo.PostPusaSprayPopUpRequest\032K.farm."
  "nurture.core.contracts.workflows.general"
  "go.PostPusaSprayPopUpResponse\022\241\001\n\016IotCom"
  "putation\022F.farm.nurture.core.contracts.w"
  "orkflows.generalgo.IotComputationRequest"
  "\032G.farm.nurture.core.contracts.workflows"
  ".generalgo.IotComputationResponse\022\307\001\n\032Ex"
  "ecuteUserJourneyCampaign\022R.farm.nurture."
  "core.contracts.workflows.generalgo.Execu"
  "teUserJourneyCampaignRequest\032S.farm.nurt"
  "ure.core.contracts.workflows.generalgo.E"
  "xecuteUserJourneyCampaignResponse\"\000\022\264\001\n\025"
  "OfferInsuranceRewards\022L.farm.nurture.cor"
  "e.contracts.workflows.generalgo.OfferIns"
  "uranceRewardRequest\032M.farm.nurture.core."
  "contracts.workflows.generalgo.OfferInsur"
  "anceRewardResponse\022\247\001\n\020CreatePartitions\022"
  "H.farm.nurture.core.contracts.workflows."
  "generalgo.CreatePartitionsRequest\032I.farm"
  ".nurture.core.contracts.workflows.genera"
  "lgo.CreatePartitionsResponse\022\302\001\n\031Trigger"
  "F2FPointExpiryCron\022Q.farm.nurture.core.c"
  "ontracts.workflows.generalgo.TriggerF2FP"
  "ointExpiryCronRequest\032R.farm.nurture.cor"
  "e.contracts.workflows.generalgo.TriggerF"
  "2FPointExpiryCronResponse\022\275\001\n\032SendInsura"
  "ncePurchaseEvent\022N.farm.nurture.core.con"
  "tracts.workflows.generalgo.InsurancePurc"
  "haseEventRequest\032O.farm.nurture.core.con"
  "tracts.workflows.generalgo.InsurancePurc"
  "haseEventResponse\022\256\001\n\027ExecuteScoreComput"
  "ation\022H.farm.nurture.core.contracts.work"
  "flows.generalgo.ScoreComputationRequest\032"
  "I.farm.nurture.core.contracts.workflows."
  "generalgo.ScoreComputationResponseBr\n/fa"
  "rm.nurture.core.contracts.workflows.gene"
  "ralgoP\001Z=code.nurture.farm/Core/Contract"
  "s/Workflows/GeneralGoWorkflowsb\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_Workflows_2fGeneralGoWorkflows_2fgeneral_5fgo_5fworkflows_2eproto_deps[9] = {
  &::descriptor_table_Common_2fentities_2eproto,
  &::descriptor_table_Common_2fenums_2eproto,
  &::descriptor_table_Common_2fheaders_2eproto,
  &::descriptor_table_CommunicationEngine_2fcommunication_5fengine_2eproto,
  &::descriptor_table_FeedbackService_2ffeedback_5fservice_2eproto,
  &::descriptor_table_InsuranceService_2finsurance_5fservice_2eproto,
  &::descriptor_table_MachineService_2fmachine_5fservice_2eproto,
  &::descriptor_table_google_2fprotobuf_2fduration_2eproto,
  &::descriptor_table_google_2fprotobuf_2ftimestamp_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_Workflows_2fGeneralGoWorkflows_2fgeneral_5fgo_5fworkflows_2eproto_sccs[36] = {
  &scc_info_Attributes_Workflows_2fGeneralGoWorkflows_2fgeneral_5fgo_5fworkflows_2eproto.base,
  &scc_info_ClearStaleCreatedOrderRequest_Workflows_2fGeneralGoWorkflows_2fgeneral_5fgo_5fworkflows_2eproto.base,
  &scc_info_ClearStaleCreatedOrderResponse_Workflows_2fGeneralGoWorkflows_2fgeneral_5fgo_5fworkflows_2eproto.base,
  &scc_info_CreatePartitionsRequest_Workflows_2fGeneralGoWorkflows_2fgeneral_5fgo_5fworkflows_2eproto.base,
  &scc_info_CreatePartitionsResponse_Workflows_2fGeneralGoWorkflows_2fgeneral_5fgo_5fworkflows_2eproto.base,
  &scc_info_DiscountedSprayServiceRequest_Workflows_2fGeneralGoWorkflows_2fgeneral_5fgo_5fworkflows_2eproto.base,
  &scc_info_ExecuteCampaignRequest_Workflows_2fGeneralGoWorkflows_2fgeneral_5fgo_5fworkflows_2eproto.base,
  &scc_info_ExecuteCampaignResponse_Workflows_2fGeneralGoWorkflows_2fgeneral_5fgo_5fworkflows_2eproto.base,
  &scc_info_ExecuteUserJourneyCampaignRequest_Workflows_2fGeneralGoWorkflows_2fgeneral_5fgo_5fworkflows_2eproto.base,
  &scc_info_ExecuteUserJourneyCampaignResponse_Workflows_2fGeneralGoWorkflows_2fgeneral_5fgo_5fworkflows_2eproto.base,
  &scc_info_HandoverOtpRequest_Workflows_2fGeneralGoWorkflows_2fgeneral_5fgo_5fworkflows_2eproto.base,
  &scc_info_HandoverOtpResponse_Workflows_2fGeneralGoWorkflows_2fgeneral_5fgo_5fworkflows_2eproto.base,
  &scc_info_InsurancePurchaseEventRequest_Workflows_2fGeneralGoWorkflows_2fgeneral_5fgo_5fworkflows_2eproto.base,
  &scc_info_InsurancePurchaseEventResponse_Workflows_2fGeneralGoWorkflows_2fgeneral_5fgo_5fworkflows_2eproto.base,
  &scc_info_IotComputationRequest_Workflows_2fGeneralGoWorkflows_2fgeneral_5fgo_5fworkflows_2eproto.base,
  &scc_info_IotComputationResponse_Workflows_2fGeneralGoWorkflows_2fgeneral_5fgo_5fworkflows_2eproto.base,
  &scc_info_OfferInsuranceRewardRequest_Workflows_2fGeneralGoWorkflows_2fgeneral_5fgo_5fworkflows_2eproto.base,
  &scc_info_OfferInsuranceRewardResponse_Workflows_2fGeneralGoWorkflows_2fgeneral_5fgo_5fworkflows_2eproto.base,
  &scc_info_OfferRewardRequest_Workflows_2fGeneralGoWorkflows_2fgeneral_5fgo_5fworkflows_2eproto.base,
  &scc_info_OfferRewardResponse_Workflows_2fGeneralGoWorkflows_2fgeneral_5fgo_5fworkflows_2eproto.base,
  &scc_info_PostPusaSprayPopUpRequest_Workflows_2fGeneralGoWorkflows_2fgeneral_5fgo_5fworkflows_2eproto.base,
  &scc_info_PostPusaSprayPopUpResponse_Workflows_2fGeneralGoWorkflows_2fgeneral_5fgo_5fworkflows_2eproto.base,
  &scc_info_PostServiceFeedbackPNRequest_Workflows_2fGeneralGoWorkflows_2fgeneral_5fgo_5fworkflows_2eproto.base,
  &scc_info_PostServiceFeedbackPNResponse_Workflows_2fGeneralGoWorkflows_2fgeneral_5fgo_5fworkflows_2eproto.base,
  &scc_info_PreventiveMaintenanceTriggerRequest_Workflows_2fGeneralGoWorkflows_2fgeneral_5fgo_5fworkflows_2eproto.base,
  &scc_info_PreventiveMaintenanceTriggerResponse_Workflows_2fGeneralGoWorkflows_2fgeneral_5fgo_5fworkflows_2eproto.base,
  &scc_info_RefreshUserContentRequest_Workflows_2fGeneralGoWorkflows_2fgeneral_5fgo_5fworkflows_2eproto.base,
  &scc_info_RefreshUserContentResponse_Workflows_2fGeneralGoWorkflows_2fgeneral_5fgo_5fworkflows_2eproto.base,
  &scc_info_RescheduleMachinePreventiveMaintenanceRequest_Workflows_2fGeneralGoWorkflows_2fgeneral_5fgo_5fworkflows_2eproto.base,
  &scc_info_RescheduleMachinePreventiveMaintenanceResponse_Workflows_2fGeneralGoWorkflows_2fgeneral_5fgo_5fworkflows_2eproto.base,
  &scc_info_ScoreComputationRequest_Workflows_2fGeneralGoWorkflows_2fgeneral_5fgo_5fworkflows_2eproto.base,
  &scc_info_ScoreComputationResponse_Workflows_2fGeneralGoWorkflows_2fgeneral_5fgo_5fworkflows_2eproto.base,
  &scc_info_TriggerF2FPointExpiryCronRequest_Workflows_2fGeneralGoWorkflows_2fgeneral_5fgo_5fworkflows_2eproto.base,
  &scc_info_TriggerF2FPointExpiryCronResponse_Workflows_2fGeneralGoWorkflows_2fgeneral_5fgo_5fworkflows_2eproto.base,
  &scc_info_UpdateActorsMachinePreventiveMaintenanceRequest_Workflows_2fGeneralGoWorkflows_2fgeneral_5fgo_5fworkflows_2eproto.base,
  &scc_info_UpdateActorsMachinePreventiveMaintenanceResponse_Workflows_2fGeneralGoWorkflows_2fgeneral_5fgo_5fworkflows_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_Workflows_2fGeneralGoWorkflows_2fgeneral_5fgo_5fworkflows_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_Workflows_2fGeneralGoWorkflows_2fgeneral_5fgo_5fworkflows_2eproto = {
  false, false, descriptor_table_protodef_Workflows_2fGeneralGoWorkflows_2fgeneral_5fgo_5fworkflows_2eproto, "Workflows/GeneralGoWorkflows/general_go_workflows.proto", 9438,
  &descriptor_table_Workflows_2fGeneralGoWorkflows_2fgeneral_5fgo_5fworkflows_2eproto_once, descriptor_table_Workflows_2fGeneralGoWorkflows_2fgeneral_5fgo_5fworkflows_2eproto_sccs, descriptor_table_Workflows_2fGeneralGoWorkflows_2fgeneral_5fgo_5fworkflows_2eproto_deps, 36, 9,
  schemas, file_default_instances, TableStruct_Workflows_2fGeneralGoWorkflows_2fgeneral_5fgo_5fworkflows_2eproto::offsets,
  file_level_metadata_Workflows_2fGeneralGoWorkflows_2fgeneral_5fgo_5fworkflows_2eproto, 36, file_level_enum_descriptors_Workflows_2fGeneralGoWorkflows_2fgeneral_5fgo_5fworkflows_2eproto, file_level_service_descriptors_Workflows_2fGeneralGoWorkflows_2fgeneral_5fgo_5fworkflows_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_Workflows_2fGeneralGoWorkflows_2fgeneral_5fgo_5fworkflows_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_Workflows_2fGeneralGoWorkflows_2fgeneral_5fgo_5fworkflows_2eproto)), true);
namespace farm {
namespace nurture {
namespace core {
namespace contracts {
namespace workflows {
namespace generalgo {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Status_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_Workflows_2fGeneralGoWorkflows_2fgeneral_5fgo_5fworkflows_2eproto);
  return file_level_enum_descriptors_Workflows_2fGeneralGoWorkflows_2fgeneral_5fgo_5fworkflows_2eproto[0];
}
bool Status_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}


// ===================================================================

class ClearStaleCreatedOrderRequest::_Internal {
 public:
  static const ::farm::nurture::core::contracts::common::RequestHeaders& requestheaders(const ClearStaleCreatedOrderRequest* msg);
};

const ::farm::nurture::core::contracts::common::RequestHeaders&
ClearStaleCreatedOrderRequest::_Internal::requestheaders(const ClearStaleCreatedOrderRequest* msg) {
  return *msg->requestheaders_;
}
void ClearStaleCreatedOrderRequest::clear_requestheaders() {
  if (GetArena() == nullptr && requestheaders_ != nullptr) {
    delete requestheaders_;
  }
  requestheaders_ = nullptr;
}
ClearStaleCreatedOrderRequest::ClearStaleCreatedOrderRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:farm.nurture.core.contracts.workflows.generalgo.ClearStaleCreatedOrderRequest)
}
ClearStaleCreatedOrderRequest::ClearStaleCreatedOrderRequest(const ClearStaleCreatedOrderRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_requestheaders()) {
    requestheaders_ = new ::farm::nurture::core::contracts::common::RequestHeaders(*from.requestheaders_);
  } else {
    requestheaders_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:farm.nurture.core.contracts.workflows.generalgo.ClearStaleCreatedOrderRequest)
}

void ClearStaleCreatedOrderRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ClearStaleCreatedOrderRequest_Workflows_2fGeneralGoWorkflows_2fgeneral_5fgo_5fworkflows_2eproto.base);
  requestheaders_ = nullptr;
}

ClearStaleCreatedOrderRequest::~ClearStaleCreatedOrderRequest() {
  // @@protoc_insertion_point(destructor:farm.nurture.core.contracts.workflows.generalgo.ClearStaleCreatedOrderRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ClearStaleCreatedOrderRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete requestheaders_;
}

void ClearStaleCreatedOrderRequest::ArenaDtor(void* object) {
  ClearStaleCreatedOrderRequest* _this = reinterpret_cast< ClearStaleCreatedOrderRequest* >(object);
  (void)_this;
}
void ClearStaleCreatedOrderRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ClearStaleCreatedOrderRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ClearStaleCreatedOrderRequest& ClearStaleCreatedOrderRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ClearStaleCreatedOrderRequest_Workflows_2fGeneralGoWorkflows_2fgeneral_5fgo_5fworkflows_2eproto.base);
  return *internal_default_instance();
}


void ClearStaleCreatedOrderRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:farm.nurture.core.contracts.workflows.generalgo.ClearStaleCreatedOrderRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && requestheaders_ != nullptr) {
    delete requestheaders_;
  }
  requestheaders_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ClearStaleCreatedOrderRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .farm.nurture.core.contracts.common.RequestHeaders requestHeaders = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_requestheaders(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ClearStaleCreatedOrderRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:farm.nurture.core.contracts.workflows.generalgo.ClearStaleCreatedOrderRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .farm.nurture.core.contracts.common.RequestHeaders requestHeaders = 1;
  if (this->has_requestheaders()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::requestheaders(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:farm.nurture.core.contracts.workflows.generalgo.ClearStaleCreatedOrderRequest)
  return target;
}

size_t ClearStaleCreatedOrderRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:farm.nurture.core.contracts.workflows.generalgo.ClearStaleCreatedOrderRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .farm.nurture.core.contracts.common.RequestHeaders requestHeaders = 1;
  if (this->has_requestheaders()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *requestheaders_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ClearStaleCreatedOrderRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:farm.nurture.core.contracts.workflows.generalgo.ClearStaleCreatedOrderRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ClearStaleCreatedOrderRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ClearStaleCreatedOrderRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:farm.nurture.core.contracts.workflows.generalgo.ClearStaleCreatedOrderRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:farm.nurture.core.contracts.workflows.generalgo.ClearStaleCreatedOrderRequest)
    MergeFrom(*source);
  }
}

void ClearStaleCreatedOrderRequest::MergeFrom(const ClearStaleCreatedOrderRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:farm.nurture.core.contracts.workflows.generalgo.ClearStaleCreatedOrderRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_requestheaders()) {
    _internal_mutable_requestheaders()->::farm::nurture::core::contracts::common::RequestHeaders::MergeFrom(from._internal_requestheaders());
  }
}

void ClearStaleCreatedOrderRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:farm.nurture.core.contracts.workflows.generalgo.ClearStaleCreatedOrderRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ClearStaleCreatedOrderRequest::CopyFrom(const ClearStaleCreatedOrderRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:farm.nurture.core.contracts.workflows.generalgo.ClearStaleCreatedOrderRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ClearStaleCreatedOrderRequest::IsInitialized() const {
  return true;
}

void ClearStaleCreatedOrderRequest::InternalSwap(ClearStaleCreatedOrderRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(requestheaders_, other->requestheaders_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ClearStaleCreatedOrderRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ClearStaleCreatedOrderResponse::_Internal {
 public:
};

ClearStaleCreatedOrderResponse::ClearStaleCreatedOrderResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:farm.nurture.core.contracts.workflows.generalgo.ClearStaleCreatedOrderResponse)
}
ClearStaleCreatedOrderResponse::ClearStaleCreatedOrderResponse(const ClearStaleCreatedOrderResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  status_ = from.status_;
  // @@protoc_insertion_point(copy_constructor:farm.nurture.core.contracts.workflows.generalgo.ClearStaleCreatedOrderResponse)
}

void ClearStaleCreatedOrderResponse::SharedCtor() {
  status_ = 0;
}

ClearStaleCreatedOrderResponse::~ClearStaleCreatedOrderResponse() {
  // @@protoc_insertion_point(destructor:farm.nurture.core.contracts.workflows.generalgo.ClearStaleCreatedOrderResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ClearStaleCreatedOrderResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void ClearStaleCreatedOrderResponse::ArenaDtor(void* object) {
  ClearStaleCreatedOrderResponse* _this = reinterpret_cast< ClearStaleCreatedOrderResponse* >(object);
  (void)_this;
}
void ClearStaleCreatedOrderResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ClearStaleCreatedOrderResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ClearStaleCreatedOrderResponse& ClearStaleCreatedOrderResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ClearStaleCreatedOrderResponse_Workflows_2fGeneralGoWorkflows_2fgeneral_5fgo_5fworkflows_2eproto.base);
  return *internal_default_instance();
}


void ClearStaleCreatedOrderResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:farm.nurture.core.contracts.workflows.generalgo.ClearStaleCreatedOrderResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  status_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ClearStaleCreatedOrderResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .farm.nurture.core.contracts.common.ResponseStatus status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_status(static_cast<::farm::nurture::core::contracts::common::ResponseStatus>(val));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ClearStaleCreatedOrderResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:farm.nurture.core.contracts.workflows.generalgo.ClearStaleCreatedOrderResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .farm.nurture.core.contracts.common.ResponseStatus status = 1;
  if (this->status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_status(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:farm.nurture.core.contracts.workflows.generalgo.ClearStaleCreatedOrderResponse)
  return target;
}

size_t ClearStaleCreatedOrderResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:farm.nurture.core.contracts.workflows.generalgo.ClearStaleCreatedOrderResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .farm.nurture.core.contracts.common.ResponseStatus status = 1;
  if (this->status() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_status());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ClearStaleCreatedOrderResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:farm.nurture.core.contracts.workflows.generalgo.ClearStaleCreatedOrderResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ClearStaleCreatedOrderResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ClearStaleCreatedOrderResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:farm.nurture.core.contracts.workflows.generalgo.ClearStaleCreatedOrderResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:farm.nurture.core.contracts.workflows.generalgo.ClearStaleCreatedOrderResponse)
    MergeFrom(*source);
  }
}

void ClearStaleCreatedOrderResponse::MergeFrom(const ClearStaleCreatedOrderResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:farm.nurture.core.contracts.workflows.generalgo.ClearStaleCreatedOrderResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.status() != 0) {
    _internal_set_status(from._internal_status());
  }
}

void ClearStaleCreatedOrderResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:farm.nurture.core.contracts.workflows.generalgo.ClearStaleCreatedOrderResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ClearStaleCreatedOrderResponse::CopyFrom(const ClearStaleCreatedOrderResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:farm.nurture.core.contracts.workflows.generalgo.ClearStaleCreatedOrderResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ClearStaleCreatedOrderResponse::IsInitialized() const {
  return true;
}

void ClearStaleCreatedOrderResponse::InternalSwap(ClearStaleCreatedOrderResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(status_, other->status_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ClearStaleCreatedOrderResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ScoreComputationRequest::_Internal {
 public:
};

ScoreComputationRequest::ScoreComputationRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:farm.nurture.core.contracts.workflows.generalgo.ScoreComputationRequest)
}
ScoreComputationRequest::ScoreComputationRequest(const ScoreComputationRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  scoring_id_ = from.scoring_id_;
  // @@protoc_insertion_point(copy_constructor:farm.nurture.core.contracts.workflows.generalgo.ScoreComputationRequest)
}

void ScoreComputationRequest::SharedCtor() {
  scoring_id_ = PROTOBUF_LONGLONG(0);
}

ScoreComputationRequest::~ScoreComputationRequest() {
  // @@protoc_insertion_point(destructor:farm.nurture.core.contracts.workflows.generalgo.ScoreComputationRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ScoreComputationRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void ScoreComputationRequest::ArenaDtor(void* object) {
  ScoreComputationRequest* _this = reinterpret_cast< ScoreComputationRequest* >(object);
  (void)_this;
}
void ScoreComputationRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ScoreComputationRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ScoreComputationRequest& ScoreComputationRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ScoreComputationRequest_Workflows_2fGeneralGoWorkflows_2fgeneral_5fgo_5fworkflows_2eproto.base);
  return *internal_default_instance();
}


void ScoreComputationRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:farm.nurture.core.contracts.workflows.generalgo.ScoreComputationRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  scoring_id_ = PROTOBUF_LONGLONG(0);
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ScoreComputationRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int64 scoring_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          scoring_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ScoreComputationRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:farm.nurture.core.contracts.workflows.generalgo.ScoreComputationRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 scoring_id = 1;
  if (this->scoring_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(1, this->_internal_scoring_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:farm.nurture.core.contracts.workflows.generalgo.ScoreComputationRequest)
  return target;
}

size_t ScoreComputationRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:farm.nurture.core.contracts.workflows.generalgo.ScoreComputationRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 scoring_id = 1;
  if (this->scoring_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_scoring_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ScoreComputationRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:farm.nurture.core.contracts.workflows.generalgo.ScoreComputationRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ScoreComputationRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ScoreComputationRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:farm.nurture.core.contracts.workflows.generalgo.ScoreComputationRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:farm.nurture.core.contracts.workflows.generalgo.ScoreComputationRequest)
    MergeFrom(*source);
  }
}

void ScoreComputationRequest::MergeFrom(const ScoreComputationRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:farm.nurture.core.contracts.workflows.generalgo.ScoreComputationRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.scoring_id() != 0) {
    _internal_set_scoring_id(from._internal_scoring_id());
  }
}

void ScoreComputationRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:farm.nurture.core.contracts.workflows.generalgo.ScoreComputationRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ScoreComputationRequest::CopyFrom(const ScoreComputationRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:farm.nurture.core.contracts.workflows.generalgo.ScoreComputationRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ScoreComputationRequest::IsInitialized() const {
  return true;
}

void ScoreComputationRequest::InternalSwap(ScoreComputationRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(scoring_id_, other->scoring_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ScoreComputationRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ScoreComputationResponse::_Internal {
 public:
};

ScoreComputationResponse::ScoreComputationResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:farm.nurture.core.contracts.workflows.generalgo.ScoreComputationResponse)
}
ScoreComputationResponse::ScoreComputationResponse(const ScoreComputationResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  status_ = from.status_;
  // @@protoc_insertion_point(copy_constructor:farm.nurture.core.contracts.workflows.generalgo.ScoreComputationResponse)
}

void ScoreComputationResponse::SharedCtor() {
  status_ = 0;
}

ScoreComputationResponse::~ScoreComputationResponse() {
  // @@protoc_insertion_point(destructor:farm.nurture.core.contracts.workflows.generalgo.ScoreComputationResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ScoreComputationResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void ScoreComputationResponse::ArenaDtor(void* object) {
  ScoreComputationResponse* _this = reinterpret_cast< ScoreComputationResponse* >(object);
  (void)_this;
}
void ScoreComputationResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ScoreComputationResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ScoreComputationResponse& ScoreComputationResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ScoreComputationResponse_Workflows_2fGeneralGoWorkflows_2fgeneral_5fgo_5fworkflows_2eproto.base);
  return *internal_default_instance();
}


void ScoreComputationResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:farm.nurture.core.contracts.workflows.generalgo.ScoreComputationResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  status_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ScoreComputationResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .farm.nurture.core.contracts.common.ResponseStatus status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_status(static_cast<::farm::nurture::core::contracts::common::ResponseStatus>(val));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ScoreComputationResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:farm.nurture.core.contracts.workflows.generalgo.ScoreComputationResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .farm.nurture.core.contracts.common.ResponseStatus status = 1;
  if (this->status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_status(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:farm.nurture.core.contracts.workflows.generalgo.ScoreComputationResponse)
  return target;
}

size_t ScoreComputationResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:farm.nurture.core.contracts.workflows.generalgo.ScoreComputationResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .farm.nurture.core.contracts.common.ResponseStatus status = 1;
  if (this->status() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_status());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ScoreComputationResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:farm.nurture.core.contracts.workflows.generalgo.ScoreComputationResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ScoreComputationResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ScoreComputationResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:farm.nurture.core.contracts.workflows.generalgo.ScoreComputationResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:farm.nurture.core.contracts.workflows.generalgo.ScoreComputationResponse)
    MergeFrom(*source);
  }
}

void ScoreComputationResponse::MergeFrom(const ScoreComputationResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:farm.nurture.core.contracts.workflows.generalgo.ScoreComputationResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.status() != 0) {
    _internal_set_status(from._internal_status());
  }
}

void ScoreComputationResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:farm.nurture.core.contracts.workflows.generalgo.ScoreComputationResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ScoreComputationResponse::CopyFrom(const ScoreComputationResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:farm.nurture.core.contracts.workflows.generalgo.ScoreComputationResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ScoreComputationResponse::IsInitialized() const {
  return true;
}

void ScoreComputationResponse::InternalSwap(ScoreComputationResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(status_, other->status_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ScoreComputationResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class IotComputationRequest::_Internal {
 public:
};

IotComputationRequest::IotComputationRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:farm.nurture.core.contracts.workflows.generalgo.IotComputationRequest)
}
IotComputationRequest::IotComputationRequest(const IotComputationRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:farm.nurture.core.contracts.workflows.generalgo.IotComputationRequest)
}

void IotComputationRequest::SharedCtor() {
}

IotComputationRequest::~IotComputationRequest() {
  // @@protoc_insertion_point(destructor:farm.nurture.core.contracts.workflows.generalgo.IotComputationRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void IotComputationRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void IotComputationRequest::ArenaDtor(void* object) {
  IotComputationRequest* _this = reinterpret_cast< IotComputationRequest* >(object);
  (void)_this;
}
void IotComputationRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void IotComputationRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const IotComputationRequest& IotComputationRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_IotComputationRequest_Workflows_2fGeneralGoWorkflows_2fgeneral_5fgo_5fworkflows_2eproto.base);
  return *internal_default_instance();
}


void IotComputationRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:farm.nurture.core.contracts.workflows.generalgo.IotComputationRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* IotComputationRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* IotComputationRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:farm.nurture.core.contracts.workflows.generalgo.IotComputationRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:farm.nurture.core.contracts.workflows.generalgo.IotComputationRequest)
  return target;
}

size_t IotComputationRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:farm.nurture.core.contracts.workflows.generalgo.IotComputationRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void IotComputationRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:farm.nurture.core.contracts.workflows.generalgo.IotComputationRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const IotComputationRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<IotComputationRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:farm.nurture.core.contracts.workflows.generalgo.IotComputationRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:farm.nurture.core.contracts.workflows.generalgo.IotComputationRequest)
    MergeFrom(*source);
  }
}

void IotComputationRequest::MergeFrom(const IotComputationRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:farm.nurture.core.contracts.workflows.generalgo.IotComputationRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void IotComputationRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:farm.nurture.core.contracts.workflows.generalgo.IotComputationRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void IotComputationRequest::CopyFrom(const IotComputationRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:farm.nurture.core.contracts.workflows.generalgo.IotComputationRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IotComputationRequest::IsInitialized() const {
  return true;
}

void IotComputationRequest::InternalSwap(IotComputationRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata IotComputationRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class IotComputationResponse::_Internal {
 public:
};

IotComputationResponse::IotComputationResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:farm.nurture.core.contracts.workflows.generalgo.IotComputationResponse)
}
IotComputationResponse::IotComputationResponse(const IotComputationResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  status_ = from.status_;
  // @@protoc_insertion_point(copy_constructor:farm.nurture.core.contracts.workflows.generalgo.IotComputationResponse)
}

void IotComputationResponse::SharedCtor() {
  status_ = 0;
}

IotComputationResponse::~IotComputationResponse() {
  // @@protoc_insertion_point(destructor:farm.nurture.core.contracts.workflows.generalgo.IotComputationResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void IotComputationResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void IotComputationResponse::ArenaDtor(void* object) {
  IotComputationResponse* _this = reinterpret_cast< IotComputationResponse* >(object);
  (void)_this;
}
void IotComputationResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void IotComputationResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const IotComputationResponse& IotComputationResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_IotComputationResponse_Workflows_2fGeneralGoWorkflows_2fgeneral_5fgo_5fworkflows_2eproto.base);
  return *internal_default_instance();
}


void IotComputationResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:farm.nurture.core.contracts.workflows.generalgo.IotComputationResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  status_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* IotComputationResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .farm.nurture.core.contracts.common.ResponseStatus status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_status(static_cast<::farm::nurture::core::contracts::common::ResponseStatus>(val));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* IotComputationResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:farm.nurture.core.contracts.workflows.generalgo.IotComputationResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .farm.nurture.core.contracts.common.ResponseStatus status = 1;
  if (this->status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_status(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:farm.nurture.core.contracts.workflows.generalgo.IotComputationResponse)
  return target;
}

size_t IotComputationResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:farm.nurture.core.contracts.workflows.generalgo.IotComputationResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .farm.nurture.core.contracts.common.ResponseStatus status = 1;
  if (this->status() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_status());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void IotComputationResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:farm.nurture.core.contracts.workflows.generalgo.IotComputationResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const IotComputationResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<IotComputationResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:farm.nurture.core.contracts.workflows.generalgo.IotComputationResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:farm.nurture.core.contracts.workflows.generalgo.IotComputationResponse)
    MergeFrom(*source);
  }
}

void IotComputationResponse::MergeFrom(const IotComputationResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:farm.nurture.core.contracts.workflows.generalgo.IotComputationResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.status() != 0) {
    _internal_set_status(from._internal_status());
  }
}

void IotComputationResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:farm.nurture.core.contracts.workflows.generalgo.IotComputationResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void IotComputationResponse::CopyFrom(const IotComputationResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:farm.nurture.core.contracts.workflows.generalgo.IotComputationResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IotComputationResponse::IsInitialized() const {
  return true;
}

void IotComputationResponse::InternalSwap(IotComputationResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(status_, other->status_);
}

::PROTOBUF_NAMESPACE_ID::Metadata IotComputationResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class PostServiceFeedbackPNRequest::_Internal {
 public:
  static const ::farm::nurture::core::contracts::common::ActorID& actor(const PostServiceFeedbackPNRequest* msg);
};

const ::farm::nurture::core::contracts::common::ActorID&
PostServiceFeedbackPNRequest::_Internal::actor(const PostServiceFeedbackPNRequest* msg) {
  return *msg->actor_;
}
void PostServiceFeedbackPNRequest::clear_actor() {
  if (GetArena() == nullptr && actor_ != nullptr) {
    delete actor_;
  }
  actor_ = nullptr;
}
PostServiceFeedbackPNRequest::PostServiceFeedbackPNRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:farm.nurture.core.contracts.workflows.generalgo.PostServiceFeedbackPNRequest)
}
PostServiceFeedbackPNRequest::PostServiceFeedbackPNRequest(const PostServiceFeedbackPNRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  servicename_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_servicename().empty()) {
    servicename_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_servicename(), 
      GetArena());
  }
  externaltype_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_externaltype().empty()) {
    externaltype_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_externaltype(), 
      GetArena());
  }
  externalid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_externalid().empty()) {
    externalid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_externalid(), 
      GetArena());
  }
  feature_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_feature().empty()) {
    feature_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_feature(), 
      GetArena());
  }
  if (from._internal_has_actor()) {
    actor_ = new ::farm::nurture::core::contracts::common::ActorID(*from.actor_);
  } else {
    actor_ = nullptr;
  }
  ::memcpy(&languagecode_, &from.languagecode_,
    static_cast<size_t>(reinterpret_cast<char*>(&namespace__) -
    reinterpret_cast<char*>(&languagecode_)) + sizeof(namespace__));
  // @@protoc_insertion_point(copy_constructor:farm.nurture.core.contracts.workflows.generalgo.PostServiceFeedbackPNRequest)
}

void PostServiceFeedbackPNRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_PostServiceFeedbackPNRequest_Workflows_2fGeneralGoWorkflows_2fgeneral_5fgo_5fworkflows_2eproto.base);
  servicename_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  externaltype_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  externalid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  feature_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&actor_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&namespace__) -
      reinterpret_cast<char*>(&actor_)) + sizeof(namespace__));
}

PostServiceFeedbackPNRequest::~PostServiceFeedbackPNRequest() {
  // @@protoc_insertion_point(destructor:farm.nurture.core.contracts.workflows.generalgo.PostServiceFeedbackPNRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void PostServiceFeedbackPNRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  servicename_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  externaltype_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  externalid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  feature_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete actor_;
}

void PostServiceFeedbackPNRequest::ArenaDtor(void* object) {
  PostServiceFeedbackPNRequest* _this = reinterpret_cast< PostServiceFeedbackPNRequest* >(object);
  (void)_this;
}
void PostServiceFeedbackPNRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PostServiceFeedbackPNRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PostServiceFeedbackPNRequest& PostServiceFeedbackPNRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_PostServiceFeedbackPNRequest_Workflows_2fGeneralGoWorkflows_2fgeneral_5fgo_5fworkflows_2eproto.base);
  return *internal_default_instance();
}


void PostServiceFeedbackPNRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:farm.nurture.core.contracts.workflows.generalgo.PostServiceFeedbackPNRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  servicename_.ClearToEmpty();
  externaltype_.ClearToEmpty();
  externalid_.ClearToEmpty();
  feature_.ClearToEmpty();
  if (GetArena() == nullptr && actor_ != nullptr) {
    delete actor_;
  }
  actor_ = nullptr;
  ::memset(&languagecode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&namespace__) -
      reinterpret_cast<char*>(&languagecode_)) + sizeof(namespace__));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PostServiceFeedbackPNRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .farm.nurture.core.contracts.common.ActorID actor = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_actor(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .farm.nurture.core.contracts.common.LanguageCode languageCode = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_languagecode(static_cast<::farm::nurture::core::contracts::common::LanguageCode>(val));
        } else goto handle_unusual;
        continue;
      // string serviceName = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_servicename();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "farm.nurture.core.contracts.workflows.generalgo.PostServiceFeedbackPNRequest.serviceName"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string externalType = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_externaltype();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "farm.nurture.core.contracts.workflows.generalgo.PostServiceFeedbackPNRequest.externalType"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string externalId = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          auto str = _internal_mutable_externalid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "farm.nurture.core.contracts.workflows.generalgo.PostServiceFeedbackPNRequest.externalId"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string feature = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          auto str = _internal_mutable_feature();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "farm.nurture.core.contracts.workflows.generalgo.PostServiceFeedbackPNRequest.feature"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .farm.nurture.core.contracts.feedback.Namespace namespace = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 56)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_namespace_(static_cast<::farm::nurture::core::contracts::feedback::Namespace>(val));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PostServiceFeedbackPNRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:farm.nurture.core.contracts.workflows.generalgo.PostServiceFeedbackPNRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .farm.nurture.core.contracts.common.ActorID actor = 1;
  if (this->has_actor()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::actor(this), target, stream);
  }

  // .farm.nurture.core.contracts.common.LanguageCode languageCode = 2;
  if (this->languagecode() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      2, this->_internal_languagecode(), target);
  }

  // string serviceName = 3;
  if (this->servicename().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_servicename().data(), static_cast<int>(this->_internal_servicename().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "farm.nurture.core.contracts.workflows.generalgo.PostServiceFeedbackPNRequest.serviceName");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_servicename(), target);
  }

  // string externalType = 4;
  if (this->externaltype().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_externaltype().data(), static_cast<int>(this->_internal_externaltype().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "farm.nurture.core.contracts.workflows.generalgo.PostServiceFeedbackPNRequest.externalType");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_externaltype(), target);
  }

  // string externalId = 5;
  if (this->externalid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_externalid().data(), static_cast<int>(this->_internal_externalid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "farm.nurture.core.contracts.workflows.generalgo.PostServiceFeedbackPNRequest.externalId");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_externalid(), target);
  }

  // string feature = 6;
  if (this->feature().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_feature().data(), static_cast<int>(this->_internal_feature().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "farm.nurture.core.contracts.workflows.generalgo.PostServiceFeedbackPNRequest.feature");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_feature(), target);
  }

  // .farm.nurture.core.contracts.feedback.Namespace namespace = 7;
  if (this->namespace_() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      7, this->_internal_namespace_(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:farm.nurture.core.contracts.workflows.generalgo.PostServiceFeedbackPNRequest)
  return target;
}

size_t PostServiceFeedbackPNRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:farm.nurture.core.contracts.workflows.generalgo.PostServiceFeedbackPNRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string serviceName = 3;
  if (this->servicename().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_servicename());
  }

  // string externalType = 4;
  if (this->externaltype().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_externaltype());
  }

  // string externalId = 5;
  if (this->externalid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_externalid());
  }

  // string feature = 6;
  if (this->feature().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_feature());
  }

  // .farm.nurture.core.contracts.common.ActorID actor = 1;
  if (this->has_actor()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *actor_);
  }

  // .farm.nurture.core.contracts.common.LanguageCode languageCode = 2;
  if (this->languagecode() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_languagecode());
  }

  // .farm.nurture.core.contracts.feedback.Namespace namespace = 7;
  if (this->namespace_() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_namespace_());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PostServiceFeedbackPNRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:farm.nurture.core.contracts.workflows.generalgo.PostServiceFeedbackPNRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const PostServiceFeedbackPNRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PostServiceFeedbackPNRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:farm.nurture.core.contracts.workflows.generalgo.PostServiceFeedbackPNRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:farm.nurture.core.contracts.workflows.generalgo.PostServiceFeedbackPNRequest)
    MergeFrom(*source);
  }
}

void PostServiceFeedbackPNRequest::MergeFrom(const PostServiceFeedbackPNRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:farm.nurture.core.contracts.workflows.generalgo.PostServiceFeedbackPNRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.servicename().size() > 0) {
    _internal_set_servicename(from._internal_servicename());
  }
  if (from.externaltype().size() > 0) {
    _internal_set_externaltype(from._internal_externaltype());
  }
  if (from.externalid().size() > 0) {
    _internal_set_externalid(from._internal_externalid());
  }
  if (from.feature().size() > 0) {
    _internal_set_feature(from._internal_feature());
  }
  if (from.has_actor()) {
    _internal_mutable_actor()->::farm::nurture::core::contracts::common::ActorID::MergeFrom(from._internal_actor());
  }
  if (from.languagecode() != 0) {
    _internal_set_languagecode(from._internal_languagecode());
  }
  if (from.namespace_() != 0) {
    _internal_set_namespace_(from._internal_namespace_());
  }
}

void PostServiceFeedbackPNRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:farm.nurture.core.contracts.workflows.generalgo.PostServiceFeedbackPNRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PostServiceFeedbackPNRequest::CopyFrom(const PostServiceFeedbackPNRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:farm.nurture.core.contracts.workflows.generalgo.PostServiceFeedbackPNRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PostServiceFeedbackPNRequest::IsInitialized() const {
  return true;
}

void PostServiceFeedbackPNRequest::InternalSwap(PostServiceFeedbackPNRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  servicename_.Swap(&other->servicename_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  externaltype_.Swap(&other->externaltype_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  externalid_.Swap(&other->externalid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  feature_.Swap(&other->feature_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PostServiceFeedbackPNRequest, namespace__)
      + sizeof(PostServiceFeedbackPNRequest::namespace__)
      - PROTOBUF_FIELD_OFFSET(PostServiceFeedbackPNRequest, actor_)>(
          reinterpret_cast<char*>(&actor_),
          reinterpret_cast<char*>(&other->actor_));
}

::PROTOBUF_NAMESPACE_ID::Metadata PostServiceFeedbackPNRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class PostPusaSprayPopUpRequest::_Internal {
 public:
  static const ::farm::nurture::core::contracts::common::ActorID& actor(const PostPusaSprayPopUpRequest* msg);
};

const ::farm::nurture::core::contracts::common::ActorID&
PostPusaSprayPopUpRequest::_Internal::actor(const PostPusaSprayPopUpRequest* msg) {
  return *msg->actor_;
}
void PostPusaSprayPopUpRequest::clear_actor() {
  if (GetArena() == nullptr && actor_ != nullptr) {
    delete actor_;
  }
  actor_ = nullptr;
}
PostPusaSprayPopUpRequest::PostPusaSprayPopUpRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:farm.nurture.core.contracts.workflows.generalgo.PostPusaSprayPopUpRequest)
}
PostPusaSprayPopUpRequest::PostPusaSprayPopUpRequest(const PostPusaSprayPopUpRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  servicename_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_servicename().empty()) {
    servicename_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_servicename(), 
      GetArena());
  }
  externaltype_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_externaltype().empty()) {
    externaltype_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_externaltype(), 
      GetArena());
  }
  externalid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_externalid().empty()) {
    externalid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_externalid(), 
      GetArena());
  }
  if (from._internal_has_actor()) {
    actor_ = new ::farm::nurture::core::contracts::common::ActorID(*from.actor_);
  } else {
    actor_ = nullptr;
  }
  ::memcpy(&languagecode_, &from.languagecode_,
    static_cast<size_t>(reinterpret_cast<char*>(&farmid_) -
    reinterpret_cast<char*>(&languagecode_)) + sizeof(farmid_));
  // @@protoc_insertion_point(copy_constructor:farm.nurture.core.contracts.workflows.generalgo.PostPusaSprayPopUpRequest)
}

void PostPusaSprayPopUpRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_PostPusaSprayPopUpRequest_Workflows_2fGeneralGoWorkflows_2fgeneral_5fgo_5fworkflows_2eproto.base);
  servicename_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  externaltype_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  externalid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&actor_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&farmid_) -
      reinterpret_cast<char*>(&actor_)) + sizeof(farmid_));
}

PostPusaSprayPopUpRequest::~PostPusaSprayPopUpRequest() {
  // @@protoc_insertion_point(destructor:farm.nurture.core.contracts.workflows.generalgo.PostPusaSprayPopUpRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void PostPusaSprayPopUpRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  servicename_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  externaltype_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  externalid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete actor_;
}

void PostPusaSprayPopUpRequest::ArenaDtor(void* object) {
  PostPusaSprayPopUpRequest* _this = reinterpret_cast< PostPusaSprayPopUpRequest* >(object);
  (void)_this;
}
void PostPusaSprayPopUpRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PostPusaSprayPopUpRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PostPusaSprayPopUpRequest& PostPusaSprayPopUpRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_PostPusaSprayPopUpRequest_Workflows_2fGeneralGoWorkflows_2fgeneral_5fgo_5fworkflows_2eproto.base);
  return *internal_default_instance();
}


void PostPusaSprayPopUpRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:farm.nurture.core.contracts.workflows.generalgo.PostPusaSprayPopUpRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  servicename_.ClearToEmpty();
  externaltype_.ClearToEmpty();
  externalid_.ClearToEmpty();
  if (GetArena() == nullptr && actor_ != nullptr) {
    delete actor_;
  }
  actor_ = nullptr;
  ::memset(&languagecode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&farmid_) -
      reinterpret_cast<char*>(&languagecode_)) + sizeof(farmid_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PostPusaSprayPopUpRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .farm.nurture.core.contracts.common.ActorID actor = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_actor(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .farm.nurture.core.contracts.common.LanguageCode languageCode = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_languagecode(static_cast<::farm::nurture::core::contracts::common::LanguageCode>(val));
        } else goto handle_unusual;
        continue;
      // string serviceName = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_servicename();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "farm.nurture.core.contracts.workflows.generalgo.PostPusaSprayPopUpRequest.serviceName"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string externalType = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_externaltype();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "farm.nurture.core.contracts.workflows.generalgo.PostPusaSprayPopUpRequest.externalType"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string externalId = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          auto str = _internal_mutable_externalid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "farm.nurture.core.contracts.workflows.generalgo.PostPusaSprayPopUpRequest.externalId"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .farm.nurture.core.contracts.feedback.Namespace namespace = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 56)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_namespace_(static_cast<::farm::nurture::core::contracts::feedback::Namespace>(val));
        } else goto handle_unusual;
        continue;
      // int64 eventId = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 64)) {
          eventid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 farmId = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 72)) {
          farmid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PostPusaSprayPopUpRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:farm.nurture.core.contracts.workflows.generalgo.PostPusaSprayPopUpRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .farm.nurture.core.contracts.common.ActorID actor = 1;
  if (this->has_actor()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::actor(this), target, stream);
  }

  // .farm.nurture.core.contracts.common.LanguageCode languageCode = 2;
  if (this->languagecode() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      2, this->_internal_languagecode(), target);
  }

  // string serviceName = 3;
  if (this->servicename().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_servicename().data(), static_cast<int>(this->_internal_servicename().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "farm.nurture.core.contracts.workflows.generalgo.PostPusaSprayPopUpRequest.serviceName");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_servicename(), target);
  }

  // string externalType = 4;
  if (this->externaltype().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_externaltype().data(), static_cast<int>(this->_internal_externaltype().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "farm.nurture.core.contracts.workflows.generalgo.PostPusaSprayPopUpRequest.externalType");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_externaltype(), target);
  }

  // string externalId = 5;
  if (this->externalid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_externalid().data(), static_cast<int>(this->_internal_externalid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "farm.nurture.core.contracts.workflows.generalgo.PostPusaSprayPopUpRequest.externalId");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_externalid(), target);
  }

  // .farm.nurture.core.contracts.feedback.Namespace namespace = 7;
  if (this->namespace_() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      7, this->_internal_namespace_(), target);
  }

  // int64 eventId = 8;
  if (this->eventid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(8, this->_internal_eventid(), target);
  }

  // int64 farmId = 9;
  if (this->farmid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(9, this->_internal_farmid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:farm.nurture.core.contracts.workflows.generalgo.PostPusaSprayPopUpRequest)
  return target;
}

size_t PostPusaSprayPopUpRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:farm.nurture.core.contracts.workflows.generalgo.PostPusaSprayPopUpRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string serviceName = 3;
  if (this->servicename().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_servicename());
  }

  // string externalType = 4;
  if (this->externaltype().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_externaltype());
  }

  // string externalId = 5;
  if (this->externalid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_externalid());
  }

  // .farm.nurture.core.contracts.common.ActorID actor = 1;
  if (this->has_actor()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *actor_);
  }

  // .farm.nurture.core.contracts.common.LanguageCode languageCode = 2;
  if (this->languagecode() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_languagecode());
  }

  // .farm.nurture.core.contracts.feedback.Namespace namespace = 7;
  if (this->namespace_() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_namespace_());
  }

  // int64 eventId = 8;
  if (this->eventid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_eventid());
  }

  // int64 farmId = 9;
  if (this->farmid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_farmid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PostPusaSprayPopUpRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:farm.nurture.core.contracts.workflows.generalgo.PostPusaSprayPopUpRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const PostPusaSprayPopUpRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PostPusaSprayPopUpRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:farm.nurture.core.contracts.workflows.generalgo.PostPusaSprayPopUpRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:farm.nurture.core.contracts.workflows.generalgo.PostPusaSprayPopUpRequest)
    MergeFrom(*source);
  }
}

void PostPusaSprayPopUpRequest::MergeFrom(const PostPusaSprayPopUpRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:farm.nurture.core.contracts.workflows.generalgo.PostPusaSprayPopUpRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.servicename().size() > 0) {
    _internal_set_servicename(from._internal_servicename());
  }
  if (from.externaltype().size() > 0) {
    _internal_set_externaltype(from._internal_externaltype());
  }
  if (from.externalid().size() > 0) {
    _internal_set_externalid(from._internal_externalid());
  }
  if (from.has_actor()) {
    _internal_mutable_actor()->::farm::nurture::core::contracts::common::ActorID::MergeFrom(from._internal_actor());
  }
  if (from.languagecode() != 0) {
    _internal_set_languagecode(from._internal_languagecode());
  }
  if (from.namespace_() != 0) {
    _internal_set_namespace_(from._internal_namespace_());
  }
  if (from.eventid() != 0) {
    _internal_set_eventid(from._internal_eventid());
  }
  if (from.farmid() != 0) {
    _internal_set_farmid(from._internal_farmid());
  }
}

void PostPusaSprayPopUpRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:farm.nurture.core.contracts.workflows.generalgo.PostPusaSprayPopUpRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PostPusaSprayPopUpRequest::CopyFrom(const PostPusaSprayPopUpRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:farm.nurture.core.contracts.workflows.generalgo.PostPusaSprayPopUpRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PostPusaSprayPopUpRequest::IsInitialized() const {
  return true;
}

void PostPusaSprayPopUpRequest::InternalSwap(PostPusaSprayPopUpRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  servicename_.Swap(&other->servicename_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  externaltype_.Swap(&other->externaltype_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  externalid_.Swap(&other->externalid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PostPusaSprayPopUpRequest, farmid_)
      + sizeof(PostPusaSprayPopUpRequest::farmid_)
      - PROTOBUF_FIELD_OFFSET(PostPusaSprayPopUpRequest, actor_)>(
          reinterpret_cast<char*>(&actor_),
          reinterpret_cast<char*>(&other->actor_));
}

::PROTOBUF_NAMESPACE_ID::Metadata PostPusaSprayPopUpRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class PostServiceFeedbackPNResponse::_Internal {
 public:
};

PostServiceFeedbackPNResponse::PostServiceFeedbackPNResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:farm.nurture.core.contracts.workflows.generalgo.PostServiceFeedbackPNResponse)
}
PostServiceFeedbackPNResponse::PostServiceFeedbackPNResponse(const PostServiceFeedbackPNResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  status_ = from.status_;
  // @@protoc_insertion_point(copy_constructor:farm.nurture.core.contracts.workflows.generalgo.PostServiceFeedbackPNResponse)
}

void PostServiceFeedbackPNResponse::SharedCtor() {
  status_ = 0;
}

PostServiceFeedbackPNResponse::~PostServiceFeedbackPNResponse() {
  // @@protoc_insertion_point(destructor:farm.nurture.core.contracts.workflows.generalgo.PostServiceFeedbackPNResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void PostServiceFeedbackPNResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void PostServiceFeedbackPNResponse::ArenaDtor(void* object) {
  PostServiceFeedbackPNResponse* _this = reinterpret_cast< PostServiceFeedbackPNResponse* >(object);
  (void)_this;
}
void PostServiceFeedbackPNResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PostServiceFeedbackPNResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PostServiceFeedbackPNResponse& PostServiceFeedbackPNResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_PostServiceFeedbackPNResponse_Workflows_2fGeneralGoWorkflows_2fgeneral_5fgo_5fworkflows_2eproto.base);
  return *internal_default_instance();
}


void PostServiceFeedbackPNResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:farm.nurture.core.contracts.workflows.generalgo.PostServiceFeedbackPNResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  status_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PostServiceFeedbackPNResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .farm.nurture.core.contracts.common.ResponseStatus status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_status(static_cast<::farm::nurture::core::contracts::common::ResponseStatus>(val));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PostServiceFeedbackPNResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:farm.nurture.core.contracts.workflows.generalgo.PostServiceFeedbackPNResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .farm.nurture.core.contracts.common.ResponseStatus status = 1;
  if (this->status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_status(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:farm.nurture.core.contracts.workflows.generalgo.PostServiceFeedbackPNResponse)
  return target;
}

size_t PostServiceFeedbackPNResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:farm.nurture.core.contracts.workflows.generalgo.PostServiceFeedbackPNResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .farm.nurture.core.contracts.common.ResponseStatus status = 1;
  if (this->status() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_status());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PostServiceFeedbackPNResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:farm.nurture.core.contracts.workflows.generalgo.PostServiceFeedbackPNResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const PostServiceFeedbackPNResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PostServiceFeedbackPNResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:farm.nurture.core.contracts.workflows.generalgo.PostServiceFeedbackPNResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:farm.nurture.core.contracts.workflows.generalgo.PostServiceFeedbackPNResponse)
    MergeFrom(*source);
  }
}

void PostServiceFeedbackPNResponse::MergeFrom(const PostServiceFeedbackPNResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:farm.nurture.core.contracts.workflows.generalgo.PostServiceFeedbackPNResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.status() != 0) {
    _internal_set_status(from._internal_status());
  }
}

void PostServiceFeedbackPNResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:farm.nurture.core.contracts.workflows.generalgo.PostServiceFeedbackPNResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PostServiceFeedbackPNResponse::CopyFrom(const PostServiceFeedbackPNResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:farm.nurture.core.contracts.workflows.generalgo.PostServiceFeedbackPNResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PostServiceFeedbackPNResponse::IsInitialized() const {
  return true;
}

void PostServiceFeedbackPNResponse::InternalSwap(PostServiceFeedbackPNResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(status_, other->status_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PostServiceFeedbackPNResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class PostPusaSprayPopUpResponse::_Internal {
 public:
};

PostPusaSprayPopUpResponse::PostPusaSprayPopUpResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:farm.nurture.core.contracts.workflows.generalgo.PostPusaSprayPopUpResponse)
}
PostPusaSprayPopUpResponse::PostPusaSprayPopUpResponse(const PostPusaSprayPopUpResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  status_ = from.status_;
  // @@protoc_insertion_point(copy_constructor:farm.nurture.core.contracts.workflows.generalgo.PostPusaSprayPopUpResponse)
}

void PostPusaSprayPopUpResponse::SharedCtor() {
  status_ = 0;
}

PostPusaSprayPopUpResponse::~PostPusaSprayPopUpResponse() {
  // @@protoc_insertion_point(destructor:farm.nurture.core.contracts.workflows.generalgo.PostPusaSprayPopUpResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void PostPusaSprayPopUpResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void PostPusaSprayPopUpResponse::ArenaDtor(void* object) {
  PostPusaSprayPopUpResponse* _this = reinterpret_cast< PostPusaSprayPopUpResponse* >(object);
  (void)_this;
}
void PostPusaSprayPopUpResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PostPusaSprayPopUpResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PostPusaSprayPopUpResponse& PostPusaSprayPopUpResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_PostPusaSprayPopUpResponse_Workflows_2fGeneralGoWorkflows_2fgeneral_5fgo_5fworkflows_2eproto.base);
  return *internal_default_instance();
}


void PostPusaSprayPopUpResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:farm.nurture.core.contracts.workflows.generalgo.PostPusaSprayPopUpResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  status_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PostPusaSprayPopUpResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .farm.nurture.core.contracts.common.ResponseStatus status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_status(static_cast<::farm::nurture::core::contracts::common::ResponseStatus>(val));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PostPusaSprayPopUpResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:farm.nurture.core.contracts.workflows.generalgo.PostPusaSprayPopUpResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .farm.nurture.core.contracts.common.ResponseStatus status = 1;
  if (this->status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_status(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:farm.nurture.core.contracts.workflows.generalgo.PostPusaSprayPopUpResponse)
  return target;
}

size_t PostPusaSprayPopUpResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:farm.nurture.core.contracts.workflows.generalgo.PostPusaSprayPopUpResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .farm.nurture.core.contracts.common.ResponseStatus status = 1;
  if (this->status() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_status());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PostPusaSprayPopUpResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:farm.nurture.core.contracts.workflows.generalgo.PostPusaSprayPopUpResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const PostPusaSprayPopUpResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PostPusaSprayPopUpResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:farm.nurture.core.contracts.workflows.generalgo.PostPusaSprayPopUpResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:farm.nurture.core.contracts.workflows.generalgo.PostPusaSprayPopUpResponse)
    MergeFrom(*source);
  }
}

void PostPusaSprayPopUpResponse::MergeFrom(const PostPusaSprayPopUpResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:farm.nurture.core.contracts.workflows.generalgo.PostPusaSprayPopUpResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.status() != 0) {
    _internal_set_status(from._internal_status());
  }
}

void PostPusaSprayPopUpResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:farm.nurture.core.contracts.workflows.generalgo.PostPusaSprayPopUpResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PostPusaSprayPopUpResponse::CopyFrom(const PostPusaSprayPopUpResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:farm.nurture.core.contracts.workflows.generalgo.PostPusaSprayPopUpResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PostPusaSprayPopUpResponse::IsInitialized() const {
  return true;
}

void PostPusaSprayPopUpResponse::InternalSwap(PostPusaSprayPopUpResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(status_, other->status_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PostPusaSprayPopUpResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ExecuteUserJourneyCampaignRequest::_Internal {
 public:
  static const ::farm::nurture::core::contracts::common::RequestHeaders& requestheaders(const ExecuteUserJourneyCampaignRequest* msg);
  static const PROTOBUF_NAMESPACE_ID::Duration& waitduration(const ExecuteUserJourneyCampaignRequest* msg);
};

const ::farm::nurture::core::contracts::common::RequestHeaders&
ExecuteUserJourneyCampaignRequest::_Internal::requestheaders(const ExecuteUserJourneyCampaignRequest* msg) {
  return *msg->requestheaders_;
}
const PROTOBUF_NAMESPACE_ID::Duration&
ExecuteUserJourneyCampaignRequest::_Internal::waitduration(const ExecuteUserJourneyCampaignRequest* msg) {
  return *msg->waitduration_;
}
void ExecuteUserJourneyCampaignRequest::clear_requestheaders() {
  if (GetArena() == nullptr && requestheaders_ != nullptr) {
    delete requestheaders_;
  }
  requestheaders_ = nullptr;
}
void ExecuteUserJourneyCampaignRequest::clear_waitduration() {
  if (GetArena() == nullptr && waitduration_ != nullptr) {
    delete waitduration_;
  }
  waitduration_ = nullptr;
}
ExecuteUserJourneyCampaignRequest::ExecuteUserJourneyCampaignRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:farm.nurture.core.contracts.workflows.generalgo.ExecuteUserJourneyCampaignRequest)
}
ExecuteUserJourneyCampaignRequest::ExecuteUserJourneyCampaignRequest(const ExecuteUserJourneyCampaignRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  referenceid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_referenceid().empty()) {
    referenceid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_referenceid(), 
      GetArena());
  }
  if (from._internal_has_requestheaders()) {
    requestheaders_ = new ::farm::nurture::core::contracts::common::RequestHeaders(*from.requestheaders_);
  } else {
    requestheaders_ = nullptr;
  }
  if (from._internal_has_waitduration()) {
    waitduration_ = new PROTOBUF_NAMESPACE_ID::Duration(*from.waitduration_);
  } else {
    waitduration_ = nullptr;
  }
  ::memcpy(&campaignid_, &from.campaignid_,
    static_cast<size_t>(reinterpret_cast<char*>(&engagementvertexid_) -
    reinterpret_cast<char*>(&campaignid_)) + sizeof(engagementvertexid_));
  // @@protoc_insertion_point(copy_constructor:farm.nurture.core.contracts.workflows.generalgo.ExecuteUserJourneyCampaignRequest)
}

void ExecuteUserJourneyCampaignRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ExecuteUserJourneyCampaignRequest_Workflows_2fGeneralGoWorkflows_2fgeneral_5fgo_5fworkflows_2eproto.base);
  referenceid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&requestheaders_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&engagementvertexid_) -
      reinterpret_cast<char*>(&requestheaders_)) + sizeof(engagementvertexid_));
}

ExecuteUserJourneyCampaignRequest::~ExecuteUserJourneyCampaignRequest() {
  // @@protoc_insertion_point(destructor:farm.nurture.core.contracts.workflows.generalgo.ExecuteUserJourneyCampaignRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ExecuteUserJourneyCampaignRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  referenceid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete requestheaders_;
  if (this != internal_default_instance()) delete waitduration_;
}

void ExecuteUserJourneyCampaignRequest::ArenaDtor(void* object) {
  ExecuteUserJourneyCampaignRequest* _this = reinterpret_cast< ExecuteUserJourneyCampaignRequest* >(object);
  (void)_this;
}
void ExecuteUserJourneyCampaignRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ExecuteUserJourneyCampaignRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ExecuteUserJourneyCampaignRequest& ExecuteUserJourneyCampaignRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ExecuteUserJourneyCampaignRequest_Workflows_2fGeneralGoWorkflows_2fgeneral_5fgo_5fworkflows_2eproto.base);
  return *internal_default_instance();
}


void ExecuteUserJourneyCampaignRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:farm.nurture.core.contracts.workflows.generalgo.ExecuteUserJourneyCampaignRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  referenceid_.ClearToEmpty();
  if (GetArena() == nullptr && requestheaders_ != nullptr) {
    delete requestheaders_;
  }
  requestheaders_ = nullptr;
  if (GetArena() == nullptr && waitduration_ != nullptr) {
    delete waitduration_;
  }
  waitduration_ = nullptr;
  ::memset(&campaignid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&engagementvertexid_) -
      reinterpret_cast<char*>(&campaignid_)) + sizeof(engagementvertexid_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ExecuteUserJourneyCampaignRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .farm.nurture.core.contracts.common.RequestHeaders requestHeaders = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_requestheaders(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 campaignId = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          campaignid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 engagementVertexId = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          engagementvertexid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string referenceId = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_referenceid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "farm.nurture.core.contracts.workflows.generalgo.ExecuteUserJourneyCampaignRequest.referenceId"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.protobuf.Duration waitDuration = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_waitduration(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ExecuteUserJourneyCampaignRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:farm.nurture.core.contracts.workflows.generalgo.ExecuteUserJourneyCampaignRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .farm.nurture.core.contracts.common.RequestHeaders requestHeaders = 1;
  if (this->has_requestheaders()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::requestheaders(this), target, stream);
  }

  // int64 campaignId = 2;
  if (this->campaignid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->_internal_campaignid(), target);
  }

  // int64 engagementVertexId = 3;
  if (this->engagementvertexid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(3, this->_internal_engagementvertexid(), target);
  }

  // string referenceId = 4;
  if (this->referenceid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_referenceid().data(), static_cast<int>(this->_internal_referenceid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "farm.nurture.core.contracts.workflows.generalgo.ExecuteUserJourneyCampaignRequest.referenceId");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_referenceid(), target);
  }

  // .google.protobuf.Duration waitDuration = 5;
  if (this->has_waitduration()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        5, _Internal::waitduration(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:farm.nurture.core.contracts.workflows.generalgo.ExecuteUserJourneyCampaignRequest)
  return target;
}

size_t ExecuteUserJourneyCampaignRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:farm.nurture.core.contracts.workflows.generalgo.ExecuteUserJourneyCampaignRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string referenceId = 4;
  if (this->referenceid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_referenceid());
  }

  // .farm.nurture.core.contracts.common.RequestHeaders requestHeaders = 1;
  if (this->has_requestheaders()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *requestheaders_);
  }

  // .google.protobuf.Duration waitDuration = 5;
  if (this->has_waitduration()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *waitduration_);
  }

  // int64 campaignId = 2;
  if (this->campaignid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_campaignid());
  }

  // int64 engagementVertexId = 3;
  if (this->engagementvertexid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_engagementvertexid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ExecuteUserJourneyCampaignRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:farm.nurture.core.contracts.workflows.generalgo.ExecuteUserJourneyCampaignRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ExecuteUserJourneyCampaignRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ExecuteUserJourneyCampaignRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:farm.nurture.core.contracts.workflows.generalgo.ExecuteUserJourneyCampaignRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:farm.nurture.core.contracts.workflows.generalgo.ExecuteUserJourneyCampaignRequest)
    MergeFrom(*source);
  }
}

void ExecuteUserJourneyCampaignRequest::MergeFrom(const ExecuteUserJourneyCampaignRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:farm.nurture.core.contracts.workflows.generalgo.ExecuteUserJourneyCampaignRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.referenceid().size() > 0) {
    _internal_set_referenceid(from._internal_referenceid());
  }
  if (from.has_requestheaders()) {
    _internal_mutable_requestheaders()->::farm::nurture::core::contracts::common::RequestHeaders::MergeFrom(from._internal_requestheaders());
  }
  if (from.has_waitduration()) {
    _internal_mutable_waitduration()->PROTOBUF_NAMESPACE_ID::Duration::MergeFrom(from._internal_waitduration());
  }
  if (from.campaignid() != 0) {
    _internal_set_campaignid(from._internal_campaignid());
  }
  if (from.engagementvertexid() != 0) {
    _internal_set_engagementvertexid(from._internal_engagementvertexid());
  }
}

void ExecuteUserJourneyCampaignRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:farm.nurture.core.contracts.workflows.generalgo.ExecuteUserJourneyCampaignRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ExecuteUserJourneyCampaignRequest::CopyFrom(const ExecuteUserJourneyCampaignRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:farm.nurture.core.contracts.workflows.generalgo.ExecuteUserJourneyCampaignRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ExecuteUserJourneyCampaignRequest::IsInitialized() const {
  return true;
}

void ExecuteUserJourneyCampaignRequest::InternalSwap(ExecuteUserJourneyCampaignRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  referenceid_.Swap(&other->referenceid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ExecuteUserJourneyCampaignRequest, engagementvertexid_)
      + sizeof(ExecuteUserJourneyCampaignRequest::engagementvertexid_)
      - PROTOBUF_FIELD_OFFSET(ExecuteUserJourneyCampaignRequest, requestheaders_)>(
          reinterpret_cast<char*>(&requestheaders_),
          reinterpret_cast<char*>(&other->requestheaders_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ExecuteUserJourneyCampaignRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ExecuteUserJourneyCampaignResponse::_Internal {
 public:
};

ExecuteUserJourneyCampaignResponse::ExecuteUserJourneyCampaignResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:farm.nurture.core.contracts.workflows.generalgo.ExecuteUserJourneyCampaignResponse)
}
ExecuteUserJourneyCampaignResponse::ExecuteUserJourneyCampaignResponse(const ExecuteUserJourneyCampaignResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  status_ = from.status_;
  // @@protoc_insertion_point(copy_constructor:farm.nurture.core.contracts.workflows.generalgo.ExecuteUserJourneyCampaignResponse)
}

void ExecuteUserJourneyCampaignResponse::SharedCtor() {
  status_ = 0;
}

ExecuteUserJourneyCampaignResponse::~ExecuteUserJourneyCampaignResponse() {
  // @@protoc_insertion_point(destructor:farm.nurture.core.contracts.workflows.generalgo.ExecuteUserJourneyCampaignResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ExecuteUserJourneyCampaignResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void ExecuteUserJourneyCampaignResponse::ArenaDtor(void* object) {
  ExecuteUserJourneyCampaignResponse* _this = reinterpret_cast< ExecuteUserJourneyCampaignResponse* >(object);
  (void)_this;
}
void ExecuteUserJourneyCampaignResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ExecuteUserJourneyCampaignResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ExecuteUserJourneyCampaignResponse& ExecuteUserJourneyCampaignResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ExecuteUserJourneyCampaignResponse_Workflows_2fGeneralGoWorkflows_2fgeneral_5fgo_5fworkflows_2eproto.base);
  return *internal_default_instance();
}


void ExecuteUserJourneyCampaignResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:farm.nurture.core.contracts.workflows.generalgo.ExecuteUserJourneyCampaignResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  status_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ExecuteUserJourneyCampaignResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .farm.nurture.core.contracts.common.ResponseStatus status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_status(static_cast<::farm::nurture::core::contracts::common::ResponseStatus>(val));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ExecuteUserJourneyCampaignResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:farm.nurture.core.contracts.workflows.generalgo.ExecuteUserJourneyCampaignResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .farm.nurture.core.contracts.common.ResponseStatus status = 1;
  if (this->status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_status(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:farm.nurture.core.contracts.workflows.generalgo.ExecuteUserJourneyCampaignResponse)
  return target;
}

size_t ExecuteUserJourneyCampaignResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:farm.nurture.core.contracts.workflows.generalgo.ExecuteUserJourneyCampaignResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .farm.nurture.core.contracts.common.ResponseStatus status = 1;
  if (this->status() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_status());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ExecuteUserJourneyCampaignResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:farm.nurture.core.contracts.workflows.generalgo.ExecuteUserJourneyCampaignResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ExecuteUserJourneyCampaignResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ExecuteUserJourneyCampaignResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:farm.nurture.core.contracts.workflows.generalgo.ExecuteUserJourneyCampaignResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:farm.nurture.core.contracts.workflows.generalgo.ExecuteUserJourneyCampaignResponse)
    MergeFrom(*source);
  }
}

void ExecuteUserJourneyCampaignResponse::MergeFrom(const ExecuteUserJourneyCampaignResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:farm.nurture.core.contracts.workflows.generalgo.ExecuteUserJourneyCampaignResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.status() != 0) {
    _internal_set_status(from._internal_status());
  }
}

void ExecuteUserJourneyCampaignResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:farm.nurture.core.contracts.workflows.generalgo.ExecuteUserJourneyCampaignResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ExecuteUserJourneyCampaignResponse::CopyFrom(const ExecuteUserJourneyCampaignResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:farm.nurture.core.contracts.workflows.generalgo.ExecuteUserJourneyCampaignResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ExecuteUserJourneyCampaignResponse::IsInitialized() const {
  return true;
}

void ExecuteUserJourneyCampaignResponse::InternalSwap(ExecuteUserJourneyCampaignResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(status_, other->status_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ExecuteUserJourneyCampaignResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ExecuteCampaignRequest::_Internal {
 public:
  static const PROTOBUF_NAMESPACE_ID::Duration& inactionduration(const ExecuteCampaignRequest* msg);
};

const PROTOBUF_NAMESPACE_ID::Duration&
ExecuteCampaignRequest::_Internal::inactionduration(const ExecuteCampaignRequest* msg) {
  return *msg->inactionduration_;
}
void ExecuteCampaignRequest::clear_inactionduration() {
  if (GetArena() == nullptr && inactionduration_ != nullptr) {
    delete inactionduration_;
  }
  inactionduration_ = nullptr;
}
ExecuteCampaignRequest::ExecuteCampaignRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:farm.nurture.core.contracts.workflows.generalgo.ExecuteCampaignRequest)
}
ExecuteCampaignRequest::ExecuteCampaignRequest(const ExecuteCampaignRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_inactionduration()) {
    inactionduration_ = new PROTOBUF_NAMESPACE_ID::Duration(*from.inactionduration_);
  } else {
    inactionduration_ = nullptr;
  }
  ::memcpy(&campaign_id_, &from.campaign_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&campaignscheduletype_) -
    reinterpret_cast<char*>(&campaign_id_)) + sizeof(campaignscheduletype_));
  // @@protoc_insertion_point(copy_constructor:farm.nurture.core.contracts.workflows.generalgo.ExecuteCampaignRequest)
}

void ExecuteCampaignRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ExecuteCampaignRequest_Workflows_2fGeneralGoWorkflows_2fgeneral_5fgo_5fworkflows_2eproto.base);
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&inactionduration_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&campaignscheduletype_) -
      reinterpret_cast<char*>(&inactionduration_)) + sizeof(campaignscheduletype_));
}

ExecuteCampaignRequest::~ExecuteCampaignRequest() {
  // @@protoc_insertion_point(destructor:farm.nurture.core.contracts.workflows.generalgo.ExecuteCampaignRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ExecuteCampaignRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete inactionduration_;
}

void ExecuteCampaignRequest::ArenaDtor(void* object) {
  ExecuteCampaignRequest* _this = reinterpret_cast< ExecuteCampaignRequest* >(object);
  (void)_this;
}
void ExecuteCampaignRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ExecuteCampaignRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ExecuteCampaignRequest& ExecuteCampaignRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ExecuteCampaignRequest_Workflows_2fGeneralGoWorkflows_2fgeneral_5fgo_5fworkflows_2eproto.base);
  return *internal_default_instance();
}


void ExecuteCampaignRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:farm.nurture.core.contracts.workflows.generalgo.ExecuteCampaignRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && inactionduration_ != nullptr) {
    delete inactionduration_;
  }
  inactionduration_ = nullptr;
  ::memset(&campaign_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&campaignscheduletype_) -
      reinterpret_cast<char*>(&campaign_id_)) + sizeof(campaignscheduletype_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ExecuteCampaignRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int64 campaign_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          campaign_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .farm.nurture.core.contracts.common.CampaignScheduleType campaignScheduleType = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_campaignscheduletype(static_cast<::farm::nurture::core::contracts::common::CampaignScheduleType>(val));
        } else goto handle_unusual;
        continue;
      // .google.protobuf.Duration inactionDuration = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_inactionduration(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ExecuteCampaignRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:farm.nurture.core.contracts.workflows.generalgo.ExecuteCampaignRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 campaign_id = 1;
  if (this->campaign_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(1, this->_internal_campaign_id(), target);
  }

  // .farm.nurture.core.contracts.common.CampaignScheduleType campaignScheduleType = 2;
  if (this->campaignscheduletype() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      2, this->_internal_campaignscheduletype(), target);
  }

  // .google.protobuf.Duration inactionDuration = 3;
  if (this->has_inactionduration()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::inactionduration(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:farm.nurture.core.contracts.workflows.generalgo.ExecuteCampaignRequest)
  return target;
}

size_t ExecuteCampaignRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:farm.nurture.core.contracts.workflows.generalgo.ExecuteCampaignRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .google.protobuf.Duration inactionDuration = 3;
  if (this->has_inactionduration()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *inactionduration_);
  }

  // int64 campaign_id = 1;
  if (this->campaign_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_campaign_id());
  }

  // .farm.nurture.core.contracts.common.CampaignScheduleType campaignScheduleType = 2;
  if (this->campaignscheduletype() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_campaignscheduletype());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ExecuteCampaignRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:farm.nurture.core.contracts.workflows.generalgo.ExecuteCampaignRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ExecuteCampaignRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ExecuteCampaignRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:farm.nurture.core.contracts.workflows.generalgo.ExecuteCampaignRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:farm.nurture.core.contracts.workflows.generalgo.ExecuteCampaignRequest)
    MergeFrom(*source);
  }
}

void ExecuteCampaignRequest::MergeFrom(const ExecuteCampaignRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:farm.nurture.core.contracts.workflows.generalgo.ExecuteCampaignRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_inactionduration()) {
    _internal_mutable_inactionduration()->PROTOBUF_NAMESPACE_ID::Duration::MergeFrom(from._internal_inactionduration());
  }
  if (from.campaign_id() != 0) {
    _internal_set_campaign_id(from._internal_campaign_id());
  }
  if (from.campaignscheduletype() != 0) {
    _internal_set_campaignscheduletype(from._internal_campaignscheduletype());
  }
}

void ExecuteCampaignRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:farm.nurture.core.contracts.workflows.generalgo.ExecuteCampaignRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ExecuteCampaignRequest::CopyFrom(const ExecuteCampaignRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:farm.nurture.core.contracts.workflows.generalgo.ExecuteCampaignRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ExecuteCampaignRequest::IsInitialized() const {
  return true;
}

void ExecuteCampaignRequest::InternalSwap(ExecuteCampaignRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ExecuteCampaignRequest, campaignscheduletype_)
      + sizeof(ExecuteCampaignRequest::campaignscheduletype_)
      - PROTOBUF_FIELD_OFFSET(ExecuteCampaignRequest, inactionduration_)>(
          reinterpret_cast<char*>(&inactionduration_),
          reinterpret_cast<char*>(&other->inactionduration_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ExecuteCampaignRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ExecuteCampaignResponse::_Internal {
 public:
};

ExecuteCampaignResponse::ExecuteCampaignResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:farm.nurture.core.contracts.workflows.generalgo.ExecuteCampaignResponse)
}
ExecuteCampaignResponse::ExecuteCampaignResponse(const ExecuteCampaignResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  status_ = from.status_;
  // @@protoc_insertion_point(copy_constructor:farm.nurture.core.contracts.workflows.generalgo.ExecuteCampaignResponse)
}

void ExecuteCampaignResponse::SharedCtor() {
  status_ = 0;
}

ExecuteCampaignResponse::~ExecuteCampaignResponse() {
  // @@protoc_insertion_point(destructor:farm.nurture.core.contracts.workflows.generalgo.ExecuteCampaignResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ExecuteCampaignResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void ExecuteCampaignResponse::ArenaDtor(void* object) {
  ExecuteCampaignResponse* _this = reinterpret_cast< ExecuteCampaignResponse* >(object);
  (void)_this;
}
void ExecuteCampaignResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ExecuteCampaignResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ExecuteCampaignResponse& ExecuteCampaignResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ExecuteCampaignResponse_Workflows_2fGeneralGoWorkflows_2fgeneral_5fgo_5fworkflows_2eproto.base);
  return *internal_default_instance();
}


void ExecuteCampaignResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:farm.nurture.core.contracts.workflows.generalgo.ExecuteCampaignResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  status_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ExecuteCampaignResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .farm.nurture.core.contracts.common.ResponseStatus status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_status(static_cast<::farm::nurture::core::contracts::common::ResponseStatus>(val));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ExecuteCampaignResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:farm.nurture.core.contracts.workflows.generalgo.ExecuteCampaignResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .farm.nurture.core.contracts.common.ResponseStatus status = 1;
  if (this->status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_status(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:farm.nurture.core.contracts.workflows.generalgo.ExecuteCampaignResponse)
  return target;
}

size_t ExecuteCampaignResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:farm.nurture.core.contracts.workflows.generalgo.ExecuteCampaignResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .farm.nurture.core.contracts.common.ResponseStatus status = 1;
  if (this->status() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_status());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ExecuteCampaignResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:farm.nurture.core.contracts.workflows.generalgo.ExecuteCampaignResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ExecuteCampaignResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ExecuteCampaignResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:farm.nurture.core.contracts.workflows.generalgo.ExecuteCampaignResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:farm.nurture.core.contracts.workflows.generalgo.ExecuteCampaignResponse)
    MergeFrom(*source);
  }
}

void ExecuteCampaignResponse::MergeFrom(const ExecuteCampaignResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:farm.nurture.core.contracts.workflows.generalgo.ExecuteCampaignResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.status() != 0) {
    _internal_set_status(from._internal_status());
  }
}

void ExecuteCampaignResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:farm.nurture.core.contracts.workflows.generalgo.ExecuteCampaignResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ExecuteCampaignResponse::CopyFrom(const ExecuteCampaignResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:farm.nurture.core.contracts.workflows.generalgo.ExecuteCampaignResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ExecuteCampaignResponse::IsInitialized() const {
  return true;
}

void ExecuteCampaignResponse::InternalSwap(ExecuteCampaignResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(status_, other->status_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ExecuteCampaignResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class RefreshUserContentRequest::_Internal {
 public:
  static const ::farm::nurture::core::contracts::common::ActorID& actor(const RefreshUserContentRequest* msg);
};

const ::farm::nurture::core::contracts::common::ActorID&
RefreshUserContentRequest::_Internal::actor(const RefreshUserContentRequest* msg) {
  return *msg->actor_;
}
void RefreshUserContentRequest::clear_actor() {
  if (GetArena() == nullptr && actor_ != nullptr) {
    delete actor_;
  }
  actor_ = nullptr;
}
RefreshUserContentRequest::RefreshUserContentRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  languagecodes_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:farm.nurture.core.contracts.workflows.generalgo.RefreshUserContentRequest)
}
RefreshUserContentRequest::RefreshUserContentRequest(const RefreshUserContentRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      languagecodes_(from.languagecodes_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_actor()) {
    actor_ = new ::farm::nurture::core::contracts::common::ActorID(*from.actor_);
  } else {
    actor_ = nullptr;
  }
  ::memcpy(&latitude_, &from.latitude_,
    static_cast<size_t>(reinterpret_cast<char*>(&longitude_) -
    reinterpret_cast<char*>(&latitude_)) + sizeof(longitude_));
  // @@protoc_insertion_point(copy_constructor:farm.nurture.core.contracts.workflows.generalgo.RefreshUserContentRequest)
}

void RefreshUserContentRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_RefreshUserContentRequest_Workflows_2fGeneralGoWorkflows_2fgeneral_5fgo_5fworkflows_2eproto.base);
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&actor_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&longitude_) -
      reinterpret_cast<char*>(&actor_)) + sizeof(longitude_));
}

RefreshUserContentRequest::~RefreshUserContentRequest() {
  // @@protoc_insertion_point(destructor:farm.nurture.core.contracts.workflows.generalgo.RefreshUserContentRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RefreshUserContentRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete actor_;
}

void RefreshUserContentRequest::ArenaDtor(void* object) {
  RefreshUserContentRequest* _this = reinterpret_cast< RefreshUserContentRequest* >(object);
  (void)_this;
}
void RefreshUserContentRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RefreshUserContentRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RefreshUserContentRequest& RefreshUserContentRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_RefreshUserContentRequest_Workflows_2fGeneralGoWorkflows_2fgeneral_5fgo_5fworkflows_2eproto.base);
  return *internal_default_instance();
}


void RefreshUserContentRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:farm.nurture.core.contracts.workflows.generalgo.RefreshUserContentRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  languagecodes_.Clear();
  if (GetArena() == nullptr && actor_ != nullptr) {
    delete actor_;
  }
  actor_ = nullptr;
  ::memset(&latitude_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&longitude_) -
      reinterpret_cast<char*>(&latitude_)) + sizeof(longitude_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RefreshUserContentRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .farm.nurture.core.contracts.common.ActorID actor = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_actor(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .farm.nurture.core.contracts.common.LanguageCode languageCodes = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedEnumParser(_internal_mutable_languagecodes(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_add_languagecodes(static_cast<::farm::nurture::core::contracts::common::LanguageCode>(val));
        } else goto handle_unusual;
        continue;
      // double latitude = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 49)) {
          latitude_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // double longitude = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 57)) {
          longitude_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RefreshUserContentRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:farm.nurture.core.contracts.workflows.generalgo.RefreshUserContentRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .farm.nurture.core.contracts.common.ActorID actor = 1;
  if (this->has_actor()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::actor(this), target, stream);
  }

  // repeated .farm.nurture.core.contracts.common.LanguageCode languageCodes = 2;
  {
    int byte_size = _languagecodes_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteEnumPacked(
          2, languagecodes_, byte_size, target);
    }
  }

  // double latitude = 6;
  if (!(this->latitude() <= 0 && this->latitude() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(6, this->_internal_latitude(), target);
  }

  // double longitude = 7;
  if (!(this->longitude() <= 0 && this->longitude() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(7, this->_internal_longitude(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:farm.nurture.core.contracts.workflows.generalgo.RefreshUserContentRequest)
  return target;
}

size_t RefreshUserContentRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:farm.nurture.core.contracts.workflows.generalgo.RefreshUserContentRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .farm.nurture.core.contracts.common.LanguageCode languageCodes = 2;
  {
    size_t data_size = 0;
    unsigned int count = static_cast<unsigned int>(this->_internal_languagecodes_size());for (unsigned int i = 0; i < count; i++) {
      data_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(
        this->_internal_languagecodes(static_cast<int>(i)));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
            static_cast<::PROTOBUF_NAMESPACE_ID::int32>(data_size));
    }
    int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(data_size);
    _languagecodes_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // .farm.nurture.core.contracts.common.ActorID actor = 1;
  if (this->has_actor()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *actor_);
  }

  // double latitude = 6;
  if (!(this->latitude() <= 0 && this->latitude() >= 0)) {
    total_size += 1 + 8;
  }

  // double longitude = 7;
  if (!(this->longitude() <= 0 && this->longitude() >= 0)) {
    total_size += 1 + 8;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RefreshUserContentRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:farm.nurture.core.contracts.workflows.generalgo.RefreshUserContentRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const RefreshUserContentRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RefreshUserContentRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:farm.nurture.core.contracts.workflows.generalgo.RefreshUserContentRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:farm.nurture.core.contracts.workflows.generalgo.RefreshUserContentRequest)
    MergeFrom(*source);
  }
}

void RefreshUserContentRequest::MergeFrom(const RefreshUserContentRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:farm.nurture.core.contracts.workflows.generalgo.RefreshUserContentRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  languagecodes_.MergeFrom(from.languagecodes_);
  if (from.has_actor()) {
    _internal_mutable_actor()->::farm::nurture::core::contracts::common::ActorID::MergeFrom(from._internal_actor());
  }
  if (!(from.latitude() <= 0 && from.latitude() >= 0)) {
    _internal_set_latitude(from._internal_latitude());
  }
  if (!(from.longitude() <= 0 && from.longitude() >= 0)) {
    _internal_set_longitude(from._internal_longitude());
  }
}

void RefreshUserContentRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:farm.nurture.core.contracts.workflows.generalgo.RefreshUserContentRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RefreshUserContentRequest::CopyFrom(const RefreshUserContentRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:farm.nurture.core.contracts.workflows.generalgo.RefreshUserContentRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RefreshUserContentRequest::IsInitialized() const {
  return true;
}

void RefreshUserContentRequest::InternalSwap(RefreshUserContentRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  languagecodes_.InternalSwap(&other->languagecodes_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RefreshUserContentRequest, longitude_)
      + sizeof(RefreshUserContentRequest::longitude_)
      - PROTOBUF_FIELD_OFFSET(RefreshUserContentRequest, actor_)>(
          reinterpret_cast<char*>(&actor_),
          reinterpret_cast<char*>(&other->actor_));
}

::PROTOBUF_NAMESPACE_ID::Metadata RefreshUserContentRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class RefreshUserContentResponse::_Internal {
 public:
};

RefreshUserContentResponse::RefreshUserContentResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  contentids_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:farm.nurture.core.contracts.workflows.generalgo.RefreshUserContentResponse)
}
RefreshUserContentResponse::RefreshUserContentResponse(const RefreshUserContentResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      contentids_(from.contentids_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  status_ = from.status_;
  // @@protoc_insertion_point(copy_constructor:farm.nurture.core.contracts.workflows.generalgo.RefreshUserContentResponse)
}

void RefreshUserContentResponse::SharedCtor() {
  status_ = 0;
}

RefreshUserContentResponse::~RefreshUserContentResponse() {
  // @@protoc_insertion_point(destructor:farm.nurture.core.contracts.workflows.generalgo.RefreshUserContentResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RefreshUserContentResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void RefreshUserContentResponse::ArenaDtor(void* object) {
  RefreshUserContentResponse* _this = reinterpret_cast< RefreshUserContentResponse* >(object);
  (void)_this;
}
void RefreshUserContentResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RefreshUserContentResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RefreshUserContentResponse& RefreshUserContentResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_RefreshUserContentResponse_Workflows_2fGeneralGoWorkflows_2fgeneral_5fgo_5fworkflows_2eproto.base);
  return *internal_default_instance();
}


void RefreshUserContentResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:farm.nurture.core.contracts.workflows.generalgo.RefreshUserContentResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  contentids_.Clear();
  status_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RefreshUserContentResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .farm.nurture.core.contracts.common.ResponseStatus status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_status(static_cast<::farm::nurture::core::contracts::common::ResponseStatus>(val));
        } else goto handle_unusual;
        continue;
      // repeated int64 contentIds = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedInt64Parser(_internal_mutable_contentids(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16) {
          _internal_add_contentids(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RefreshUserContentResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:farm.nurture.core.contracts.workflows.generalgo.RefreshUserContentResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .farm.nurture.core.contracts.common.ResponseStatus status = 1;
  if (this->status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_status(), target);
  }

  // repeated int64 contentIds = 2;
  {
    int byte_size = _contentids_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteInt64Packed(
          2, _internal_contentids(), byte_size, target);
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:farm.nurture.core.contracts.workflows.generalgo.RefreshUserContentResponse)
  return target;
}

size_t RefreshUserContentResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:farm.nurture.core.contracts.workflows.generalgo.RefreshUserContentResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated int64 contentIds = 2;
  {
    size_t data_size = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      Int64Size(this->contentids_);
    if (data_size > 0) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
            static_cast<::PROTOBUF_NAMESPACE_ID::int32>(data_size));
    }
    int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(data_size);
    _contentids_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // .farm.nurture.core.contracts.common.ResponseStatus status = 1;
  if (this->status() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_status());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RefreshUserContentResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:farm.nurture.core.contracts.workflows.generalgo.RefreshUserContentResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const RefreshUserContentResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RefreshUserContentResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:farm.nurture.core.contracts.workflows.generalgo.RefreshUserContentResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:farm.nurture.core.contracts.workflows.generalgo.RefreshUserContentResponse)
    MergeFrom(*source);
  }
}

void RefreshUserContentResponse::MergeFrom(const RefreshUserContentResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:farm.nurture.core.contracts.workflows.generalgo.RefreshUserContentResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  contentids_.MergeFrom(from.contentids_);
  if (from.status() != 0) {
    _internal_set_status(from._internal_status());
  }
}

void RefreshUserContentResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:farm.nurture.core.contracts.workflows.generalgo.RefreshUserContentResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RefreshUserContentResponse::CopyFrom(const RefreshUserContentResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:farm.nurture.core.contracts.workflows.generalgo.RefreshUserContentResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RefreshUserContentResponse::IsInitialized() const {
  return true;
}

void RefreshUserContentResponse::InternalSwap(RefreshUserContentResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  contentids_.InternalSwap(&other->contentids_);
  swap(status_, other->status_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RefreshUserContentResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class PreventiveMaintenanceTriggerRequest::_Internal {
 public:
};

PreventiveMaintenanceTriggerRequest::PreventiveMaintenanceTriggerRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:farm.nurture.core.contracts.workflows.generalgo.PreventiveMaintenanceTriggerRequest)
}
PreventiveMaintenanceTriggerRequest::PreventiveMaintenanceTriggerRequest(const PreventiveMaintenanceTriggerRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:farm.nurture.core.contracts.workflows.generalgo.PreventiveMaintenanceTriggerRequest)
}

void PreventiveMaintenanceTriggerRequest::SharedCtor() {
}

PreventiveMaintenanceTriggerRequest::~PreventiveMaintenanceTriggerRequest() {
  // @@protoc_insertion_point(destructor:farm.nurture.core.contracts.workflows.generalgo.PreventiveMaintenanceTriggerRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void PreventiveMaintenanceTriggerRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void PreventiveMaintenanceTriggerRequest::ArenaDtor(void* object) {
  PreventiveMaintenanceTriggerRequest* _this = reinterpret_cast< PreventiveMaintenanceTriggerRequest* >(object);
  (void)_this;
}
void PreventiveMaintenanceTriggerRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PreventiveMaintenanceTriggerRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PreventiveMaintenanceTriggerRequest& PreventiveMaintenanceTriggerRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_PreventiveMaintenanceTriggerRequest_Workflows_2fGeneralGoWorkflows_2fgeneral_5fgo_5fworkflows_2eproto.base);
  return *internal_default_instance();
}


void PreventiveMaintenanceTriggerRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:farm.nurture.core.contracts.workflows.generalgo.PreventiveMaintenanceTriggerRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PreventiveMaintenanceTriggerRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PreventiveMaintenanceTriggerRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:farm.nurture.core.contracts.workflows.generalgo.PreventiveMaintenanceTriggerRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:farm.nurture.core.contracts.workflows.generalgo.PreventiveMaintenanceTriggerRequest)
  return target;
}

size_t PreventiveMaintenanceTriggerRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:farm.nurture.core.contracts.workflows.generalgo.PreventiveMaintenanceTriggerRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PreventiveMaintenanceTriggerRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:farm.nurture.core.contracts.workflows.generalgo.PreventiveMaintenanceTriggerRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const PreventiveMaintenanceTriggerRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PreventiveMaintenanceTriggerRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:farm.nurture.core.contracts.workflows.generalgo.PreventiveMaintenanceTriggerRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:farm.nurture.core.contracts.workflows.generalgo.PreventiveMaintenanceTriggerRequest)
    MergeFrom(*source);
  }
}

void PreventiveMaintenanceTriggerRequest::MergeFrom(const PreventiveMaintenanceTriggerRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:farm.nurture.core.contracts.workflows.generalgo.PreventiveMaintenanceTriggerRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void PreventiveMaintenanceTriggerRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:farm.nurture.core.contracts.workflows.generalgo.PreventiveMaintenanceTriggerRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PreventiveMaintenanceTriggerRequest::CopyFrom(const PreventiveMaintenanceTriggerRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:farm.nurture.core.contracts.workflows.generalgo.PreventiveMaintenanceTriggerRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PreventiveMaintenanceTriggerRequest::IsInitialized() const {
  return true;
}

void PreventiveMaintenanceTriggerRequest::InternalSwap(PreventiveMaintenanceTriggerRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PreventiveMaintenanceTriggerRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class PreventiveMaintenanceTriggerResponse::_Internal {
 public:
};

PreventiveMaintenanceTriggerResponse::PreventiveMaintenanceTriggerResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:farm.nurture.core.contracts.workflows.generalgo.PreventiveMaintenanceTriggerResponse)
}
PreventiveMaintenanceTriggerResponse::PreventiveMaintenanceTriggerResponse(const PreventiveMaintenanceTriggerResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  status_ = from.status_;
  // @@protoc_insertion_point(copy_constructor:farm.nurture.core.contracts.workflows.generalgo.PreventiveMaintenanceTriggerResponse)
}

void PreventiveMaintenanceTriggerResponse::SharedCtor() {
  status_ = 0;
}

PreventiveMaintenanceTriggerResponse::~PreventiveMaintenanceTriggerResponse() {
  // @@protoc_insertion_point(destructor:farm.nurture.core.contracts.workflows.generalgo.PreventiveMaintenanceTriggerResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void PreventiveMaintenanceTriggerResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void PreventiveMaintenanceTriggerResponse::ArenaDtor(void* object) {
  PreventiveMaintenanceTriggerResponse* _this = reinterpret_cast< PreventiveMaintenanceTriggerResponse* >(object);
  (void)_this;
}
void PreventiveMaintenanceTriggerResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PreventiveMaintenanceTriggerResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PreventiveMaintenanceTriggerResponse& PreventiveMaintenanceTriggerResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_PreventiveMaintenanceTriggerResponse_Workflows_2fGeneralGoWorkflows_2fgeneral_5fgo_5fworkflows_2eproto.base);
  return *internal_default_instance();
}


void PreventiveMaintenanceTriggerResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:farm.nurture.core.contracts.workflows.generalgo.PreventiveMaintenanceTriggerResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  status_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PreventiveMaintenanceTriggerResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .farm.nurture.core.contracts.common.ResponseStatus status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_status(static_cast<::farm::nurture::core::contracts::common::ResponseStatus>(val));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PreventiveMaintenanceTriggerResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:farm.nurture.core.contracts.workflows.generalgo.PreventiveMaintenanceTriggerResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .farm.nurture.core.contracts.common.ResponseStatus status = 1;
  if (this->status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_status(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:farm.nurture.core.contracts.workflows.generalgo.PreventiveMaintenanceTriggerResponse)
  return target;
}

size_t PreventiveMaintenanceTriggerResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:farm.nurture.core.contracts.workflows.generalgo.PreventiveMaintenanceTriggerResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .farm.nurture.core.contracts.common.ResponseStatus status = 1;
  if (this->status() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_status());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PreventiveMaintenanceTriggerResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:farm.nurture.core.contracts.workflows.generalgo.PreventiveMaintenanceTriggerResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const PreventiveMaintenanceTriggerResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PreventiveMaintenanceTriggerResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:farm.nurture.core.contracts.workflows.generalgo.PreventiveMaintenanceTriggerResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:farm.nurture.core.contracts.workflows.generalgo.PreventiveMaintenanceTriggerResponse)
    MergeFrom(*source);
  }
}

void PreventiveMaintenanceTriggerResponse::MergeFrom(const PreventiveMaintenanceTriggerResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:farm.nurture.core.contracts.workflows.generalgo.PreventiveMaintenanceTriggerResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.status() != 0) {
    _internal_set_status(from._internal_status());
  }
}

void PreventiveMaintenanceTriggerResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:farm.nurture.core.contracts.workflows.generalgo.PreventiveMaintenanceTriggerResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PreventiveMaintenanceTriggerResponse::CopyFrom(const PreventiveMaintenanceTriggerResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:farm.nurture.core.contracts.workflows.generalgo.PreventiveMaintenanceTriggerResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PreventiveMaintenanceTriggerResponse::IsInitialized() const {
  return true;
}

void PreventiveMaintenanceTriggerResponse::InternalSwap(PreventiveMaintenanceTriggerResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(status_, other->status_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PreventiveMaintenanceTriggerResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class UpdateActorsMachinePreventiveMaintenanceRequest::_Internal {
 public:
};

void UpdateActorsMachinePreventiveMaintenanceRequest::clear_actordetails() {
  actordetails_.Clear();
}
UpdateActorsMachinePreventiveMaintenanceRequest::UpdateActorsMachinePreventiveMaintenanceRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  actordetails_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:farm.nurture.core.contracts.workflows.generalgo.UpdateActorsMachinePreventiveMaintenanceRequest)
}
UpdateActorsMachinePreventiveMaintenanceRequest::UpdateActorsMachinePreventiveMaintenanceRequest(const UpdateActorsMachinePreventiveMaintenanceRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      actordetails_(from.actordetails_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&machineid_, &from.machineid_,
    static_cast<size_t>(reinterpret_cast<char*>(&machinepreventivemaintenanceid_) -
    reinterpret_cast<char*>(&machineid_)) + sizeof(machinepreventivemaintenanceid_));
  // @@protoc_insertion_point(copy_constructor:farm.nurture.core.contracts.workflows.generalgo.UpdateActorsMachinePreventiveMaintenanceRequest)
}

void UpdateActorsMachinePreventiveMaintenanceRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_UpdateActorsMachinePreventiveMaintenanceRequest_Workflows_2fGeneralGoWorkflows_2fgeneral_5fgo_5fworkflows_2eproto.base);
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&machineid_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&machinepreventivemaintenanceid_) -
      reinterpret_cast<char*>(&machineid_)) + sizeof(machinepreventivemaintenanceid_));
}

UpdateActorsMachinePreventiveMaintenanceRequest::~UpdateActorsMachinePreventiveMaintenanceRequest() {
  // @@protoc_insertion_point(destructor:farm.nurture.core.contracts.workflows.generalgo.UpdateActorsMachinePreventiveMaintenanceRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void UpdateActorsMachinePreventiveMaintenanceRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void UpdateActorsMachinePreventiveMaintenanceRequest::ArenaDtor(void* object) {
  UpdateActorsMachinePreventiveMaintenanceRequest* _this = reinterpret_cast< UpdateActorsMachinePreventiveMaintenanceRequest* >(object);
  (void)_this;
}
void UpdateActorsMachinePreventiveMaintenanceRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void UpdateActorsMachinePreventiveMaintenanceRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const UpdateActorsMachinePreventiveMaintenanceRequest& UpdateActorsMachinePreventiveMaintenanceRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_UpdateActorsMachinePreventiveMaintenanceRequest_Workflows_2fGeneralGoWorkflows_2fgeneral_5fgo_5fworkflows_2eproto.base);
  return *internal_default_instance();
}


void UpdateActorsMachinePreventiveMaintenanceRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:farm.nurture.core.contracts.workflows.generalgo.UpdateActorsMachinePreventiveMaintenanceRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  actordetails_.Clear();
  ::memset(&machineid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&machinepreventivemaintenanceid_) -
      reinterpret_cast<char*>(&machineid_)) + sizeof(machinepreventivemaintenanceid_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UpdateActorsMachinePreventiveMaintenanceRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .farm.nurture.core.contracts.common.ActorID actorDetails = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_actordetails(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      // int32 preventiveMaintenanceId = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          preventivemaintenanceid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 machineId = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          machineid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 machinePreventiveMaintenanceId = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          machinepreventivemaintenanceid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .farm.nurture.core.contracts.ms.PreventiveMaintenanceStatus pmStatus = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_pmstatus(static_cast<::farm::nurture::core::contracts::ms::PreventiveMaintenanceStatus>(val));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* UpdateActorsMachinePreventiveMaintenanceRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:farm.nurture.core.contracts.workflows.generalgo.UpdateActorsMachinePreventiveMaintenanceRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .farm.nurture.core.contracts.common.ActorID actorDetails = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_actordetails_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_actordetails(i), target, stream);
  }

  // int32 preventiveMaintenanceId = 2;
  if (this->preventivemaintenanceid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_preventivemaintenanceid(), target);
  }

  // int64 machineId = 3;
  if (this->machineid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(3, this->_internal_machineid(), target);
  }

  // int64 machinePreventiveMaintenanceId = 4;
  if (this->machinepreventivemaintenanceid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(4, this->_internal_machinepreventivemaintenanceid(), target);
  }

  // .farm.nurture.core.contracts.ms.PreventiveMaintenanceStatus pmStatus = 5;
  if (this->pmstatus() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      5, this->_internal_pmstatus(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:farm.nurture.core.contracts.workflows.generalgo.UpdateActorsMachinePreventiveMaintenanceRequest)
  return target;
}

size_t UpdateActorsMachinePreventiveMaintenanceRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:farm.nurture.core.contracts.workflows.generalgo.UpdateActorsMachinePreventiveMaintenanceRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .farm.nurture.core.contracts.common.ActorID actorDetails = 1;
  total_size += 1UL * this->_internal_actordetails_size();
  for (const auto& msg : this->actordetails_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // int64 machineId = 3;
  if (this->machineid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_machineid());
  }

  // int32 preventiveMaintenanceId = 2;
  if (this->preventivemaintenanceid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_preventivemaintenanceid());
  }

  // .farm.nurture.core.contracts.ms.PreventiveMaintenanceStatus pmStatus = 5;
  if (this->pmstatus() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_pmstatus());
  }

  // int64 machinePreventiveMaintenanceId = 4;
  if (this->machinepreventivemaintenanceid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_machinepreventivemaintenanceid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UpdateActorsMachinePreventiveMaintenanceRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:farm.nurture.core.contracts.workflows.generalgo.UpdateActorsMachinePreventiveMaintenanceRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const UpdateActorsMachinePreventiveMaintenanceRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<UpdateActorsMachinePreventiveMaintenanceRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:farm.nurture.core.contracts.workflows.generalgo.UpdateActorsMachinePreventiveMaintenanceRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:farm.nurture.core.contracts.workflows.generalgo.UpdateActorsMachinePreventiveMaintenanceRequest)
    MergeFrom(*source);
  }
}

void UpdateActorsMachinePreventiveMaintenanceRequest::MergeFrom(const UpdateActorsMachinePreventiveMaintenanceRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:farm.nurture.core.contracts.workflows.generalgo.UpdateActorsMachinePreventiveMaintenanceRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  actordetails_.MergeFrom(from.actordetails_);
  if (from.machineid() != 0) {
    _internal_set_machineid(from._internal_machineid());
  }
  if (from.preventivemaintenanceid() != 0) {
    _internal_set_preventivemaintenanceid(from._internal_preventivemaintenanceid());
  }
  if (from.pmstatus() != 0) {
    _internal_set_pmstatus(from._internal_pmstatus());
  }
  if (from.machinepreventivemaintenanceid() != 0) {
    _internal_set_machinepreventivemaintenanceid(from._internal_machinepreventivemaintenanceid());
  }
}

void UpdateActorsMachinePreventiveMaintenanceRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:farm.nurture.core.contracts.workflows.generalgo.UpdateActorsMachinePreventiveMaintenanceRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateActorsMachinePreventiveMaintenanceRequest::CopyFrom(const UpdateActorsMachinePreventiveMaintenanceRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:farm.nurture.core.contracts.workflows.generalgo.UpdateActorsMachinePreventiveMaintenanceRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateActorsMachinePreventiveMaintenanceRequest::IsInitialized() const {
  return true;
}

void UpdateActorsMachinePreventiveMaintenanceRequest::InternalSwap(UpdateActorsMachinePreventiveMaintenanceRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  actordetails_.InternalSwap(&other->actordetails_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(UpdateActorsMachinePreventiveMaintenanceRequest, machinepreventivemaintenanceid_)
      + sizeof(UpdateActorsMachinePreventiveMaintenanceRequest::machinepreventivemaintenanceid_)
      - PROTOBUF_FIELD_OFFSET(UpdateActorsMachinePreventiveMaintenanceRequest, machineid_)>(
          reinterpret_cast<char*>(&machineid_),
          reinterpret_cast<char*>(&other->machineid_));
}

::PROTOBUF_NAMESPACE_ID::Metadata UpdateActorsMachinePreventiveMaintenanceRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class UpdateActorsMachinePreventiveMaintenanceResponse::_Internal {
 public:
};

UpdateActorsMachinePreventiveMaintenanceResponse::UpdateActorsMachinePreventiveMaintenanceResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:farm.nurture.core.contracts.workflows.generalgo.UpdateActorsMachinePreventiveMaintenanceResponse)
}
UpdateActorsMachinePreventiveMaintenanceResponse::UpdateActorsMachinePreventiveMaintenanceResponse(const UpdateActorsMachinePreventiveMaintenanceResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  status_ = from.status_;
  // @@protoc_insertion_point(copy_constructor:farm.nurture.core.contracts.workflows.generalgo.UpdateActorsMachinePreventiveMaintenanceResponse)
}

void UpdateActorsMachinePreventiveMaintenanceResponse::SharedCtor() {
  status_ = 0;
}

UpdateActorsMachinePreventiveMaintenanceResponse::~UpdateActorsMachinePreventiveMaintenanceResponse() {
  // @@protoc_insertion_point(destructor:farm.nurture.core.contracts.workflows.generalgo.UpdateActorsMachinePreventiveMaintenanceResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void UpdateActorsMachinePreventiveMaintenanceResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void UpdateActorsMachinePreventiveMaintenanceResponse::ArenaDtor(void* object) {
  UpdateActorsMachinePreventiveMaintenanceResponse* _this = reinterpret_cast< UpdateActorsMachinePreventiveMaintenanceResponse* >(object);
  (void)_this;
}
void UpdateActorsMachinePreventiveMaintenanceResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void UpdateActorsMachinePreventiveMaintenanceResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const UpdateActorsMachinePreventiveMaintenanceResponse& UpdateActorsMachinePreventiveMaintenanceResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_UpdateActorsMachinePreventiveMaintenanceResponse_Workflows_2fGeneralGoWorkflows_2fgeneral_5fgo_5fworkflows_2eproto.base);
  return *internal_default_instance();
}


void UpdateActorsMachinePreventiveMaintenanceResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:farm.nurture.core.contracts.workflows.generalgo.UpdateActorsMachinePreventiveMaintenanceResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  status_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UpdateActorsMachinePreventiveMaintenanceResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .farm.nurture.core.contracts.common.ResponseStatus status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_status(static_cast<::farm::nurture::core::contracts::common::ResponseStatus>(val));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* UpdateActorsMachinePreventiveMaintenanceResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:farm.nurture.core.contracts.workflows.generalgo.UpdateActorsMachinePreventiveMaintenanceResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .farm.nurture.core.contracts.common.ResponseStatus status = 1;
  if (this->status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_status(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:farm.nurture.core.contracts.workflows.generalgo.UpdateActorsMachinePreventiveMaintenanceResponse)
  return target;
}

size_t UpdateActorsMachinePreventiveMaintenanceResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:farm.nurture.core.contracts.workflows.generalgo.UpdateActorsMachinePreventiveMaintenanceResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .farm.nurture.core.contracts.common.ResponseStatus status = 1;
  if (this->status() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_status());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UpdateActorsMachinePreventiveMaintenanceResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:farm.nurture.core.contracts.workflows.generalgo.UpdateActorsMachinePreventiveMaintenanceResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const UpdateActorsMachinePreventiveMaintenanceResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<UpdateActorsMachinePreventiveMaintenanceResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:farm.nurture.core.contracts.workflows.generalgo.UpdateActorsMachinePreventiveMaintenanceResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:farm.nurture.core.contracts.workflows.generalgo.UpdateActorsMachinePreventiveMaintenanceResponse)
    MergeFrom(*source);
  }
}

void UpdateActorsMachinePreventiveMaintenanceResponse::MergeFrom(const UpdateActorsMachinePreventiveMaintenanceResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:farm.nurture.core.contracts.workflows.generalgo.UpdateActorsMachinePreventiveMaintenanceResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.status() != 0) {
    _internal_set_status(from._internal_status());
  }
}

void UpdateActorsMachinePreventiveMaintenanceResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:farm.nurture.core.contracts.workflows.generalgo.UpdateActorsMachinePreventiveMaintenanceResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateActorsMachinePreventiveMaintenanceResponse::CopyFrom(const UpdateActorsMachinePreventiveMaintenanceResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:farm.nurture.core.contracts.workflows.generalgo.UpdateActorsMachinePreventiveMaintenanceResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateActorsMachinePreventiveMaintenanceResponse::IsInitialized() const {
  return true;
}

void UpdateActorsMachinePreventiveMaintenanceResponse::InternalSwap(UpdateActorsMachinePreventiveMaintenanceResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(status_, other->status_);
}

::PROTOBUF_NAMESPACE_ID::Metadata UpdateActorsMachinePreventiveMaintenanceResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class RescheduleMachinePreventiveMaintenanceRequest::_Internal {
 public:
};

RescheduleMachinePreventiveMaintenanceRequest::RescheduleMachinePreventiveMaintenanceRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:farm.nurture.core.contracts.workflows.generalgo.RescheduleMachinePreventiveMaintenanceRequest)
}
RescheduleMachinePreventiveMaintenanceRequest::RescheduleMachinePreventiveMaintenanceRequest(const RescheduleMachinePreventiveMaintenanceRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&machineid_, &from.machineid_,
    static_cast<size_t>(reinterpret_cast<char*>(&machinepreventivemaintenanceid_) -
    reinterpret_cast<char*>(&machineid_)) + sizeof(machinepreventivemaintenanceid_));
  // @@protoc_insertion_point(copy_constructor:farm.nurture.core.contracts.workflows.generalgo.RescheduleMachinePreventiveMaintenanceRequest)
}

void RescheduleMachinePreventiveMaintenanceRequest::SharedCtor() {
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&machineid_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&machinepreventivemaintenanceid_) -
      reinterpret_cast<char*>(&machineid_)) + sizeof(machinepreventivemaintenanceid_));
}

RescheduleMachinePreventiveMaintenanceRequest::~RescheduleMachinePreventiveMaintenanceRequest() {
  // @@protoc_insertion_point(destructor:farm.nurture.core.contracts.workflows.generalgo.RescheduleMachinePreventiveMaintenanceRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RescheduleMachinePreventiveMaintenanceRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void RescheduleMachinePreventiveMaintenanceRequest::ArenaDtor(void* object) {
  RescheduleMachinePreventiveMaintenanceRequest* _this = reinterpret_cast< RescheduleMachinePreventiveMaintenanceRequest* >(object);
  (void)_this;
}
void RescheduleMachinePreventiveMaintenanceRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RescheduleMachinePreventiveMaintenanceRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RescheduleMachinePreventiveMaintenanceRequest& RescheduleMachinePreventiveMaintenanceRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_RescheduleMachinePreventiveMaintenanceRequest_Workflows_2fGeneralGoWorkflows_2fgeneral_5fgo_5fworkflows_2eproto.base);
  return *internal_default_instance();
}


void RescheduleMachinePreventiveMaintenanceRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:farm.nurture.core.contracts.workflows.generalgo.RescheduleMachinePreventiveMaintenanceRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&machineid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&machinepreventivemaintenanceid_) -
      reinterpret_cast<char*>(&machineid_)) + sizeof(machinepreventivemaintenanceid_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RescheduleMachinePreventiveMaintenanceRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int64 machineId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          machineid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 date = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          date_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 machinePreventiveMaintenanceId = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          machinepreventivemaintenanceid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RescheduleMachinePreventiveMaintenanceRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:farm.nurture.core.contracts.workflows.generalgo.RescheduleMachinePreventiveMaintenanceRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 machineId = 1;
  if (this->machineid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(1, this->_internal_machineid(), target);
  }

  // int64 date = 2;
  if (this->date() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->_internal_date(), target);
  }

  // int64 machinePreventiveMaintenanceId = 3;
  if (this->machinepreventivemaintenanceid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(3, this->_internal_machinepreventivemaintenanceid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:farm.nurture.core.contracts.workflows.generalgo.RescheduleMachinePreventiveMaintenanceRequest)
  return target;
}

size_t RescheduleMachinePreventiveMaintenanceRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:farm.nurture.core.contracts.workflows.generalgo.RescheduleMachinePreventiveMaintenanceRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 machineId = 1;
  if (this->machineid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_machineid());
  }

  // int64 date = 2;
  if (this->date() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_date());
  }

  // int64 machinePreventiveMaintenanceId = 3;
  if (this->machinepreventivemaintenanceid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_machinepreventivemaintenanceid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RescheduleMachinePreventiveMaintenanceRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:farm.nurture.core.contracts.workflows.generalgo.RescheduleMachinePreventiveMaintenanceRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const RescheduleMachinePreventiveMaintenanceRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RescheduleMachinePreventiveMaintenanceRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:farm.nurture.core.contracts.workflows.generalgo.RescheduleMachinePreventiveMaintenanceRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:farm.nurture.core.contracts.workflows.generalgo.RescheduleMachinePreventiveMaintenanceRequest)
    MergeFrom(*source);
  }
}

void RescheduleMachinePreventiveMaintenanceRequest::MergeFrom(const RescheduleMachinePreventiveMaintenanceRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:farm.nurture.core.contracts.workflows.generalgo.RescheduleMachinePreventiveMaintenanceRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.machineid() != 0) {
    _internal_set_machineid(from._internal_machineid());
  }
  if (from.date() != 0) {
    _internal_set_date(from._internal_date());
  }
  if (from.machinepreventivemaintenanceid() != 0) {
    _internal_set_machinepreventivemaintenanceid(from._internal_machinepreventivemaintenanceid());
  }
}

void RescheduleMachinePreventiveMaintenanceRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:farm.nurture.core.contracts.workflows.generalgo.RescheduleMachinePreventiveMaintenanceRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RescheduleMachinePreventiveMaintenanceRequest::CopyFrom(const RescheduleMachinePreventiveMaintenanceRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:farm.nurture.core.contracts.workflows.generalgo.RescheduleMachinePreventiveMaintenanceRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RescheduleMachinePreventiveMaintenanceRequest::IsInitialized() const {
  return true;
}

void RescheduleMachinePreventiveMaintenanceRequest::InternalSwap(RescheduleMachinePreventiveMaintenanceRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RescheduleMachinePreventiveMaintenanceRequest, machinepreventivemaintenanceid_)
      + sizeof(RescheduleMachinePreventiveMaintenanceRequest::machinepreventivemaintenanceid_)
      - PROTOBUF_FIELD_OFFSET(RescheduleMachinePreventiveMaintenanceRequest, machineid_)>(
          reinterpret_cast<char*>(&machineid_),
          reinterpret_cast<char*>(&other->machineid_));
}

::PROTOBUF_NAMESPACE_ID::Metadata RescheduleMachinePreventiveMaintenanceRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class RescheduleMachinePreventiveMaintenanceResponse::_Internal {
 public:
};

RescheduleMachinePreventiveMaintenanceResponse::RescheduleMachinePreventiveMaintenanceResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:farm.nurture.core.contracts.workflows.generalgo.RescheduleMachinePreventiveMaintenanceResponse)
}
RescheduleMachinePreventiveMaintenanceResponse::RescheduleMachinePreventiveMaintenanceResponse(const RescheduleMachinePreventiveMaintenanceResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  status_ = from.status_;
  // @@protoc_insertion_point(copy_constructor:farm.nurture.core.contracts.workflows.generalgo.RescheduleMachinePreventiveMaintenanceResponse)
}

void RescheduleMachinePreventiveMaintenanceResponse::SharedCtor() {
  status_ = 0;
}

RescheduleMachinePreventiveMaintenanceResponse::~RescheduleMachinePreventiveMaintenanceResponse() {
  // @@protoc_insertion_point(destructor:farm.nurture.core.contracts.workflows.generalgo.RescheduleMachinePreventiveMaintenanceResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RescheduleMachinePreventiveMaintenanceResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void RescheduleMachinePreventiveMaintenanceResponse::ArenaDtor(void* object) {
  RescheduleMachinePreventiveMaintenanceResponse* _this = reinterpret_cast< RescheduleMachinePreventiveMaintenanceResponse* >(object);
  (void)_this;
}
void RescheduleMachinePreventiveMaintenanceResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RescheduleMachinePreventiveMaintenanceResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RescheduleMachinePreventiveMaintenanceResponse& RescheduleMachinePreventiveMaintenanceResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_RescheduleMachinePreventiveMaintenanceResponse_Workflows_2fGeneralGoWorkflows_2fgeneral_5fgo_5fworkflows_2eproto.base);
  return *internal_default_instance();
}


void RescheduleMachinePreventiveMaintenanceResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:farm.nurture.core.contracts.workflows.generalgo.RescheduleMachinePreventiveMaintenanceResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  status_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RescheduleMachinePreventiveMaintenanceResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .farm.nurture.core.contracts.common.ResponseStatus status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_status(static_cast<::farm::nurture::core::contracts::common::ResponseStatus>(val));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RescheduleMachinePreventiveMaintenanceResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:farm.nurture.core.contracts.workflows.generalgo.RescheduleMachinePreventiveMaintenanceResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .farm.nurture.core.contracts.common.ResponseStatus status = 1;
  if (this->status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_status(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:farm.nurture.core.contracts.workflows.generalgo.RescheduleMachinePreventiveMaintenanceResponse)
  return target;
}

size_t RescheduleMachinePreventiveMaintenanceResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:farm.nurture.core.contracts.workflows.generalgo.RescheduleMachinePreventiveMaintenanceResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .farm.nurture.core.contracts.common.ResponseStatus status = 1;
  if (this->status() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_status());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RescheduleMachinePreventiveMaintenanceResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:farm.nurture.core.contracts.workflows.generalgo.RescheduleMachinePreventiveMaintenanceResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const RescheduleMachinePreventiveMaintenanceResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RescheduleMachinePreventiveMaintenanceResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:farm.nurture.core.contracts.workflows.generalgo.RescheduleMachinePreventiveMaintenanceResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:farm.nurture.core.contracts.workflows.generalgo.RescheduleMachinePreventiveMaintenanceResponse)
    MergeFrom(*source);
  }
}

void RescheduleMachinePreventiveMaintenanceResponse::MergeFrom(const RescheduleMachinePreventiveMaintenanceResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:farm.nurture.core.contracts.workflows.generalgo.RescheduleMachinePreventiveMaintenanceResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.status() != 0) {
    _internal_set_status(from._internal_status());
  }
}

void RescheduleMachinePreventiveMaintenanceResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:farm.nurture.core.contracts.workflows.generalgo.RescheduleMachinePreventiveMaintenanceResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RescheduleMachinePreventiveMaintenanceResponse::CopyFrom(const RescheduleMachinePreventiveMaintenanceResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:farm.nurture.core.contracts.workflows.generalgo.RescheduleMachinePreventiveMaintenanceResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RescheduleMachinePreventiveMaintenanceResponse::IsInitialized() const {
  return true;
}

void RescheduleMachinePreventiveMaintenanceResponse::InternalSwap(RescheduleMachinePreventiveMaintenanceResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(status_, other->status_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RescheduleMachinePreventiveMaintenanceResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class HandoverOtpRequest::_Internal {
 public:
  static const ::farm::nurture::core::contracts::common::ActorID& actordetails(const HandoverOtpRequest* msg);
};

const ::farm::nurture::core::contracts::common::ActorID&
HandoverOtpRequest::_Internal::actordetails(const HandoverOtpRequest* msg) {
  return *msg->actordetails_;
}
void HandoverOtpRequest::clear_actordetails() {
  if (GetArena() == nullptr && actordetails_ != nullptr) {
    delete actordetails_;
  }
  actordetails_ = nullptr;
}
HandoverOtpRequest::HandoverOtpRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:farm.nurture.core.contracts.workflows.generalgo.HandoverOtpRequest)
}
HandoverOtpRequest::HandoverOtpRequest(const HandoverOtpRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  otp_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_otp().empty()) {
    otp_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_otp(), 
      GetArena());
  }
  mobilenumber_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_mobilenumber().empty()) {
    mobilenumber_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_mobilenumber(), 
      GetArena());
  }
  if (from._internal_has_actordetails()) {
    actordetails_ = new ::farm::nurture::core::contracts::common::ActorID(*from.actordetails_);
  } else {
    actordetails_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:farm.nurture.core.contracts.workflows.generalgo.HandoverOtpRequest)
}

void HandoverOtpRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_HandoverOtpRequest_Workflows_2fGeneralGoWorkflows_2fgeneral_5fgo_5fworkflows_2eproto.base);
  otp_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  mobilenumber_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  actordetails_ = nullptr;
}

HandoverOtpRequest::~HandoverOtpRequest() {
  // @@protoc_insertion_point(destructor:farm.nurture.core.contracts.workflows.generalgo.HandoverOtpRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void HandoverOtpRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  otp_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  mobilenumber_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete actordetails_;
}

void HandoverOtpRequest::ArenaDtor(void* object) {
  HandoverOtpRequest* _this = reinterpret_cast< HandoverOtpRequest* >(object);
  (void)_this;
}
void HandoverOtpRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void HandoverOtpRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const HandoverOtpRequest& HandoverOtpRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_HandoverOtpRequest_Workflows_2fGeneralGoWorkflows_2fgeneral_5fgo_5fworkflows_2eproto.base);
  return *internal_default_instance();
}


void HandoverOtpRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:farm.nurture.core.contracts.workflows.generalgo.HandoverOtpRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  otp_.ClearToEmpty();
  mobilenumber_.ClearToEmpty();
  if (GetArena() == nullptr && actordetails_ != nullptr) {
    delete actordetails_;
  }
  actordetails_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* HandoverOtpRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string otp = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_otp();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "farm.nurture.core.contracts.workflows.generalgo.HandoverOtpRequest.otp"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .farm.nurture.core.contracts.common.ActorID actorDetails = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_actordetails(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string mobileNumber = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_mobilenumber();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "farm.nurture.core.contracts.workflows.generalgo.HandoverOtpRequest.mobileNumber"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* HandoverOtpRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:farm.nurture.core.contracts.workflows.generalgo.HandoverOtpRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string otp = 1;
  if (this->otp().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_otp().data(), static_cast<int>(this->_internal_otp().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "farm.nurture.core.contracts.workflows.generalgo.HandoverOtpRequest.otp");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_otp(), target);
  }

  // .farm.nurture.core.contracts.common.ActorID actorDetails = 2;
  if (this->has_actordetails()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::actordetails(this), target, stream);
  }

  // string mobileNumber = 3;
  if (this->mobilenumber().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_mobilenumber().data(), static_cast<int>(this->_internal_mobilenumber().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "farm.nurture.core.contracts.workflows.generalgo.HandoverOtpRequest.mobileNumber");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_mobilenumber(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:farm.nurture.core.contracts.workflows.generalgo.HandoverOtpRequest)
  return target;
}

size_t HandoverOtpRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:farm.nurture.core.contracts.workflows.generalgo.HandoverOtpRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string otp = 1;
  if (this->otp().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_otp());
  }

  // string mobileNumber = 3;
  if (this->mobilenumber().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_mobilenumber());
  }

  // .farm.nurture.core.contracts.common.ActorID actorDetails = 2;
  if (this->has_actordetails()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *actordetails_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void HandoverOtpRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:farm.nurture.core.contracts.workflows.generalgo.HandoverOtpRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const HandoverOtpRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<HandoverOtpRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:farm.nurture.core.contracts.workflows.generalgo.HandoverOtpRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:farm.nurture.core.contracts.workflows.generalgo.HandoverOtpRequest)
    MergeFrom(*source);
  }
}

void HandoverOtpRequest::MergeFrom(const HandoverOtpRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:farm.nurture.core.contracts.workflows.generalgo.HandoverOtpRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.otp().size() > 0) {
    _internal_set_otp(from._internal_otp());
  }
  if (from.mobilenumber().size() > 0) {
    _internal_set_mobilenumber(from._internal_mobilenumber());
  }
  if (from.has_actordetails()) {
    _internal_mutable_actordetails()->::farm::nurture::core::contracts::common::ActorID::MergeFrom(from._internal_actordetails());
  }
}

void HandoverOtpRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:farm.nurture.core.contracts.workflows.generalgo.HandoverOtpRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HandoverOtpRequest::CopyFrom(const HandoverOtpRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:farm.nurture.core.contracts.workflows.generalgo.HandoverOtpRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HandoverOtpRequest::IsInitialized() const {
  return true;
}

void HandoverOtpRequest::InternalSwap(HandoverOtpRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  otp_.Swap(&other->otp_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  mobilenumber_.Swap(&other->mobilenumber_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(actordetails_, other->actordetails_);
}

::PROTOBUF_NAMESPACE_ID::Metadata HandoverOtpRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class HandoverOtpResponse::_Internal {
 public:
};

HandoverOtpResponse::HandoverOtpResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:farm.nurture.core.contracts.workflows.generalgo.HandoverOtpResponse)
}
HandoverOtpResponse::HandoverOtpResponse(const HandoverOtpResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  status_ = from.status_;
  // @@protoc_insertion_point(copy_constructor:farm.nurture.core.contracts.workflows.generalgo.HandoverOtpResponse)
}

void HandoverOtpResponse::SharedCtor() {
  status_ = 0;
}

HandoverOtpResponse::~HandoverOtpResponse() {
  // @@protoc_insertion_point(destructor:farm.nurture.core.contracts.workflows.generalgo.HandoverOtpResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void HandoverOtpResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void HandoverOtpResponse::ArenaDtor(void* object) {
  HandoverOtpResponse* _this = reinterpret_cast< HandoverOtpResponse* >(object);
  (void)_this;
}
void HandoverOtpResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void HandoverOtpResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const HandoverOtpResponse& HandoverOtpResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_HandoverOtpResponse_Workflows_2fGeneralGoWorkflows_2fgeneral_5fgo_5fworkflows_2eproto.base);
  return *internal_default_instance();
}


void HandoverOtpResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:farm.nurture.core.contracts.workflows.generalgo.HandoverOtpResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  status_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* HandoverOtpResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .farm.nurture.core.contracts.common.ResponseStatus status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_status(static_cast<::farm::nurture::core::contracts::common::ResponseStatus>(val));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* HandoverOtpResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:farm.nurture.core.contracts.workflows.generalgo.HandoverOtpResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .farm.nurture.core.contracts.common.ResponseStatus status = 1;
  if (this->status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_status(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:farm.nurture.core.contracts.workflows.generalgo.HandoverOtpResponse)
  return target;
}

size_t HandoverOtpResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:farm.nurture.core.contracts.workflows.generalgo.HandoverOtpResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .farm.nurture.core.contracts.common.ResponseStatus status = 1;
  if (this->status() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_status());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void HandoverOtpResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:farm.nurture.core.contracts.workflows.generalgo.HandoverOtpResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const HandoverOtpResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<HandoverOtpResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:farm.nurture.core.contracts.workflows.generalgo.HandoverOtpResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:farm.nurture.core.contracts.workflows.generalgo.HandoverOtpResponse)
    MergeFrom(*source);
  }
}

void HandoverOtpResponse::MergeFrom(const HandoverOtpResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:farm.nurture.core.contracts.workflows.generalgo.HandoverOtpResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.status() != 0) {
    _internal_set_status(from._internal_status());
  }
}

void HandoverOtpResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:farm.nurture.core.contracts.workflows.generalgo.HandoverOtpResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HandoverOtpResponse::CopyFrom(const HandoverOtpResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:farm.nurture.core.contracts.workflows.generalgo.HandoverOtpResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HandoverOtpResponse::IsInitialized() const {
  return true;
}

void HandoverOtpResponse::InternalSwap(HandoverOtpResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(status_, other->status_);
}

::PROTOBUF_NAMESPACE_ID::Metadata HandoverOtpResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class Attributes::_Internal {
 public:
};

Attributes::Attributes(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:farm.nurture.core.contracts.workflows.generalgo.Attributes)
}
Attributes::Attributes(const Attributes& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  key_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_key().empty()) {
    key_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_key(), 
      GetArena());
  }
  value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_value().empty()) {
    value_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_value(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:farm.nurture.core.contracts.workflows.generalgo.Attributes)
}

void Attributes::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Attributes_Workflows_2fGeneralGoWorkflows_2fgeneral_5fgo_5fworkflows_2eproto.base);
  key_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

Attributes::~Attributes() {
  // @@protoc_insertion_point(destructor:farm.nurture.core.contracts.workflows.generalgo.Attributes)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Attributes::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  key_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  value_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void Attributes::ArenaDtor(void* object) {
  Attributes* _this = reinterpret_cast< Attributes* >(object);
  (void)_this;
}
void Attributes::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Attributes::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Attributes& Attributes::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Attributes_Workflows_2fGeneralGoWorkflows_2fgeneral_5fgo_5fworkflows_2eproto.base);
  return *internal_default_instance();
}


void Attributes::Clear() {
// @@protoc_insertion_point(message_clear_start:farm.nurture.core.contracts.workflows.generalgo.Attributes)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  key_.ClearToEmpty();
  value_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Attributes::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string key = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_key();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "farm.nurture.core.contracts.workflows.generalgo.Attributes.key"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string value = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_value();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "farm.nurture.core.contracts.workflows.generalgo.Attributes.value"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Attributes::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:farm.nurture.core.contracts.workflows.generalgo.Attributes)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string key = 1;
  if (this->key().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_key().data(), static_cast<int>(this->_internal_key().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "farm.nurture.core.contracts.workflows.generalgo.Attributes.key");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_key(), target);
  }

  // string value = 2;
  if (this->value().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_value().data(), static_cast<int>(this->_internal_value().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "farm.nurture.core.contracts.workflows.generalgo.Attributes.value");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_value(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:farm.nurture.core.contracts.workflows.generalgo.Attributes)
  return target;
}

size_t Attributes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:farm.nurture.core.contracts.workflows.generalgo.Attributes)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string key = 1;
  if (this->key().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_key());
  }

  // string value = 2;
  if (this->value().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_value());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Attributes::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:farm.nurture.core.contracts.workflows.generalgo.Attributes)
  GOOGLE_DCHECK_NE(&from, this);
  const Attributes* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Attributes>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:farm.nurture.core.contracts.workflows.generalgo.Attributes)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:farm.nurture.core.contracts.workflows.generalgo.Attributes)
    MergeFrom(*source);
  }
}

void Attributes::MergeFrom(const Attributes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:farm.nurture.core.contracts.workflows.generalgo.Attributes)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.key().size() > 0) {
    _internal_set_key(from._internal_key());
  }
  if (from.value().size() > 0) {
    _internal_set_value(from._internal_value());
  }
}

void Attributes::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:farm.nurture.core.contracts.workflows.generalgo.Attributes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Attributes::CopyFrom(const Attributes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:farm.nurture.core.contracts.workflows.generalgo.Attributes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Attributes::IsInitialized() const {
  return true;
}

void Attributes::InternalSwap(Attributes* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  key_.Swap(&other->key_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  value_.Swap(&other->value_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata Attributes::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class OfferRewardRequest::_Internal {
 public:
  static const ::farm::nurture::core::contracts::common::ActorID& userdetails(const OfferRewardRequest* msg);
  static const PROTOBUF_NAMESPACE_ID::Timestamp& allottedtime(const OfferRewardRequest* msg);
  static const PROTOBUF_NAMESPACE_ID::Timestamp& validfrom(const OfferRewardRequest* msg);
  static const PROTOBUF_NAMESPACE_ID::Timestamp& validto(const OfferRewardRequest* msg);
  static const PROTOBUF_NAMESPACE_ID::Timestamp& createdat(const OfferRewardRequest* msg);
  static const PROTOBUF_NAMESPACE_ID::Timestamp& updatedat(const OfferRewardRequest* msg);
};

const ::farm::nurture::core::contracts::common::ActorID&
OfferRewardRequest::_Internal::userdetails(const OfferRewardRequest* msg) {
  return *msg->userdetails_;
}
const PROTOBUF_NAMESPACE_ID::Timestamp&
OfferRewardRequest::_Internal::allottedtime(const OfferRewardRequest* msg) {
  return *msg->allottedtime_;
}
const PROTOBUF_NAMESPACE_ID::Timestamp&
OfferRewardRequest::_Internal::validfrom(const OfferRewardRequest* msg) {
  return *msg->validfrom_;
}
const PROTOBUF_NAMESPACE_ID::Timestamp&
OfferRewardRequest::_Internal::validto(const OfferRewardRequest* msg) {
  return *msg->validto_;
}
const PROTOBUF_NAMESPACE_ID::Timestamp&
OfferRewardRequest::_Internal::createdat(const OfferRewardRequest* msg) {
  return *msg->createdat_;
}
const PROTOBUF_NAMESPACE_ID::Timestamp&
OfferRewardRequest::_Internal::updatedat(const OfferRewardRequest* msg) {
  return *msg->updatedat_;
}
void OfferRewardRequest::clear_userdetails() {
  if (GetArena() == nullptr && userdetails_ != nullptr) {
    delete userdetails_;
  }
  userdetails_ = nullptr;
}
void OfferRewardRequest::clear_allottedtime() {
  if (GetArena() == nullptr && allottedtime_ != nullptr) {
    delete allottedtime_;
  }
  allottedtime_ = nullptr;
}
void OfferRewardRequest::clear_validfrom() {
  if (GetArena() == nullptr && validfrom_ != nullptr) {
    delete validfrom_;
  }
  validfrom_ = nullptr;
}
void OfferRewardRequest::clear_validto() {
  if (GetArena() == nullptr && validto_ != nullptr) {
    delete validto_;
  }
  validto_ = nullptr;
}
void OfferRewardRequest::clear_createdat() {
  if (GetArena() == nullptr && createdat_ != nullptr) {
    delete createdat_;
  }
  createdat_ = nullptr;
}
void OfferRewardRequest::clear_updatedat() {
  if (GetArena() == nullptr && updatedat_ != nullptr) {
    delete updatedat_;
  }
  updatedat_ = nullptr;
}
OfferRewardRequest::OfferRewardRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  attributes_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:farm.nurture.core.contracts.workflows.generalgo.OfferRewardRequest)
}
OfferRewardRequest::OfferRewardRequest(const OfferRewardRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      attributes_(from.attributes_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  source_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_source().empty()) {
    source_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_source(), 
      GetArena());
  }
  sourcereferenceid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_sourcereferenceid().empty()) {
    sourcereferenceid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_sourcereferenceid(), 
      GetArena());
  }
  correctionid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_correctionid().empty()) {
    correctionid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_correctionid(), 
      GetArena());
  }
  parentcorrectionid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_parentcorrectionid().empty()) {
    parentcorrectionid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_parentcorrectionid(), 
      GetArena());
  }
  titlekey_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_titlekey().empty()) {
    titlekey_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_titlekey(), 
      GetArena());
  }
  descriptionkey_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_descriptionkey().empty()) {
    descriptionkey_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_descriptionkey(), 
      GetArena());
  }
  if (from._internal_has_userdetails()) {
    userdetails_ = new ::farm::nurture::core::contracts::common::ActorID(*from.userdetails_);
  } else {
    userdetails_ = nullptr;
  }
  if (from._internal_has_allottedtime()) {
    allottedtime_ = new PROTOBUF_NAMESPACE_ID::Timestamp(*from.allottedtime_);
  } else {
    allottedtime_ = nullptr;
  }
  if (from._internal_has_validfrom()) {
    validfrom_ = new PROTOBUF_NAMESPACE_ID::Timestamp(*from.validfrom_);
  } else {
    validfrom_ = nullptr;
  }
  if (from._internal_has_validto()) {
    validto_ = new PROTOBUF_NAMESPACE_ID::Timestamp(*from.validto_);
  } else {
    validto_ = nullptr;
  }
  if (from._internal_has_createdat()) {
    createdat_ = new PROTOBUF_NAMESPACE_ID::Timestamp(*from.createdat_);
  } else {
    createdat_ = nullptr;
  }
  if (from._internal_has_updatedat()) {
    updatedat_ = new PROTOBUF_NAMESPACE_ID::Timestamp(*from.updatedat_);
  } else {
    updatedat_ = nullptr;
  }
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&status_) -
    reinterpret_cast<char*>(&id_)) + sizeof(status_));
  // @@protoc_insertion_point(copy_constructor:farm.nurture.core.contracts.workflows.generalgo.OfferRewardRequest)
}

void OfferRewardRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_OfferRewardRequest_Workflows_2fGeneralGoWorkflows_2fgeneral_5fgo_5fworkflows_2eproto.base);
  source_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  sourcereferenceid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  correctionid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  parentcorrectionid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  titlekey_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  descriptionkey_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&userdetails_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&status_) -
      reinterpret_cast<char*>(&userdetails_)) + sizeof(status_));
}

OfferRewardRequest::~OfferRewardRequest() {
  // @@protoc_insertion_point(destructor:farm.nurture.core.contracts.workflows.generalgo.OfferRewardRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void OfferRewardRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  source_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  sourcereferenceid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  correctionid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  parentcorrectionid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  titlekey_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  descriptionkey_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete userdetails_;
  if (this != internal_default_instance()) delete allottedtime_;
  if (this != internal_default_instance()) delete validfrom_;
  if (this != internal_default_instance()) delete validto_;
  if (this != internal_default_instance()) delete createdat_;
  if (this != internal_default_instance()) delete updatedat_;
}

void OfferRewardRequest::ArenaDtor(void* object) {
  OfferRewardRequest* _this = reinterpret_cast< OfferRewardRequest* >(object);
  (void)_this;
}
void OfferRewardRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void OfferRewardRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const OfferRewardRequest& OfferRewardRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_OfferRewardRequest_Workflows_2fGeneralGoWorkflows_2fgeneral_5fgo_5fworkflows_2eproto.base);
  return *internal_default_instance();
}


void OfferRewardRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:farm.nurture.core.contracts.workflows.generalgo.OfferRewardRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  attributes_.Clear();
  source_.ClearToEmpty();
  sourcereferenceid_.ClearToEmpty();
  correctionid_.ClearToEmpty();
  parentcorrectionid_.ClearToEmpty();
  titlekey_.ClearToEmpty();
  descriptionkey_.ClearToEmpty();
  if (GetArena() == nullptr && userdetails_ != nullptr) {
    delete userdetails_;
  }
  userdetails_ = nullptr;
  if (GetArena() == nullptr && allottedtime_ != nullptr) {
    delete allottedtime_;
  }
  allottedtime_ = nullptr;
  if (GetArena() == nullptr && validfrom_ != nullptr) {
    delete validfrom_;
  }
  validfrom_ = nullptr;
  if (GetArena() == nullptr && validto_ != nullptr) {
    delete validto_;
  }
  validto_ = nullptr;
  if (GetArena() == nullptr && createdat_ != nullptr) {
    delete createdat_;
  }
  createdat_ = nullptr;
  if (GetArena() == nullptr && updatedat_ != nullptr) {
    delete updatedat_;
  }
  updatedat_ = nullptr;
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&status_) -
      reinterpret_cast<char*>(&id_)) + sizeof(status_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* OfferRewardRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int64 id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .farm.nurture.core.contracts.common.ActorID userDetails = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_userdetails(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .farm.nurture.core.contracts.common.UserActionType userActionType = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_useractiontype(static_cast<::farm::nurture::core::contracts::common::UserActionType>(val));
        } else goto handle_unusual;
        continue;
      // .farm.nurture.core.contracts.common.RewardType rewardType = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_rewardtype(static_cast<::farm::nurture::core::contracts::common::RewardType>(val));
        } else goto handle_unusual;
        continue;
      // int32 rewardPoints = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          rewardpoints_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.protobuf.Timestamp allottedTime = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          ptr = ctx->ParseMessage(_internal_mutable_allottedtime(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string source = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          auto str = _internal_mutable_source();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "farm.nurture.core.contracts.workflows.generalgo.OfferRewardRequest.source"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string sourceReferenceId = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 66)) {
          auto str = _internal_mutable_sourcereferenceid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "farm.nurture.core.contracts.workflows.generalgo.OfferRewardRequest.sourceReferenceId"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string correctionId = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 74)) {
          auto str = _internal_mutable_correctionid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "farm.nurture.core.contracts.workflows.generalgo.OfferRewardRequest.correctionId"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string parentCorrectionId = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 82)) {
          auto str = _internal_mutable_parentcorrectionid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "farm.nurture.core.contracts.workflows.generalgo.OfferRewardRequest.parentCorrectionId"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string titleKey = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 90)) {
          auto str = _internal_mutable_titlekey();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "farm.nurture.core.contracts.workflows.generalgo.OfferRewardRequest.titleKey"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string descriptionKey = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 98)) {
          auto str = _internal_mutable_descriptionkey();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "farm.nurture.core.contracts.workflows.generalgo.OfferRewardRequest.descriptionKey"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.protobuf.Timestamp validFrom = 13;
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 106)) {
          ptr = ctx->ParseMessage(_internal_mutable_validfrom(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.protobuf.Timestamp validTo = 14;
      case 14:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 114)) {
          ptr = ctx->ParseMessage(_internal_mutable_validto(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .farm.nurture.core.contracts.workflows.generalgo.Attributes attributes = 15;
      case 15:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 122)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_attributes(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<122>(ptr));
        } else goto handle_unusual;
        continue;
      // .farm.nurture.core.contracts.workflows.generalgo.Status status = 16;
      case 16:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 128)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_status(static_cast<::farm::nurture::core::contracts::workflows::generalgo::Status>(val));
        } else goto handle_unusual;
        continue;
      // .google.protobuf.Timestamp createdAt = 18;
      case 18:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 146)) {
          ptr = ctx->ParseMessage(_internal_mutable_createdat(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.protobuf.Timestamp updatedAt = 19;
      case 19:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 154)) {
          ptr = ctx->ParseMessage(_internal_mutable_updatedat(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* OfferRewardRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:farm.nurture.core.contracts.workflows.generalgo.OfferRewardRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 id = 1;
  if (this->id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(1, this->_internal_id(), target);
  }

  // .farm.nurture.core.contracts.common.ActorID userDetails = 2;
  if (this->has_userdetails()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::userdetails(this), target, stream);
  }

  // .farm.nurture.core.contracts.common.UserActionType userActionType = 3;
  if (this->useractiontype() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      3, this->_internal_useractiontype(), target);
  }

  // .farm.nurture.core.contracts.common.RewardType rewardType = 4;
  if (this->rewardtype() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      4, this->_internal_rewardtype(), target);
  }

  // int32 rewardPoints = 5;
  if (this->rewardpoints() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(5, this->_internal_rewardpoints(), target);
  }

  // .google.protobuf.Timestamp allottedTime = 6;
  if (this->has_allottedtime()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        6, _Internal::allottedtime(this), target, stream);
  }

  // string source = 7;
  if (this->source().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_source().data(), static_cast<int>(this->_internal_source().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "farm.nurture.core.contracts.workflows.generalgo.OfferRewardRequest.source");
    target = stream->WriteStringMaybeAliased(
        7, this->_internal_source(), target);
  }

  // string sourceReferenceId = 8;
  if (this->sourcereferenceid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_sourcereferenceid().data(), static_cast<int>(this->_internal_sourcereferenceid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "farm.nurture.core.contracts.workflows.generalgo.OfferRewardRequest.sourceReferenceId");
    target = stream->WriteStringMaybeAliased(
        8, this->_internal_sourcereferenceid(), target);
  }

  // string correctionId = 9;
  if (this->correctionid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_correctionid().data(), static_cast<int>(this->_internal_correctionid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "farm.nurture.core.contracts.workflows.generalgo.OfferRewardRequest.correctionId");
    target = stream->WriteStringMaybeAliased(
        9, this->_internal_correctionid(), target);
  }

  // string parentCorrectionId = 10;
  if (this->parentcorrectionid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_parentcorrectionid().data(), static_cast<int>(this->_internal_parentcorrectionid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "farm.nurture.core.contracts.workflows.generalgo.OfferRewardRequest.parentCorrectionId");
    target = stream->WriteStringMaybeAliased(
        10, this->_internal_parentcorrectionid(), target);
  }

  // string titleKey = 11;
  if (this->titlekey().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_titlekey().data(), static_cast<int>(this->_internal_titlekey().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "farm.nurture.core.contracts.workflows.generalgo.OfferRewardRequest.titleKey");
    target = stream->WriteStringMaybeAliased(
        11, this->_internal_titlekey(), target);
  }

  // string descriptionKey = 12;
  if (this->descriptionkey().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_descriptionkey().data(), static_cast<int>(this->_internal_descriptionkey().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "farm.nurture.core.contracts.workflows.generalgo.OfferRewardRequest.descriptionKey");
    target = stream->WriteStringMaybeAliased(
        12, this->_internal_descriptionkey(), target);
  }

  // .google.protobuf.Timestamp validFrom = 13;
  if (this->has_validfrom()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        13, _Internal::validfrom(this), target, stream);
  }

  // .google.protobuf.Timestamp validTo = 14;
  if (this->has_validto()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        14, _Internal::validto(this), target, stream);
  }

  // repeated .farm.nurture.core.contracts.workflows.generalgo.Attributes attributes = 15;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_attributes_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(15, this->_internal_attributes(i), target, stream);
  }

  // .farm.nurture.core.contracts.workflows.generalgo.Status status = 16;
  if (this->status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      16, this->_internal_status(), target);
  }

  // .google.protobuf.Timestamp createdAt = 18;
  if (this->has_createdat()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        18, _Internal::createdat(this), target, stream);
  }

  // .google.protobuf.Timestamp updatedAt = 19;
  if (this->has_updatedat()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        19, _Internal::updatedat(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:farm.nurture.core.contracts.workflows.generalgo.OfferRewardRequest)
  return target;
}

size_t OfferRewardRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:farm.nurture.core.contracts.workflows.generalgo.OfferRewardRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .farm.nurture.core.contracts.workflows.generalgo.Attributes attributes = 15;
  total_size += 1UL * this->_internal_attributes_size();
  for (const auto& msg : this->attributes_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string source = 7;
  if (this->source().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_source());
  }

  // string sourceReferenceId = 8;
  if (this->sourcereferenceid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_sourcereferenceid());
  }

  // string correctionId = 9;
  if (this->correctionid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_correctionid());
  }

  // string parentCorrectionId = 10;
  if (this->parentcorrectionid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_parentcorrectionid());
  }

  // string titleKey = 11;
  if (this->titlekey().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_titlekey());
  }

  // string descriptionKey = 12;
  if (this->descriptionkey().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_descriptionkey());
  }

  // .farm.nurture.core.contracts.common.ActorID userDetails = 2;
  if (this->has_userdetails()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *userdetails_);
  }

  // .google.protobuf.Timestamp allottedTime = 6;
  if (this->has_allottedtime()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *allottedtime_);
  }

  // .google.protobuf.Timestamp validFrom = 13;
  if (this->has_validfrom()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *validfrom_);
  }

  // .google.protobuf.Timestamp validTo = 14;
  if (this->has_validto()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *validto_);
  }

  // .google.protobuf.Timestamp createdAt = 18;
  if (this->has_createdat()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *createdat_);
  }

  // .google.protobuf.Timestamp updatedAt = 19;
  if (this->has_updatedat()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *updatedat_);
  }

  // int64 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_id());
  }

  // .farm.nurture.core.contracts.common.UserActionType userActionType = 3;
  if (this->useractiontype() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_useractiontype());
  }

  // .farm.nurture.core.contracts.common.RewardType rewardType = 4;
  if (this->rewardtype() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_rewardtype());
  }

  // int32 rewardPoints = 5;
  if (this->rewardpoints() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_rewardpoints());
  }

  // .farm.nurture.core.contracts.workflows.generalgo.Status status = 16;
  if (this->status() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_status());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void OfferRewardRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:farm.nurture.core.contracts.workflows.generalgo.OfferRewardRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const OfferRewardRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<OfferRewardRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:farm.nurture.core.contracts.workflows.generalgo.OfferRewardRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:farm.nurture.core.contracts.workflows.generalgo.OfferRewardRequest)
    MergeFrom(*source);
  }
}

void OfferRewardRequest::MergeFrom(const OfferRewardRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:farm.nurture.core.contracts.workflows.generalgo.OfferRewardRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  attributes_.MergeFrom(from.attributes_);
  if (from.source().size() > 0) {
    _internal_set_source(from._internal_source());
  }
  if (from.sourcereferenceid().size() > 0) {
    _internal_set_sourcereferenceid(from._internal_sourcereferenceid());
  }
  if (from.correctionid().size() > 0) {
    _internal_set_correctionid(from._internal_correctionid());
  }
  if (from.parentcorrectionid().size() > 0) {
    _internal_set_parentcorrectionid(from._internal_parentcorrectionid());
  }
  if (from.titlekey().size() > 0) {
    _internal_set_titlekey(from._internal_titlekey());
  }
  if (from.descriptionkey().size() > 0) {
    _internal_set_descriptionkey(from._internal_descriptionkey());
  }
  if (from.has_userdetails()) {
    _internal_mutable_userdetails()->::farm::nurture::core::contracts::common::ActorID::MergeFrom(from._internal_userdetails());
  }
  if (from.has_allottedtime()) {
    _internal_mutable_allottedtime()->PROTOBUF_NAMESPACE_ID::Timestamp::MergeFrom(from._internal_allottedtime());
  }
  if (from.has_validfrom()) {
    _internal_mutable_validfrom()->PROTOBUF_NAMESPACE_ID::Timestamp::MergeFrom(from._internal_validfrom());
  }
  if (from.has_validto()) {
    _internal_mutable_validto()->PROTOBUF_NAMESPACE_ID::Timestamp::MergeFrom(from._internal_validto());
  }
  if (from.has_createdat()) {
    _internal_mutable_createdat()->PROTOBUF_NAMESPACE_ID::Timestamp::MergeFrom(from._internal_createdat());
  }
  if (from.has_updatedat()) {
    _internal_mutable_updatedat()->PROTOBUF_NAMESPACE_ID::Timestamp::MergeFrom(from._internal_updatedat());
  }
  if (from.id() != 0) {
    _internal_set_id(from._internal_id());
  }
  if (from.useractiontype() != 0) {
    _internal_set_useractiontype(from._internal_useractiontype());
  }
  if (from.rewardtype() != 0) {
    _internal_set_rewardtype(from._internal_rewardtype());
  }
  if (from.rewardpoints() != 0) {
    _internal_set_rewardpoints(from._internal_rewardpoints());
  }
  if (from.status() != 0) {
    _internal_set_status(from._internal_status());
  }
}

void OfferRewardRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:farm.nurture.core.contracts.workflows.generalgo.OfferRewardRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OfferRewardRequest::CopyFrom(const OfferRewardRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:farm.nurture.core.contracts.workflows.generalgo.OfferRewardRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OfferRewardRequest::IsInitialized() const {
  return true;
}

void OfferRewardRequest::InternalSwap(OfferRewardRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  attributes_.InternalSwap(&other->attributes_);
  source_.Swap(&other->source_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  sourcereferenceid_.Swap(&other->sourcereferenceid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  correctionid_.Swap(&other->correctionid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  parentcorrectionid_.Swap(&other->parentcorrectionid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  titlekey_.Swap(&other->titlekey_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  descriptionkey_.Swap(&other->descriptionkey_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(OfferRewardRequest, status_)
      + sizeof(OfferRewardRequest::status_)
      - PROTOBUF_FIELD_OFFSET(OfferRewardRequest, userdetails_)>(
          reinterpret_cast<char*>(&userdetails_),
          reinterpret_cast<char*>(&other->userdetails_));
}

::PROTOBUF_NAMESPACE_ID::Metadata OfferRewardRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class OfferRewardResponse::_Internal {
 public:
};

OfferRewardResponse::OfferRewardResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:farm.nurture.core.contracts.workflows.generalgo.OfferRewardResponse)
}
OfferRewardResponse::OfferRewardResponse(const OfferRewardResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  status_ = from.status_;
  // @@protoc_insertion_point(copy_constructor:farm.nurture.core.contracts.workflows.generalgo.OfferRewardResponse)
}

void OfferRewardResponse::SharedCtor() {
  status_ = 0;
}

OfferRewardResponse::~OfferRewardResponse() {
  // @@protoc_insertion_point(destructor:farm.nurture.core.contracts.workflows.generalgo.OfferRewardResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void OfferRewardResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void OfferRewardResponse::ArenaDtor(void* object) {
  OfferRewardResponse* _this = reinterpret_cast< OfferRewardResponse* >(object);
  (void)_this;
}
void OfferRewardResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void OfferRewardResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const OfferRewardResponse& OfferRewardResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_OfferRewardResponse_Workflows_2fGeneralGoWorkflows_2fgeneral_5fgo_5fworkflows_2eproto.base);
  return *internal_default_instance();
}


void OfferRewardResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:farm.nurture.core.contracts.workflows.generalgo.OfferRewardResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  status_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* OfferRewardResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .farm.nurture.core.contracts.common.ResponseStatus status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_status(static_cast<::farm::nurture::core::contracts::common::ResponseStatus>(val));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* OfferRewardResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:farm.nurture.core.contracts.workflows.generalgo.OfferRewardResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .farm.nurture.core.contracts.common.ResponseStatus status = 1;
  if (this->status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_status(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:farm.nurture.core.contracts.workflows.generalgo.OfferRewardResponse)
  return target;
}

size_t OfferRewardResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:farm.nurture.core.contracts.workflows.generalgo.OfferRewardResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .farm.nurture.core.contracts.common.ResponseStatus status = 1;
  if (this->status() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_status());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void OfferRewardResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:farm.nurture.core.contracts.workflows.generalgo.OfferRewardResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const OfferRewardResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<OfferRewardResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:farm.nurture.core.contracts.workflows.generalgo.OfferRewardResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:farm.nurture.core.contracts.workflows.generalgo.OfferRewardResponse)
    MergeFrom(*source);
  }
}

void OfferRewardResponse::MergeFrom(const OfferRewardResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:farm.nurture.core.contracts.workflows.generalgo.OfferRewardResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.status() != 0) {
    _internal_set_status(from._internal_status());
  }
}

void OfferRewardResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:farm.nurture.core.contracts.workflows.generalgo.OfferRewardResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OfferRewardResponse::CopyFrom(const OfferRewardResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:farm.nurture.core.contracts.workflows.generalgo.OfferRewardResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OfferRewardResponse::IsInitialized() const {
  return true;
}

void OfferRewardResponse::InternalSwap(OfferRewardResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(status_, other->status_);
}

::PROTOBUF_NAMESPACE_ID::Metadata OfferRewardResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class DiscountedSprayServiceRequest::_Internal {
 public:
  static const ::farm::nurture::core::contracts::common::ActorID& userdetails(const DiscountedSprayServiceRequest* msg);
};

const ::farm::nurture::core::contracts::common::ActorID&
DiscountedSprayServiceRequest::_Internal::userdetails(const DiscountedSprayServiceRequest* msg) {
  return *msg->userdetails_;
}
void DiscountedSprayServiceRequest::clear_userdetails() {
  if (GetArena() == nullptr && userdetails_ != nullptr) {
    delete userdetails_;
  }
  userdetails_ = nullptr;
}
DiscountedSprayServiceRequest::DiscountedSprayServiceRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:farm.nurture.core.contracts.workflows.generalgo.DiscountedSprayServiceRequest)
}
DiscountedSprayServiceRequest::DiscountedSprayServiceRequest(const DiscountedSprayServiceRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_userdetails()) {
    userdetails_ = new ::farm::nurture::core::contracts::common::ActorID(*from.userdetails_);
  } else {
    userdetails_ = nullptr;
  }
  ::memcpy(&bookingid_, &from.bookingid_,
    static_cast<size_t>(reinterpret_cast<char*>(&serviceid_) -
    reinterpret_cast<char*>(&bookingid_)) + sizeof(serviceid_));
  // @@protoc_insertion_point(copy_constructor:farm.nurture.core.contracts.workflows.generalgo.DiscountedSprayServiceRequest)
}

void DiscountedSprayServiceRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_DiscountedSprayServiceRequest_Workflows_2fGeneralGoWorkflows_2fgeneral_5fgo_5fworkflows_2eproto.base);
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&userdetails_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&serviceid_) -
      reinterpret_cast<char*>(&userdetails_)) + sizeof(serviceid_));
}

DiscountedSprayServiceRequest::~DiscountedSprayServiceRequest() {
  // @@protoc_insertion_point(destructor:farm.nurture.core.contracts.workflows.generalgo.DiscountedSprayServiceRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DiscountedSprayServiceRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete userdetails_;
}

void DiscountedSprayServiceRequest::ArenaDtor(void* object) {
  DiscountedSprayServiceRequest* _this = reinterpret_cast< DiscountedSprayServiceRequest* >(object);
  (void)_this;
}
void DiscountedSprayServiceRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DiscountedSprayServiceRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DiscountedSprayServiceRequest& DiscountedSprayServiceRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DiscountedSprayServiceRequest_Workflows_2fGeneralGoWorkflows_2fgeneral_5fgo_5fworkflows_2eproto.base);
  return *internal_default_instance();
}


void DiscountedSprayServiceRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:farm.nurture.core.contracts.workflows.generalgo.DiscountedSprayServiceRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && userdetails_ != nullptr) {
    delete userdetails_;
  }
  userdetails_ = nullptr;
  ::memset(&bookingid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&serviceid_) -
      reinterpret_cast<char*>(&bookingid_)) + sizeof(serviceid_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DiscountedSprayServiceRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .farm.nurture.core.contracts.common.ActorID userDetails = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_userdetails(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 bookingId = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          bookingid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 serviceId = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          serviceid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DiscountedSprayServiceRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:farm.nurture.core.contracts.workflows.generalgo.DiscountedSprayServiceRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .farm.nurture.core.contracts.common.ActorID userDetails = 1;
  if (this->has_userdetails()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::userdetails(this), target, stream);
  }

  // int64 bookingId = 2;
  if (this->bookingid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->_internal_bookingid(), target);
  }

  // int64 serviceId = 3;
  if (this->serviceid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(3, this->_internal_serviceid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:farm.nurture.core.contracts.workflows.generalgo.DiscountedSprayServiceRequest)
  return target;
}

size_t DiscountedSprayServiceRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:farm.nurture.core.contracts.workflows.generalgo.DiscountedSprayServiceRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .farm.nurture.core.contracts.common.ActorID userDetails = 1;
  if (this->has_userdetails()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *userdetails_);
  }

  // int64 bookingId = 2;
  if (this->bookingid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_bookingid());
  }

  // int64 serviceId = 3;
  if (this->serviceid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_serviceid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DiscountedSprayServiceRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:farm.nurture.core.contracts.workflows.generalgo.DiscountedSprayServiceRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const DiscountedSprayServiceRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DiscountedSprayServiceRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:farm.nurture.core.contracts.workflows.generalgo.DiscountedSprayServiceRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:farm.nurture.core.contracts.workflows.generalgo.DiscountedSprayServiceRequest)
    MergeFrom(*source);
  }
}

void DiscountedSprayServiceRequest::MergeFrom(const DiscountedSprayServiceRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:farm.nurture.core.contracts.workflows.generalgo.DiscountedSprayServiceRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_userdetails()) {
    _internal_mutable_userdetails()->::farm::nurture::core::contracts::common::ActorID::MergeFrom(from._internal_userdetails());
  }
  if (from.bookingid() != 0) {
    _internal_set_bookingid(from._internal_bookingid());
  }
  if (from.serviceid() != 0) {
    _internal_set_serviceid(from._internal_serviceid());
  }
}

void DiscountedSprayServiceRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:farm.nurture.core.contracts.workflows.generalgo.DiscountedSprayServiceRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DiscountedSprayServiceRequest::CopyFrom(const DiscountedSprayServiceRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:farm.nurture.core.contracts.workflows.generalgo.DiscountedSprayServiceRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DiscountedSprayServiceRequest::IsInitialized() const {
  return true;
}

void DiscountedSprayServiceRequest::InternalSwap(DiscountedSprayServiceRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(DiscountedSprayServiceRequest, serviceid_)
      + sizeof(DiscountedSprayServiceRequest::serviceid_)
      - PROTOBUF_FIELD_OFFSET(DiscountedSprayServiceRequest, userdetails_)>(
          reinterpret_cast<char*>(&userdetails_),
          reinterpret_cast<char*>(&other->userdetails_));
}

::PROTOBUF_NAMESPACE_ID::Metadata DiscountedSprayServiceRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class OfferInsuranceRewardRequest::_Internal {
 public:
  static const ::farm::nurture::core::contracts::common::ActorID& userdetails(const OfferInsuranceRewardRequest* msg);
  static const ::farm::nurture::core::contracts::common::Location& location(const OfferInsuranceRewardRequest* msg);
};

const ::farm::nurture::core::contracts::common::ActorID&
OfferInsuranceRewardRequest::_Internal::userdetails(const OfferInsuranceRewardRequest* msg) {
  return *msg->userdetails_;
}
const ::farm::nurture::core::contracts::common::Location&
OfferInsuranceRewardRequest::_Internal::location(const OfferInsuranceRewardRequest* msg) {
  return *msg->location_;
}
void OfferInsuranceRewardRequest::clear_userdetails() {
  if (GetArena() == nullptr && userdetails_ != nullptr) {
    delete userdetails_;
  }
  userdetails_ = nullptr;
}
void OfferInsuranceRewardRequest::clear_location() {
  if (GetArena() == nullptr && location_ != nullptr) {
    delete location_;
  }
  location_ = nullptr;
}
OfferInsuranceRewardRequest::OfferInsuranceRewardRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  schemequantities_(arena),
  attributes_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:farm.nurture.core.contracts.workflows.generalgo.OfferInsuranceRewardRequest)
}
OfferInsuranceRewardRequest::OfferInsuranceRewardRequest(const OfferInsuranceRewardRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      schemequantities_(from.schemequantities_),
      attributes_(from.attributes_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_userdetails()) {
    userdetails_ = new ::farm::nurture::core::contracts::common::ActorID(*from.userdetails_);
  } else {
    userdetails_ = nullptr;
  }
  if (from._internal_has_location()) {
    location_ = new ::farm::nurture::core::contracts::common::Location(*from.location_);
  } else {
    location_ = nullptr;
  }
  ::memcpy(&paymentmethod_, &from.paymentmethod_,
    static_cast<size_t>(reinterpret_cast<char*>(&rewardtype_) -
    reinterpret_cast<char*>(&paymentmethod_)) + sizeof(rewardtype_));
  // @@protoc_insertion_point(copy_constructor:farm.nurture.core.contracts.workflows.generalgo.OfferInsuranceRewardRequest)
}

void OfferInsuranceRewardRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_OfferInsuranceRewardRequest_Workflows_2fGeneralGoWorkflows_2fgeneral_5fgo_5fworkflows_2eproto.base);
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&userdetails_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&rewardtype_) -
      reinterpret_cast<char*>(&userdetails_)) + sizeof(rewardtype_));
}

OfferInsuranceRewardRequest::~OfferInsuranceRewardRequest() {
  // @@protoc_insertion_point(destructor:farm.nurture.core.contracts.workflows.generalgo.OfferInsuranceRewardRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void OfferInsuranceRewardRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete userdetails_;
  if (this != internal_default_instance()) delete location_;
}

void OfferInsuranceRewardRequest::ArenaDtor(void* object) {
  OfferInsuranceRewardRequest* _this = reinterpret_cast< OfferInsuranceRewardRequest* >(object);
  (void)_this;
}
void OfferInsuranceRewardRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void OfferInsuranceRewardRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const OfferInsuranceRewardRequest& OfferInsuranceRewardRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_OfferInsuranceRewardRequest_Workflows_2fGeneralGoWorkflows_2fgeneral_5fgo_5fworkflows_2eproto.base);
  return *internal_default_instance();
}


void OfferInsuranceRewardRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:farm.nurture.core.contracts.workflows.generalgo.OfferInsuranceRewardRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  schemequantities_.Clear();
  attributes_.Clear();
  if (GetArena() == nullptr && userdetails_ != nullptr) {
    delete userdetails_;
  }
  userdetails_ = nullptr;
  if (GetArena() == nullptr && location_ != nullptr) {
    delete location_;
  }
  location_ = nullptr;
  ::memset(&paymentmethod_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&rewardtype_) -
      reinterpret_cast<char*>(&paymentmethod_)) + sizeof(rewardtype_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* OfferInsuranceRewardRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .farm.nurture.core.contracts.common.ActorID userDetails = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_userdetails(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .farm.nurture.core.contracts.common.Location location = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_location(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .farm.nurture.core.contracts.common.PaymentMethod paymentMethod = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_paymentmethod(static_cast<::farm::nurture::core::contracts::common::PaymentMethod>(val));
        } else goto handle_unusual;
        continue;
      // repeated int64 schemeQuantities = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedInt64Parser(_internal_mutable_schemequantities(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32) {
          _internal_add_schemequantities(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 offerId = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          offerid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .farm.nurture.core.contracts.common.LanguageCode languageCode = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_languagecode(static_cast<::farm::nurture::core::contracts::common::LanguageCode>(val));
        } else goto handle_unusual;
        continue;
      // repeated .farm.nurture.core.contracts.workflows.generalgo.Attributes attributes = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_attributes(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<58>(ptr));
        } else goto handle_unusual;
        continue;
      // int64 userRewardId = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 64)) {
          userrewardid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .farm.nurture.core.contracts.common.RewardType rewardType = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 72)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_rewardtype(static_cast<::farm::nurture::core::contracts::common::RewardType>(val));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* OfferInsuranceRewardRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:farm.nurture.core.contracts.workflows.generalgo.OfferInsuranceRewardRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .farm.nurture.core.contracts.common.ActorID userDetails = 1;
  if (this->has_userdetails()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::userdetails(this), target, stream);
  }

  // .farm.nurture.core.contracts.common.Location location = 2;
  if (this->has_location()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::location(this), target, stream);
  }

  // .farm.nurture.core.contracts.common.PaymentMethod paymentMethod = 3;
  if (this->paymentmethod() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      3, this->_internal_paymentmethod(), target);
  }

  // repeated int64 schemeQuantities = 4;
  {
    int byte_size = _schemequantities_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteInt64Packed(
          4, _internal_schemequantities(), byte_size, target);
    }
  }

  // int64 offerId = 5;
  if (this->offerid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(5, this->_internal_offerid(), target);
  }

  // .farm.nurture.core.contracts.common.LanguageCode languageCode = 6;
  if (this->languagecode() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      6, this->_internal_languagecode(), target);
  }

  // repeated .farm.nurture.core.contracts.workflows.generalgo.Attributes attributes = 7;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_attributes_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(7, this->_internal_attributes(i), target, stream);
  }

  // int64 userRewardId = 8;
  if (this->userrewardid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(8, this->_internal_userrewardid(), target);
  }

  // .farm.nurture.core.contracts.common.RewardType rewardType = 9;
  if (this->rewardtype() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      9, this->_internal_rewardtype(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:farm.nurture.core.contracts.workflows.generalgo.OfferInsuranceRewardRequest)
  return target;
}

size_t OfferInsuranceRewardRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:farm.nurture.core.contracts.workflows.generalgo.OfferInsuranceRewardRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated int64 schemeQuantities = 4;
  {
    size_t data_size = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      Int64Size(this->schemequantities_);
    if (data_size > 0) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
            static_cast<::PROTOBUF_NAMESPACE_ID::int32>(data_size));
    }
    int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(data_size);
    _schemequantities_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // repeated .farm.nurture.core.contracts.workflows.generalgo.Attributes attributes = 7;
  total_size += 1UL * this->_internal_attributes_size();
  for (const auto& msg : this->attributes_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // .farm.nurture.core.contracts.common.ActorID userDetails = 1;
  if (this->has_userdetails()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *userdetails_);
  }

  // .farm.nurture.core.contracts.common.Location location = 2;
  if (this->has_location()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *location_);
  }

  // .farm.nurture.core.contracts.common.PaymentMethod paymentMethod = 3;
  if (this->paymentmethod() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_paymentmethod());
  }

  // .farm.nurture.core.contracts.common.LanguageCode languageCode = 6;
  if (this->languagecode() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_languagecode());
  }

  // int64 offerId = 5;
  if (this->offerid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_offerid());
  }

  // int64 userRewardId = 8;
  if (this->userrewardid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_userrewardid());
  }

  // .farm.nurture.core.contracts.common.RewardType rewardType = 9;
  if (this->rewardtype() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_rewardtype());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void OfferInsuranceRewardRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:farm.nurture.core.contracts.workflows.generalgo.OfferInsuranceRewardRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const OfferInsuranceRewardRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<OfferInsuranceRewardRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:farm.nurture.core.contracts.workflows.generalgo.OfferInsuranceRewardRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:farm.nurture.core.contracts.workflows.generalgo.OfferInsuranceRewardRequest)
    MergeFrom(*source);
  }
}

void OfferInsuranceRewardRequest::MergeFrom(const OfferInsuranceRewardRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:farm.nurture.core.contracts.workflows.generalgo.OfferInsuranceRewardRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  schemequantities_.MergeFrom(from.schemequantities_);
  attributes_.MergeFrom(from.attributes_);
  if (from.has_userdetails()) {
    _internal_mutable_userdetails()->::farm::nurture::core::contracts::common::ActorID::MergeFrom(from._internal_userdetails());
  }
  if (from.has_location()) {
    _internal_mutable_location()->::farm::nurture::core::contracts::common::Location::MergeFrom(from._internal_location());
  }
  if (from.paymentmethod() != 0) {
    _internal_set_paymentmethod(from._internal_paymentmethod());
  }
  if (from.languagecode() != 0) {
    _internal_set_languagecode(from._internal_languagecode());
  }
  if (from.offerid() != 0) {
    _internal_set_offerid(from._internal_offerid());
  }
  if (from.userrewardid() != 0) {
    _internal_set_userrewardid(from._internal_userrewardid());
  }
  if (from.rewardtype() != 0) {
    _internal_set_rewardtype(from._internal_rewardtype());
  }
}

void OfferInsuranceRewardRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:farm.nurture.core.contracts.workflows.generalgo.OfferInsuranceRewardRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OfferInsuranceRewardRequest::CopyFrom(const OfferInsuranceRewardRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:farm.nurture.core.contracts.workflows.generalgo.OfferInsuranceRewardRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OfferInsuranceRewardRequest::IsInitialized() const {
  return true;
}

void OfferInsuranceRewardRequest::InternalSwap(OfferInsuranceRewardRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  schemequantities_.InternalSwap(&other->schemequantities_);
  attributes_.InternalSwap(&other->attributes_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(OfferInsuranceRewardRequest, rewardtype_)
      + sizeof(OfferInsuranceRewardRequest::rewardtype_)
      - PROTOBUF_FIELD_OFFSET(OfferInsuranceRewardRequest, userdetails_)>(
          reinterpret_cast<char*>(&userdetails_),
          reinterpret_cast<char*>(&other->userdetails_));
}

::PROTOBUF_NAMESPACE_ID::Metadata OfferInsuranceRewardRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class OfferInsuranceRewardResponse::_Internal {
 public:
};

OfferInsuranceRewardResponse::OfferInsuranceRewardResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:farm.nurture.core.contracts.workflows.generalgo.OfferInsuranceRewardResponse)
}
OfferInsuranceRewardResponse::OfferInsuranceRewardResponse(const OfferInsuranceRewardResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  status_ = from.status_;
  // @@protoc_insertion_point(copy_constructor:farm.nurture.core.contracts.workflows.generalgo.OfferInsuranceRewardResponse)
}

void OfferInsuranceRewardResponse::SharedCtor() {
  status_ = 0;
}

OfferInsuranceRewardResponse::~OfferInsuranceRewardResponse() {
  // @@protoc_insertion_point(destructor:farm.nurture.core.contracts.workflows.generalgo.OfferInsuranceRewardResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void OfferInsuranceRewardResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void OfferInsuranceRewardResponse::ArenaDtor(void* object) {
  OfferInsuranceRewardResponse* _this = reinterpret_cast< OfferInsuranceRewardResponse* >(object);
  (void)_this;
}
void OfferInsuranceRewardResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void OfferInsuranceRewardResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const OfferInsuranceRewardResponse& OfferInsuranceRewardResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_OfferInsuranceRewardResponse_Workflows_2fGeneralGoWorkflows_2fgeneral_5fgo_5fworkflows_2eproto.base);
  return *internal_default_instance();
}


void OfferInsuranceRewardResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:farm.nurture.core.contracts.workflows.generalgo.OfferInsuranceRewardResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  status_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* OfferInsuranceRewardResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .farm.nurture.core.contracts.common.ResponseStatus status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_status(static_cast<::farm::nurture::core::contracts::common::ResponseStatus>(val));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* OfferInsuranceRewardResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:farm.nurture.core.contracts.workflows.generalgo.OfferInsuranceRewardResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .farm.nurture.core.contracts.common.ResponseStatus status = 1;
  if (this->status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_status(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:farm.nurture.core.contracts.workflows.generalgo.OfferInsuranceRewardResponse)
  return target;
}

size_t OfferInsuranceRewardResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:farm.nurture.core.contracts.workflows.generalgo.OfferInsuranceRewardResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .farm.nurture.core.contracts.common.ResponseStatus status = 1;
  if (this->status() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_status());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void OfferInsuranceRewardResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:farm.nurture.core.contracts.workflows.generalgo.OfferInsuranceRewardResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const OfferInsuranceRewardResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<OfferInsuranceRewardResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:farm.nurture.core.contracts.workflows.generalgo.OfferInsuranceRewardResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:farm.nurture.core.contracts.workflows.generalgo.OfferInsuranceRewardResponse)
    MergeFrom(*source);
  }
}

void OfferInsuranceRewardResponse::MergeFrom(const OfferInsuranceRewardResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:farm.nurture.core.contracts.workflows.generalgo.OfferInsuranceRewardResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.status() != 0) {
    _internal_set_status(from._internal_status());
  }
}

void OfferInsuranceRewardResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:farm.nurture.core.contracts.workflows.generalgo.OfferInsuranceRewardResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OfferInsuranceRewardResponse::CopyFrom(const OfferInsuranceRewardResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:farm.nurture.core.contracts.workflows.generalgo.OfferInsuranceRewardResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OfferInsuranceRewardResponse::IsInitialized() const {
  return true;
}

void OfferInsuranceRewardResponse::InternalSwap(OfferInsuranceRewardResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(status_, other->status_);
}

::PROTOBUF_NAMESPACE_ID::Metadata OfferInsuranceRewardResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CreatePartitionsRequest::_Internal {
 public:
};

CreatePartitionsRequest::CreatePartitionsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:farm.nurture.core.contracts.workflows.generalgo.CreatePartitionsRequest)
}
CreatePartitionsRequest::CreatePartitionsRequest(const CreatePartitionsRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  tablename_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_tablename().empty()) {
    tablename_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_tablename(), 
      GetArena());
  }
  databasename_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_databasename().empty()) {
    databasename_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_databasename(), 
      GetArena());
  }
  bucket_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_bucket().empty()) {
    bucket_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_bucket(), 
      GetArena());
  }
  numberofdays_ = from.numberofdays_;
  // @@protoc_insertion_point(copy_constructor:farm.nurture.core.contracts.workflows.generalgo.CreatePartitionsRequest)
}

void CreatePartitionsRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_CreatePartitionsRequest_Workflows_2fGeneralGoWorkflows_2fgeneral_5fgo_5fworkflows_2eproto.base);
  tablename_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  databasename_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  bucket_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  numberofdays_ = PROTOBUF_LONGLONG(0);
}

CreatePartitionsRequest::~CreatePartitionsRequest() {
  // @@protoc_insertion_point(destructor:farm.nurture.core.contracts.workflows.generalgo.CreatePartitionsRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CreatePartitionsRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  tablename_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  databasename_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  bucket_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void CreatePartitionsRequest::ArenaDtor(void* object) {
  CreatePartitionsRequest* _this = reinterpret_cast< CreatePartitionsRequest* >(object);
  (void)_this;
}
void CreatePartitionsRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CreatePartitionsRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CreatePartitionsRequest& CreatePartitionsRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CreatePartitionsRequest_Workflows_2fGeneralGoWorkflows_2fgeneral_5fgo_5fworkflows_2eproto.base);
  return *internal_default_instance();
}


void CreatePartitionsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:farm.nurture.core.contracts.workflows.generalgo.CreatePartitionsRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  tablename_.ClearToEmpty();
  databasename_.ClearToEmpty();
  bucket_.ClearToEmpty();
  numberofdays_ = PROTOBUF_LONGLONG(0);
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreatePartitionsRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string tableName = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_tablename();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "farm.nurture.core.contracts.workflows.generalgo.CreatePartitionsRequest.tableName"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string databaseName = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_databasename();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "farm.nurture.core.contracts.workflows.generalgo.CreatePartitionsRequest.databaseName"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string bucket = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_bucket();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "farm.nurture.core.contracts.workflows.generalgo.CreatePartitionsRequest.bucket"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 numberOfDays = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          numberofdays_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CreatePartitionsRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:farm.nurture.core.contracts.workflows.generalgo.CreatePartitionsRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string tableName = 1;
  if (this->tablename().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_tablename().data(), static_cast<int>(this->_internal_tablename().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "farm.nurture.core.contracts.workflows.generalgo.CreatePartitionsRequest.tableName");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_tablename(), target);
  }

  // string databaseName = 2;
  if (this->databasename().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_databasename().data(), static_cast<int>(this->_internal_databasename().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "farm.nurture.core.contracts.workflows.generalgo.CreatePartitionsRequest.databaseName");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_databasename(), target);
  }

  // string bucket = 3;
  if (this->bucket().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_bucket().data(), static_cast<int>(this->_internal_bucket().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "farm.nurture.core.contracts.workflows.generalgo.CreatePartitionsRequest.bucket");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_bucket(), target);
  }

  // int64 numberOfDays = 4;
  if (this->numberofdays() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(4, this->_internal_numberofdays(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:farm.nurture.core.contracts.workflows.generalgo.CreatePartitionsRequest)
  return target;
}

size_t CreatePartitionsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:farm.nurture.core.contracts.workflows.generalgo.CreatePartitionsRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string tableName = 1;
  if (this->tablename().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_tablename());
  }

  // string databaseName = 2;
  if (this->databasename().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_databasename());
  }

  // string bucket = 3;
  if (this->bucket().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_bucket());
  }

  // int64 numberOfDays = 4;
  if (this->numberofdays() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_numberofdays());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CreatePartitionsRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:farm.nurture.core.contracts.workflows.generalgo.CreatePartitionsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CreatePartitionsRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CreatePartitionsRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:farm.nurture.core.contracts.workflows.generalgo.CreatePartitionsRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:farm.nurture.core.contracts.workflows.generalgo.CreatePartitionsRequest)
    MergeFrom(*source);
  }
}

void CreatePartitionsRequest::MergeFrom(const CreatePartitionsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:farm.nurture.core.contracts.workflows.generalgo.CreatePartitionsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.tablename().size() > 0) {
    _internal_set_tablename(from._internal_tablename());
  }
  if (from.databasename().size() > 0) {
    _internal_set_databasename(from._internal_databasename());
  }
  if (from.bucket().size() > 0) {
    _internal_set_bucket(from._internal_bucket());
  }
  if (from.numberofdays() != 0) {
    _internal_set_numberofdays(from._internal_numberofdays());
  }
}

void CreatePartitionsRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:farm.nurture.core.contracts.workflows.generalgo.CreatePartitionsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreatePartitionsRequest::CopyFrom(const CreatePartitionsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:farm.nurture.core.contracts.workflows.generalgo.CreatePartitionsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreatePartitionsRequest::IsInitialized() const {
  return true;
}

void CreatePartitionsRequest::InternalSwap(CreatePartitionsRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  tablename_.Swap(&other->tablename_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  databasename_.Swap(&other->databasename_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  bucket_.Swap(&other->bucket_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(numberofdays_, other->numberofdays_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CreatePartitionsRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CreatePartitionsResponse::_Internal {
 public:
};

CreatePartitionsResponse::CreatePartitionsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:farm.nurture.core.contracts.workflows.generalgo.CreatePartitionsResponse)
}
CreatePartitionsResponse::CreatePartitionsResponse(const CreatePartitionsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  status_ = from.status_;
  // @@protoc_insertion_point(copy_constructor:farm.nurture.core.contracts.workflows.generalgo.CreatePartitionsResponse)
}

void CreatePartitionsResponse::SharedCtor() {
  status_ = 0;
}

CreatePartitionsResponse::~CreatePartitionsResponse() {
  // @@protoc_insertion_point(destructor:farm.nurture.core.contracts.workflows.generalgo.CreatePartitionsResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CreatePartitionsResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void CreatePartitionsResponse::ArenaDtor(void* object) {
  CreatePartitionsResponse* _this = reinterpret_cast< CreatePartitionsResponse* >(object);
  (void)_this;
}
void CreatePartitionsResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CreatePartitionsResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CreatePartitionsResponse& CreatePartitionsResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CreatePartitionsResponse_Workflows_2fGeneralGoWorkflows_2fgeneral_5fgo_5fworkflows_2eproto.base);
  return *internal_default_instance();
}


void CreatePartitionsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:farm.nurture.core.contracts.workflows.generalgo.CreatePartitionsResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  status_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreatePartitionsResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .farm.nurture.core.contracts.common.ResponseStatus status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_status(static_cast<::farm::nurture::core::contracts::common::ResponseStatus>(val));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CreatePartitionsResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:farm.nurture.core.contracts.workflows.generalgo.CreatePartitionsResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .farm.nurture.core.contracts.common.ResponseStatus status = 1;
  if (this->status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_status(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:farm.nurture.core.contracts.workflows.generalgo.CreatePartitionsResponse)
  return target;
}

size_t CreatePartitionsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:farm.nurture.core.contracts.workflows.generalgo.CreatePartitionsResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .farm.nurture.core.contracts.common.ResponseStatus status = 1;
  if (this->status() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_status());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CreatePartitionsResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:farm.nurture.core.contracts.workflows.generalgo.CreatePartitionsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CreatePartitionsResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CreatePartitionsResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:farm.nurture.core.contracts.workflows.generalgo.CreatePartitionsResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:farm.nurture.core.contracts.workflows.generalgo.CreatePartitionsResponse)
    MergeFrom(*source);
  }
}

void CreatePartitionsResponse::MergeFrom(const CreatePartitionsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:farm.nurture.core.contracts.workflows.generalgo.CreatePartitionsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.status() != 0) {
    _internal_set_status(from._internal_status());
  }
}

void CreatePartitionsResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:farm.nurture.core.contracts.workflows.generalgo.CreatePartitionsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreatePartitionsResponse::CopyFrom(const CreatePartitionsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:farm.nurture.core.contracts.workflows.generalgo.CreatePartitionsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreatePartitionsResponse::IsInitialized() const {
  return true;
}

void CreatePartitionsResponse::InternalSwap(CreatePartitionsResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(status_, other->status_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CreatePartitionsResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class TriggerF2FPointExpiryCronRequest::_Internal {
 public:
};

TriggerF2FPointExpiryCronRequest::TriggerF2FPointExpiryCronRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:farm.nurture.core.contracts.workflows.generalgo.TriggerF2FPointExpiryCronRequest)
}
TriggerF2FPointExpiryCronRequest::TriggerF2FPointExpiryCronRequest(const TriggerF2FPointExpiryCronRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  cronexp_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_cronexp().empty()) {
    cronexp_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_cronexp(), 
      GetArena());
  }
  ::memcpy(&segmentid_, &from.segmentid_,
    static_cast<size_t>(reinterpret_cast<char*>(&expirypoints_) -
    reinterpret_cast<char*>(&segmentid_)) + sizeof(expirypoints_));
  // @@protoc_insertion_point(copy_constructor:farm.nurture.core.contracts.workflows.generalgo.TriggerF2FPointExpiryCronRequest)
}

void TriggerF2FPointExpiryCronRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_TriggerF2FPointExpiryCronRequest_Workflows_2fGeneralGoWorkflows_2fgeneral_5fgo_5fworkflows_2eproto.base);
  cronexp_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&segmentid_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&expirypoints_) -
      reinterpret_cast<char*>(&segmentid_)) + sizeof(expirypoints_));
}

TriggerF2FPointExpiryCronRequest::~TriggerF2FPointExpiryCronRequest() {
  // @@protoc_insertion_point(destructor:farm.nurture.core.contracts.workflows.generalgo.TriggerF2FPointExpiryCronRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void TriggerF2FPointExpiryCronRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  cronexp_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void TriggerF2FPointExpiryCronRequest::ArenaDtor(void* object) {
  TriggerF2FPointExpiryCronRequest* _this = reinterpret_cast< TriggerF2FPointExpiryCronRequest* >(object);
  (void)_this;
}
void TriggerF2FPointExpiryCronRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void TriggerF2FPointExpiryCronRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const TriggerF2FPointExpiryCronRequest& TriggerF2FPointExpiryCronRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_TriggerF2FPointExpiryCronRequest_Workflows_2fGeneralGoWorkflows_2fgeneral_5fgo_5fworkflows_2eproto.base);
  return *internal_default_instance();
}


void TriggerF2FPointExpiryCronRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:farm.nurture.core.contracts.workflows.generalgo.TriggerF2FPointExpiryCronRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cronexp_.ClearToEmpty();
  ::memset(&segmentid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&expirypoints_) -
      reinterpret_cast<char*>(&segmentid_)) + sizeof(expirypoints_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TriggerF2FPointExpiryCronRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string cronExp = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_cronexp();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "farm.nurture.core.contracts.workflows.generalgo.TriggerF2FPointExpiryCronRequest.cronExp"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 segmentId = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          segmentid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 expiryPoints = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          expirypoints_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* TriggerF2FPointExpiryCronRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:farm.nurture.core.contracts.workflows.generalgo.TriggerF2FPointExpiryCronRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string cronExp = 1;
  if (this->cronexp().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_cronexp().data(), static_cast<int>(this->_internal_cronexp().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "farm.nurture.core.contracts.workflows.generalgo.TriggerF2FPointExpiryCronRequest.cronExp");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_cronexp(), target);
  }

  // int64 segmentId = 2;
  if (this->segmentid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->_internal_segmentid(), target);
  }

  // int64 expiryPoints = 4;
  if (this->expirypoints() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(4, this->_internal_expirypoints(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:farm.nurture.core.contracts.workflows.generalgo.TriggerF2FPointExpiryCronRequest)
  return target;
}

size_t TriggerF2FPointExpiryCronRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:farm.nurture.core.contracts.workflows.generalgo.TriggerF2FPointExpiryCronRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string cronExp = 1;
  if (this->cronexp().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_cronexp());
  }

  // int64 segmentId = 2;
  if (this->segmentid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_segmentid());
  }

  // int64 expiryPoints = 4;
  if (this->expirypoints() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_expirypoints());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TriggerF2FPointExpiryCronRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:farm.nurture.core.contracts.workflows.generalgo.TriggerF2FPointExpiryCronRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const TriggerF2FPointExpiryCronRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<TriggerF2FPointExpiryCronRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:farm.nurture.core.contracts.workflows.generalgo.TriggerF2FPointExpiryCronRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:farm.nurture.core.contracts.workflows.generalgo.TriggerF2FPointExpiryCronRequest)
    MergeFrom(*source);
  }
}

void TriggerF2FPointExpiryCronRequest::MergeFrom(const TriggerF2FPointExpiryCronRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:farm.nurture.core.contracts.workflows.generalgo.TriggerF2FPointExpiryCronRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.cronexp().size() > 0) {
    _internal_set_cronexp(from._internal_cronexp());
  }
  if (from.segmentid() != 0) {
    _internal_set_segmentid(from._internal_segmentid());
  }
  if (from.expirypoints() != 0) {
    _internal_set_expirypoints(from._internal_expirypoints());
  }
}

void TriggerF2FPointExpiryCronRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:farm.nurture.core.contracts.workflows.generalgo.TriggerF2FPointExpiryCronRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TriggerF2FPointExpiryCronRequest::CopyFrom(const TriggerF2FPointExpiryCronRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:farm.nurture.core.contracts.workflows.generalgo.TriggerF2FPointExpiryCronRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TriggerF2FPointExpiryCronRequest::IsInitialized() const {
  return true;
}

void TriggerF2FPointExpiryCronRequest::InternalSwap(TriggerF2FPointExpiryCronRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  cronexp_.Swap(&other->cronexp_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TriggerF2FPointExpiryCronRequest, expirypoints_)
      + sizeof(TriggerF2FPointExpiryCronRequest::expirypoints_)
      - PROTOBUF_FIELD_OFFSET(TriggerF2FPointExpiryCronRequest, segmentid_)>(
          reinterpret_cast<char*>(&segmentid_),
          reinterpret_cast<char*>(&other->segmentid_));
}

::PROTOBUF_NAMESPACE_ID::Metadata TriggerF2FPointExpiryCronRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class TriggerF2FPointExpiryCronResponse::_Internal {
 public:
};

TriggerF2FPointExpiryCronResponse::TriggerF2FPointExpiryCronResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:farm.nurture.core.contracts.workflows.generalgo.TriggerF2FPointExpiryCronResponse)
}
TriggerF2FPointExpiryCronResponse::TriggerF2FPointExpiryCronResponse(const TriggerF2FPointExpiryCronResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  status_ = from.status_;
  // @@protoc_insertion_point(copy_constructor:farm.nurture.core.contracts.workflows.generalgo.TriggerF2FPointExpiryCronResponse)
}

void TriggerF2FPointExpiryCronResponse::SharedCtor() {
  status_ = 0;
}

TriggerF2FPointExpiryCronResponse::~TriggerF2FPointExpiryCronResponse() {
  // @@protoc_insertion_point(destructor:farm.nurture.core.contracts.workflows.generalgo.TriggerF2FPointExpiryCronResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void TriggerF2FPointExpiryCronResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void TriggerF2FPointExpiryCronResponse::ArenaDtor(void* object) {
  TriggerF2FPointExpiryCronResponse* _this = reinterpret_cast< TriggerF2FPointExpiryCronResponse* >(object);
  (void)_this;
}
void TriggerF2FPointExpiryCronResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void TriggerF2FPointExpiryCronResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const TriggerF2FPointExpiryCronResponse& TriggerF2FPointExpiryCronResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_TriggerF2FPointExpiryCronResponse_Workflows_2fGeneralGoWorkflows_2fgeneral_5fgo_5fworkflows_2eproto.base);
  return *internal_default_instance();
}


void TriggerF2FPointExpiryCronResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:farm.nurture.core.contracts.workflows.generalgo.TriggerF2FPointExpiryCronResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  status_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TriggerF2FPointExpiryCronResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .farm.nurture.core.contracts.common.ResponseStatus status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_status(static_cast<::farm::nurture::core::contracts::common::ResponseStatus>(val));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* TriggerF2FPointExpiryCronResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:farm.nurture.core.contracts.workflows.generalgo.TriggerF2FPointExpiryCronResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .farm.nurture.core.contracts.common.ResponseStatus status = 1;
  if (this->status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_status(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:farm.nurture.core.contracts.workflows.generalgo.TriggerF2FPointExpiryCronResponse)
  return target;
}

size_t TriggerF2FPointExpiryCronResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:farm.nurture.core.contracts.workflows.generalgo.TriggerF2FPointExpiryCronResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .farm.nurture.core.contracts.common.ResponseStatus status = 1;
  if (this->status() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_status());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TriggerF2FPointExpiryCronResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:farm.nurture.core.contracts.workflows.generalgo.TriggerF2FPointExpiryCronResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const TriggerF2FPointExpiryCronResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<TriggerF2FPointExpiryCronResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:farm.nurture.core.contracts.workflows.generalgo.TriggerF2FPointExpiryCronResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:farm.nurture.core.contracts.workflows.generalgo.TriggerF2FPointExpiryCronResponse)
    MergeFrom(*source);
  }
}

void TriggerF2FPointExpiryCronResponse::MergeFrom(const TriggerF2FPointExpiryCronResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:farm.nurture.core.contracts.workflows.generalgo.TriggerF2FPointExpiryCronResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.status() != 0) {
    _internal_set_status(from._internal_status());
  }
}

void TriggerF2FPointExpiryCronResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:farm.nurture.core.contracts.workflows.generalgo.TriggerF2FPointExpiryCronResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TriggerF2FPointExpiryCronResponse::CopyFrom(const TriggerF2FPointExpiryCronResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:farm.nurture.core.contracts.workflows.generalgo.TriggerF2FPointExpiryCronResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TriggerF2FPointExpiryCronResponse::IsInitialized() const {
  return true;
}

void TriggerF2FPointExpiryCronResponse::InternalSwap(TriggerF2FPointExpiryCronResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(status_, other->status_);
}

::PROTOBUF_NAMESPACE_ID::Metadata TriggerF2FPointExpiryCronResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class InsurancePurchaseEventRequest::_Internal {
 public:
  static const ::farm::nurture::core::contracts::common::ActorID& actorid(const InsurancePurchaseEventRequest* msg);
};

const ::farm::nurture::core::contracts::common::ActorID&
InsurancePurchaseEventRequest::_Internal::actorid(const InsurancePurchaseEventRequest* msg) {
  return *msg->actorid_;
}
void InsurancePurchaseEventRequest::clear_actorid() {
  if (GetArena() == nullptr && actorid_ != nullptr) {
    delete actorid_;
  }
  actorid_ = nullptr;
}
InsurancePurchaseEventRequest::InsurancePurchaseEventRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:farm.nurture.core.contracts.workflows.generalgo.InsurancePurchaseEventRequest)
}
InsurancePurchaseEventRequest::InsurancePurchaseEventRequest(const InsurancePurchaseEventRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_actorid()) {
    actorid_ = new ::farm::nurture::core::contracts::common::ActorID(*from.actorid_);
  } else {
    actorid_ = nullptr;
  }
  ::memcpy(&userschemeid_, &from.userschemeid_,
    static_cast<size_t>(reinterpret_cast<char*>(&servicetype_) -
    reinterpret_cast<char*>(&userschemeid_)) + sizeof(servicetype_));
  // @@protoc_insertion_point(copy_constructor:farm.nurture.core.contracts.workflows.generalgo.InsurancePurchaseEventRequest)
}

void InsurancePurchaseEventRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_InsurancePurchaseEventRequest_Workflows_2fGeneralGoWorkflows_2fgeneral_5fgo_5fworkflows_2eproto.base);
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&actorid_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&servicetype_) -
      reinterpret_cast<char*>(&actorid_)) + sizeof(servicetype_));
}

InsurancePurchaseEventRequest::~InsurancePurchaseEventRequest() {
  // @@protoc_insertion_point(destructor:farm.nurture.core.contracts.workflows.generalgo.InsurancePurchaseEventRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void InsurancePurchaseEventRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete actorid_;
}

void InsurancePurchaseEventRequest::ArenaDtor(void* object) {
  InsurancePurchaseEventRequest* _this = reinterpret_cast< InsurancePurchaseEventRequest* >(object);
  (void)_this;
}
void InsurancePurchaseEventRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void InsurancePurchaseEventRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const InsurancePurchaseEventRequest& InsurancePurchaseEventRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_InsurancePurchaseEventRequest_Workflows_2fGeneralGoWorkflows_2fgeneral_5fgo_5fworkflows_2eproto.base);
  return *internal_default_instance();
}


void InsurancePurchaseEventRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:farm.nurture.core.contracts.workflows.generalgo.InsurancePurchaseEventRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && actorid_ != nullptr) {
    delete actorid_;
  }
  actorid_ = nullptr;
  ::memset(&userschemeid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&servicetype_) -
      reinterpret_cast<char*>(&userschemeid_)) + sizeof(servicetype_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* InsurancePurchaseEventRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .farm.nurture.core.contracts.common.ActorID actorId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_actorid(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 userSchemeId = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          userschemeid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .farm.nurture.core.contracts.InsuranceService.ServiceType serviceType = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_servicetype(static_cast<::farm::nurture::core::contracts::InsuranceService::ServiceType>(val));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* InsurancePurchaseEventRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:farm.nurture.core.contracts.workflows.generalgo.InsurancePurchaseEventRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .farm.nurture.core.contracts.common.ActorID actorId = 1;
  if (this->has_actorid()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::actorid(this), target, stream);
  }

  // int64 userSchemeId = 2;
  if (this->userschemeid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->_internal_userschemeid(), target);
  }

  // .farm.nurture.core.contracts.InsuranceService.ServiceType serviceType = 3;
  if (this->servicetype() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      3, this->_internal_servicetype(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:farm.nurture.core.contracts.workflows.generalgo.InsurancePurchaseEventRequest)
  return target;
}

size_t InsurancePurchaseEventRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:farm.nurture.core.contracts.workflows.generalgo.InsurancePurchaseEventRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .farm.nurture.core.contracts.common.ActorID actorId = 1;
  if (this->has_actorid()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *actorid_);
  }

  // int64 userSchemeId = 2;
  if (this->userschemeid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_userschemeid());
  }

  // .farm.nurture.core.contracts.InsuranceService.ServiceType serviceType = 3;
  if (this->servicetype() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_servicetype());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void InsurancePurchaseEventRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:farm.nurture.core.contracts.workflows.generalgo.InsurancePurchaseEventRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const InsurancePurchaseEventRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<InsurancePurchaseEventRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:farm.nurture.core.contracts.workflows.generalgo.InsurancePurchaseEventRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:farm.nurture.core.contracts.workflows.generalgo.InsurancePurchaseEventRequest)
    MergeFrom(*source);
  }
}

void InsurancePurchaseEventRequest::MergeFrom(const InsurancePurchaseEventRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:farm.nurture.core.contracts.workflows.generalgo.InsurancePurchaseEventRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_actorid()) {
    _internal_mutable_actorid()->::farm::nurture::core::contracts::common::ActorID::MergeFrom(from._internal_actorid());
  }
  if (from.userschemeid() != 0) {
    _internal_set_userschemeid(from._internal_userschemeid());
  }
  if (from.servicetype() != 0) {
    _internal_set_servicetype(from._internal_servicetype());
  }
}

void InsurancePurchaseEventRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:farm.nurture.core.contracts.workflows.generalgo.InsurancePurchaseEventRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InsurancePurchaseEventRequest::CopyFrom(const InsurancePurchaseEventRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:farm.nurture.core.contracts.workflows.generalgo.InsurancePurchaseEventRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InsurancePurchaseEventRequest::IsInitialized() const {
  return true;
}

void InsurancePurchaseEventRequest::InternalSwap(InsurancePurchaseEventRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(InsurancePurchaseEventRequest, servicetype_)
      + sizeof(InsurancePurchaseEventRequest::servicetype_)
      - PROTOBUF_FIELD_OFFSET(InsurancePurchaseEventRequest, actorid_)>(
          reinterpret_cast<char*>(&actorid_),
          reinterpret_cast<char*>(&other->actorid_));
}

::PROTOBUF_NAMESPACE_ID::Metadata InsurancePurchaseEventRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class InsurancePurchaseEventResponse::_Internal {
 public:
};

InsurancePurchaseEventResponse::InsurancePurchaseEventResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:farm.nurture.core.contracts.workflows.generalgo.InsurancePurchaseEventResponse)
}
InsurancePurchaseEventResponse::InsurancePurchaseEventResponse(const InsurancePurchaseEventResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  status_ = from.status_;
  // @@protoc_insertion_point(copy_constructor:farm.nurture.core.contracts.workflows.generalgo.InsurancePurchaseEventResponse)
}

void InsurancePurchaseEventResponse::SharedCtor() {
  status_ = 0;
}

InsurancePurchaseEventResponse::~InsurancePurchaseEventResponse() {
  // @@protoc_insertion_point(destructor:farm.nurture.core.contracts.workflows.generalgo.InsurancePurchaseEventResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void InsurancePurchaseEventResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void InsurancePurchaseEventResponse::ArenaDtor(void* object) {
  InsurancePurchaseEventResponse* _this = reinterpret_cast< InsurancePurchaseEventResponse* >(object);
  (void)_this;
}
void InsurancePurchaseEventResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void InsurancePurchaseEventResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const InsurancePurchaseEventResponse& InsurancePurchaseEventResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_InsurancePurchaseEventResponse_Workflows_2fGeneralGoWorkflows_2fgeneral_5fgo_5fworkflows_2eproto.base);
  return *internal_default_instance();
}


void InsurancePurchaseEventResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:farm.nurture.core.contracts.workflows.generalgo.InsurancePurchaseEventResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  status_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* InsurancePurchaseEventResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .farm.nurture.core.contracts.common.ResponseStatus status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_status(static_cast<::farm::nurture::core::contracts::common::ResponseStatus>(val));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* InsurancePurchaseEventResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:farm.nurture.core.contracts.workflows.generalgo.InsurancePurchaseEventResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .farm.nurture.core.contracts.common.ResponseStatus status = 1;
  if (this->status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_status(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:farm.nurture.core.contracts.workflows.generalgo.InsurancePurchaseEventResponse)
  return target;
}

size_t InsurancePurchaseEventResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:farm.nurture.core.contracts.workflows.generalgo.InsurancePurchaseEventResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .farm.nurture.core.contracts.common.ResponseStatus status = 1;
  if (this->status() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_status());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void InsurancePurchaseEventResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:farm.nurture.core.contracts.workflows.generalgo.InsurancePurchaseEventResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const InsurancePurchaseEventResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<InsurancePurchaseEventResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:farm.nurture.core.contracts.workflows.generalgo.InsurancePurchaseEventResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:farm.nurture.core.contracts.workflows.generalgo.InsurancePurchaseEventResponse)
    MergeFrom(*source);
  }
}

void InsurancePurchaseEventResponse::MergeFrom(const InsurancePurchaseEventResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:farm.nurture.core.contracts.workflows.generalgo.InsurancePurchaseEventResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.status() != 0) {
    _internal_set_status(from._internal_status());
  }
}

void InsurancePurchaseEventResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:farm.nurture.core.contracts.workflows.generalgo.InsurancePurchaseEventResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InsurancePurchaseEventResponse::CopyFrom(const InsurancePurchaseEventResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:farm.nurture.core.contracts.workflows.generalgo.InsurancePurchaseEventResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InsurancePurchaseEventResponse::IsInitialized() const {
  return true;
}

void InsurancePurchaseEventResponse::InternalSwap(InsurancePurchaseEventResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(status_, other->status_);
}

::PROTOBUF_NAMESPACE_ID::Metadata InsurancePurchaseEventResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace generalgo
}  // namespace workflows
}  // namespace contracts
}  // namespace core
}  // namespace nurture
}  // namespace farm
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::farm::nurture::core::contracts::workflows::generalgo::ClearStaleCreatedOrderRequest* Arena::CreateMaybeMessage< ::farm::nurture::core::contracts::workflows::generalgo::ClearStaleCreatedOrderRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::farm::nurture::core::contracts::workflows::generalgo::ClearStaleCreatedOrderRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::farm::nurture::core::contracts::workflows::generalgo::ClearStaleCreatedOrderResponse* Arena::CreateMaybeMessage< ::farm::nurture::core::contracts::workflows::generalgo::ClearStaleCreatedOrderResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::farm::nurture::core::contracts::workflows::generalgo::ClearStaleCreatedOrderResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::farm::nurture::core::contracts::workflows::generalgo::ScoreComputationRequest* Arena::CreateMaybeMessage< ::farm::nurture::core::contracts::workflows::generalgo::ScoreComputationRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::farm::nurture::core::contracts::workflows::generalgo::ScoreComputationRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::farm::nurture::core::contracts::workflows::generalgo::ScoreComputationResponse* Arena::CreateMaybeMessage< ::farm::nurture::core::contracts::workflows::generalgo::ScoreComputationResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::farm::nurture::core::contracts::workflows::generalgo::ScoreComputationResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::farm::nurture::core::contracts::workflows::generalgo::IotComputationRequest* Arena::CreateMaybeMessage< ::farm::nurture::core::contracts::workflows::generalgo::IotComputationRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::farm::nurture::core::contracts::workflows::generalgo::IotComputationRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::farm::nurture::core::contracts::workflows::generalgo::IotComputationResponse* Arena::CreateMaybeMessage< ::farm::nurture::core::contracts::workflows::generalgo::IotComputationResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::farm::nurture::core::contracts::workflows::generalgo::IotComputationResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::farm::nurture::core::contracts::workflows::generalgo::PostServiceFeedbackPNRequest* Arena::CreateMaybeMessage< ::farm::nurture::core::contracts::workflows::generalgo::PostServiceFeedbackPNRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::farm::nurture::core::contracts::workflows::generalgo::PostServiceFeedbackPNRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::farm::nurture::core::contracts::workflows::generalgo::PostPusaSprayPopUpRequest* Arena::CreateMaybeMessage< ::farm::nurture::core::contracts::workflows::generalgo::PostPusaSprayPopUpRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::farm::nurture::core::contracts::workflows::generalgo::PostPusaSprayPopUpRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::farm::nurture::core::contracts::workflows::generalgo::PostServiceFeedbackPNResponse* Arena::CreateMaybeMessage< ::farm::nurture::core::contracts::workflows::generalgo::PostServiceFeedbackPNResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::farm::nurture::core::contracts::workflows::generalgo::PostServiceFeedbackPNResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::farm::nurture::core::contracts::workflows::generalgo::PostPusaSprayPopUpResponse* Arena::CreateMaybeMessage< ::farm::nurture::core::contracts::workflows::generalgo::PostPusaSprayPopUpResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::farm::nurture::core::contracts::workflows::generalgo::PostPusaSprayPopUpResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::farm::nurture::core::contracts::workflows::generalgo::ExecuteUserJourneyCampaignRequest* Arena::CreateMaybeMessage< ::farm::nurture::core::contracts::workflows::generalgo::ExecuteUserJourneyCampaignRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::farm::nurture::core::contracts::workflows::generalgo::ExecuteUserJourneyCampaignRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::farm::nurture::core::contracts::workflows::generalgo::ExecuteUserJourneyCampaignResponse* Arena::CreateMaybeMessage< ::farm::nurture::core::contracts::workflows::generalgo::ExecuteUserJourneyCampaignResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::farm::nurture::core::contracts::workflows::generalgo::ExecuteUserJourneyCampaignResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::farm::nurture::core::contracts::workflows::generalgo::ExecuteCampaignRequest* Arena::CreateMaybeMessage< ::farm::nurture::core::contracts::workflows::generalgo::ExecuteCampaignRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::farm::nurture::core::contracts::workflows::generalgo::ExecuteCampaignRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::farm::nurture::core::contracts::workflows::generalgo::ExecuteCampaignResponse* Arena::CreateMaybeMessage< ::farm::nurture::core::contracts::workflows::generalgo::ExecuteCampaignResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::farm::nurture::core::contracts::workflows::generalgo::ExecuteCampaignResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::farm::nurture::core::contracts::workflows::generalgo::RefreshUserContentRequest* Arena::CreateMaybeMessage< ::farm::nurture::core::contracts::workflows::generalgo::RefreshUserContentRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::farm::nurture::core::contracts::workflows::generalgo::RefreshUserContentRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::farm::nurture::core::contracts::workflows::generalgo::RefreshUserContentResponse* Arena::CreateMaybeMessage< ::farm::nurture::core::contracts::workflows::generalgo::RefreshUserContentResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::farm::nurture::core::contracts::workflows::generalgo::RefreshUserContentResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::farm::nurture::core::contracts::workflows::generalgo::PreventiveMaintenanceTriggerRequest* Arena::CreateMaybeMessage< ::farm::nurture::core::contracts::workflows::generalgo::PreventiveMaintenanceTriggerRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::farm::nurture::core::contracts::workflows::generalgo::PreventiveMaintenanceTriggerRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::farm::nurture::core::contracts::workflows::generalgo::PreventiveMaintenanceTriggerResponse* Arena::CreateMaybeMessage< ::farm::nurture::core::contracts::workflows::generalgo::PreventiveMaintenanceTriggerResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::farm::nurture::core::contracts::workflows::generalgo::PreventiveMaintenanceTriggerResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::farm::nurture::core::contracts::workflows::generalgo::UpdateActorsMachinePreventiveMaintenanceRequest* Arena::CreateMaybeMessage< ::farm::nurture::core::contracts::workflows::generalgo::UpdateActorsMachinePreventiveMaintenanceRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::farm::nurture::core::contracts::workflows::generalgo::UpdateActorsMachinePreventiveMaintenanceRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::farm::nurture::core::contracts::workflows::generalgo::UpdateActorsMachinePreventiveMaintenanceResponse* Arena::CreateMaybeMessage< ::farm::nurture::core::contracts::workflows::generalgo::UpdateActorsMachinePreventiveMaintenanceResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::farm::nurture::core::contracts::workflows::generalgo::UpdateActorsMachinePreventiveMaintenanceResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::farm::nurture::core::contracts::workflows::generalgo::RescheduleMachinePreventiveMaintenanceRequest* Arena::CreateMaybeMessage< ::farm::nurture::core::contracts::workflows::generalgo::RescheduleMachinePreventiveMaintenanceRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::farm::nurture::core::contracts::workflows::generalgo::RescheduleMachinePreventiveMaintenanceRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::farm::nurture::core::contracts::workflows::generalgo::RescheduleMachinePreventiveMaintenanceResponse* Arena::CreateMaybeMessage< ::farm::nurture::core::contracts::workflows::generalgo::RescheduleMachinePreventiveMaintenanceResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::farm::nurture::core::contracts::workflows::generalgo::RescheduleMachinePreventiveMaintenanceResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::farm::nurture::core::contracts::workflows::generalgo::HandoverOtpRequest* Arena::CreateMaybeMessage< ::farm::nurture::core::contracts::workflows::generalgo::HandoverOtpRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::farm::nurture::core::contracts::workflows::generalgo::HandoverOtpRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::farm::nurture::core::contracts::workflows::generalgo::HandoverOtpResponse* Arena::CreateMaybeMessage< ::farm::nurture::core::contracts::workflows::generalgo::HandoverOtpResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::farm::nurture::core::contracts::workflows::generalgo::HandoverOtpResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::farm::nurture::core::contracts::workflows::generalgo::Attributes* Arena::CreateMaybeMessage< ::farm::nurture::core::contracts::workflows::generalgo::Attributes >(Arena* arena) {
  return Arena::CreateMessageInternal< ::farm::nurture::core::contracts::workflows::generalgo::Attributes >(arena);
}
template<> PROTOBUF_NOINLINE ::farm::nurture::core::contracts::workflows::generalgo::OfferRewardRequest* Arena::CreateMaybeMessage< ::farm::nurture::core::contracts::workflows::generalgo::OfferRewardRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::farm::nurture::core::contracts::workflows::generalgo::OfferRewardRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::farm::nurture::core::contracts::workflows::generalgo::OfferRewardResponse* Arena::CreateMaybeMessage< ::farm::nurture::core::contracts::workflows::generalgo::OfferRewardResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::farm::nurture::core::contracts::workflows::generalgo::OfferRewardResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::farm::nurture::core::contracts::workflows::generalgo::DiscountedSprayServiceRequest* Arena::CreateMaybeMessage< ::farm::nurture::core::contracts::workflows::generalgo::DiscountedSprayServiceRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::farm::nurture::core::contracts::workflows::generalgo::DiscountedSprayServiceRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::farm::nurture::core::contracts::workflows::generalgo::OfferInsuranceRewardRequest* Arena::CreateMaybeMessage< ::farm::nurture::core::contracts::workflows::generalgo::OfferInsuranceRewardRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::farm::nurture::core::contracts::workflows::generalgo::OfferInsuranceRewardRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::farm::nurture::core::contracts::workflows::generalgo::OfferInsuranceRewardResponse* Arena::CreateMaybeMessage< ::farm::nurture::core::contracts::workflows::generalgo::OfferInsuranceRewardResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::farm::nurture::core::contracts::workflows::generalgo::OfferInsuranceRewardResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::farm::nurture::core::contracts::workflows::generalgo::CreatePartitionsRequest* Arena::CreateMaybeMessage< ::farm::nurture::core::contracts::workflows::generalgo::CreatePartitionsRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::farm::nurture::core::contracts::workflows::generalgo::CreatePartitionsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::farm::nurture::core::contracts::workflows::generalgo::CreatePartitionsResponse* Arena::CreateMaybeMessage< ::farm::nurture::core::contracts::workflows::generalgo::CreatePartitionsResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::farm::nurture::core::contracts::workflows::generalgo::CreatePartitionsResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::farm::nurture::core::contracts::workflows::generalgo::TriggerF2FPointExpiryCronRequest* Arena::CreateMaybeMessage< ::farm::nurture::core::contracts::workflows::generalgo::TriggerF2FPointExpiryCronRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::farm::nurture::core::contracts::workflows::generalgo::TriggerF2FPointExpiryCronRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::farm::nurture::core::contracts::workflows::generalgo::TriggerF2FPointExpiryCronResponse* Arena::CreateMaybeMessage< ::farm::nurture::core::contracts::workflows::generalgo::TriggerF2FPointExpiryCronResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::farm::nurture::core::contracts::workflows::generalgo::TriggerF2FPointExpiryCronResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::farm::nurture::core::contracts::workflows::generalgo::InsurancePurchaseEventRequest* Arena::CreateMaybeMessage< ::farm::nurture::core::contracts::workflows::generalgo::InsurancePurchaseEventRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::farm::nurture::core::contracts::workflows::generalgo::InsurancePurchaseEventRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::farm::nurture::core::contracts::workflows::generalgo::InsurancePurchaseEventResponse* Arena::CreateMaybeMessage< ::farm::nurture::core::contracts::workflows::generalgo::InsurancePurchaseEventResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::farm::nurture::core::contracts::workflows::generalgo::InsurancePurchaseEventResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
