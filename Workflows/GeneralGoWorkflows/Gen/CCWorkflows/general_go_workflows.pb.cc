// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Workflows/GeneralGoWorkflows/general_go_workflows.proto

#include "Workflows/GeneralGoWorkflows/general_go_workflows.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_Common_2fentities_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ActorID_Common_2fentities_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_Common_2fheaders_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<3> scc_info_RequestHeaders_Common_2fheaders_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fprotobuf_2fduration_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Duration_google_2fprotobuf_2fduration_2eproto;
namespace farm {
namespace nurture {
namespace core {
namespace contracts {
namespace workflows {
namespace generalgo {
class ExecuteUserJourneyCampaignRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ExecuteUserJourneyCampaignRequest> _instance;
} _ExecuteUserJourneyCampaignRequest_default_instance_;
class ExecuteUserJourneyCampaignResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ExecuteUserJourneyCampaignResponse> _instance;
} _ExecuteUserJourneyCampaignResponse_default_instance_;
class ExecuteCampaignRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ExecuteCampaignRequest> _instance;
} _ExecuteCampaignRequest_default_instance_;
class ExecuteCampaignResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ExecuteCampaignResponse> _instance;
} _ExecuteCampaignResponse_default_instance_;
class CreatePartitionsRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CreatePartitionsRequest> _instance;
} _CreatePartitionsRequest_default_instance_;
class CreatePartitionsResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CreatePartitionsResponse> _instance;
} _CreatePartitionsResponse_default_instance_;
class HandoverOtpRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<HandoverOtpRequest> _instance;
} _HandoverOtpRequest_default_instance_;
class HandoverOtpResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<HandoverOtpResponse> _instance;
} _HandoverOtpResponse_default_instance_;
}  // namespace generalgo
}  // namespace workflows
}  // namespace contracts
}  // namespace core
}  // namespace nurture
}  // namespace farm
static void InitDefaultsscc_info_CreatePartitionsRequest_Workflows_2fGeneralGoWorkflows_2fgeneral_5fgo_5fworkflows_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::farm::nurture::core::contracts::workflows::generalgo::_CreatePartitionsRequest_default_instance_;
    new (ptr) ::farm::nurture::core::contracts::workflows::generalgo::CreatePartitionsRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_CreatePartitionsRequest_Workflows_2fGeneralGoWorkflows_2fgeneral_5fgo_5fworkflows_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_CreatePartitionsRequest_Workflows_2fGeneralGoWorkflows_2fgeneral_5fgo_5fworkflows_2eproto}, {}};

static void InitDefaultsscc_info_CreatePartitionsResponse_Workflows_2fGeneralGoWorkflows_2fgeneral_5fgo_5fworkflows_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::farm::nurture::core::contracts::workflows::generalgo::_CreatePartitionsResponse_default_instance_;
    new (ptr) ::farm::nurture::core::contracts::workflows::generalgo::CreatePartitionsResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_CreatePartitionsResponse_Workflows_2fGeneralGoWorkflows_2fgeneral_5fgo_5fworkflows_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_CreatePartitionsResponse_Workflows_2fGeneralGoWorkflows_2fgeneral_5fgo_5fworkflows_2eproto}, {}};

static void InitDefaultsscc_info_ExecuteCampaignRequest_Workflows_2fGeneralGoWorkflows_2fgeneral_5fgo_5fworkflows_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::farm::nurture::core::contracts::workflows::generalgo::_ExecuteCampaignRequest_default_instance_;
    new (ptr) ::farm::nurture::core::contracts::workflows::generalgo::ExecuteCampaignRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ExecuteCampaignRequest_Workflows_2fGeneralGoWorkflows_2fgeneral_5fgo_5fworkflows_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_ExecuteCampaignRequest_Workflows_2fGeneralGoWorkflows_2fgeneral_5fgo_5fworkflows_2eproto}, {
      &scc_info_Duration_google_2fprotobuf_2fduration_2eproto.base,}};

static void InitDefaultsscc_info_ExecuteCampaignResponse_Workflows_2fGeneralGoWorkflows_2fgeneral_5fgo_5fworkflows_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::farm::nurture::core::contracts::workflows::generalgo::_ExecuteCampaignResponse_default_instance_;
    new (ptr) ::farm::nurture::core::contracts::workflows::generalgo::ExecuteCampaignResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ExecuteCampaignResponse_Workflows_2fGeneralGoWorkflows_2fgeneral_5fgo_5fworkflows_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ExecuteCampaignResponse_Workflows_2fGeneralGoWorkflows_2fgeneral_5fgo_5fworkflows_2eproto}, {}};

static void InitDefaultsscc_info_ExecuteUserJourneyCampaignRequest_Workflows_2fGeneralGoWorkflows_2fgeneral_5fgo_5fworkflows_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::farm::nurture::core::contracts::workflows::generalgo::_ExecuteUserJourneyCampaignRequest_default_instance_;
    new (ptr) ::farm::nurture::core::contracts::workflows::generalgo::ExecuteUserJourneyCampaignRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_ExecuteUserJourneyCampaignRequest_Workflows_2fGeneralGoWorkflows_2fgeneral_5fgo_5fworkflows_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_ExecuteUserJourneyCampaignRequest_Workflows_2fGeneralGoWorkflows_2fgeneral_5fgo_5fworkflows_2eproto}, {
      &scc_info_RequestHeaders_Common_2fheaders_2eproto.base,
      &scc_info_Duration_google_2fprotobuf_2fduration_2eproto.base,}};

static void InitDefaultsscc_info_ExecuteUserJourneyCampaignResponse_Workflows_2fGeneralGoWorkflows_2fgeneral_5fgo_5fworkflows_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::farm::nurture::core::contracts::workflows::generalgo::_ExecuteUserJourneyCampaignResponse_default_instance_;
    new (ptr) ::farm::nurture::core::contracts::workflows::generalgo::ExecuteUserJourneyCampaignResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ExecuteUserJourneyCampaignResponse_Workflows_2fGeneralGoWorkflows_2fgeneral_5fgo_5fworkflows_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ExecuteUserJourneyCampaignResponse_Workflows_2fGeneralGoWorkflows_2fgeneral_5fgo_5fworkflows_2eproto}, {}};

static void InitDefaultsscc_info_HandoverOtpRequest_Workflows_2fGeneralGoWorkflows_2fgeneral_5fgo_5fworkflows_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::farm::nurture::core::contracts::workflows::generalgo::_HandoverOtpRequest_default_instance_;
    new (ptr) ::farm::nurture::core::contracts::workflows::generalgo::HandoverOtpRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_HandoverOtpRequest_Workflows_2fGeneralGoWorkflows_2fgeneral_5fgo_5fworkflows_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_HandoverOtpRequest_Workflows_2fGeneralGoWorkflows_2fgeneral_5fgo_5fworkflows_2eproto}, {
      &scc_info_ActorID_Common_2fentities_2eproto.base,}};

static void InitDefaultsscc_info_HandoverOtpResponse_Workflows_2fGeneralGoWorkflows_2fgeneral_5fgo_5fworkflows_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::farm::nurture::core::contracts::workflows::generalgo::_HandoverOtpResponse_default_instance_;
    new (ptr) ::farm::nurture::core::contracts::workflows::generalgo::HandoverOtpResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_HandoverOtpResponse_Workflows_2fGeneralGoWorkflows_2fgeneral_5fgo_5fworkflows_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_HandoverOtpResponse_Workflows_2fGeneralGoWorkflows_2fgeneral_5fgo_5fworkflows_2eproto}, {}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_Workflows_2fGeneralGoWorkflows_2fgeneral_5fgo_5fworkflows_2eproto[8];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_Workflows_2fGeneralGoWorkflows_2fgeneral_5fgo_5fworkflows_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_Workflows_2fGeneralGoWorkflows_2fgeneral_5fgo_5fworkflows_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_Workflows_2fGeneralGoWorkflows_2fgeneral_5fgo_5fworkflows_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::farm::nurture::core::contracts::workflows::generalgo::ExecuteUserJourneyCampaignRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::farm::nurture::core::contracts::workflows::generalgo::ExecuteUserJourneyCampaignRequest, requestheaders_),
  PROTOBUF_FIELD_OFFSET(::farm::nurture::core::contracts::workflows::generalgo::ExecuteUserJourneyCampaignRequest, campaignid_),
  PROTOBUF_FIELD_OFFSET(::farm::nurture::core::contracts::workflows::generalgo::ExecuteUserJourneyCampaignRequest, engagementvertexid_),
  PROTOBUF_FIELD_OFFSET(::farm::nurture::core::contracts::workflows::generalgo::ExecuteUserJourneyCampaignRequest, referenceid_),
  PROTOBUF_FIELD_OFFSET(::farm::nurture::core::contracts::workflows::generalgo::ExecuteUserJourneyCampaignRequest, waitduration_),
  PROTOBUF_FIELD_OFFSET(::farm::nurture::core::contracts::workflows::generalgo::ExecuteUserJourneyCampaignRequest, unused_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::farm::nurture::core::contracts::workflows::generalgo::ExecuteUserJourneyCampaignResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::farm::nurture::core::contracts::workflows::generalgo::ExecuteUserJourneyCampaignResponse, status_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::farm::nurture::core::contracts::workflows::generalgo::ExecuteCampaignRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::farm::nurture::core::contracts::workflows::generalgo::ExecuteCampaignRequest, campaign_id_),
  PROTOBUF_FIELD_OFFSET(::farm::nurture::core::contracts::workflows::generalgo::ExecuteCampaignRequest, campaignscheduletype_),
  PROTOBUF_FIELD_OFFSET(::farm::nurture::core::contracts::workflows::generalgo::ExecuteCampaignRequest, inactionduration_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::farm::nurture::core::contracts::workflows::generalgo::ExecuteCampaignResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::farm::nurture::core::contracts::workflows::generalgo::ExecuteCampaignResponse, status_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::farm::nurture::core::contracts::workflows::generalgo::CreatePartitionsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::farm::nurture::core::contracts::workflows::generalgo::CreatePartitionsRequest, tablename_),
  PROTOBUF_FIELD_OFFSET(::farm::nurture::core::contracts::workflows::generalgo::CreatePartitionsRequest, databasename_),
  PROTOBUF_FIELD_OFFSET(::farm::nurture::core::contracts::workflows::generalgo::CreatePartitionsRequest, bucket_),
  PROTOBUF_FIELD_OFFSET(::farm::nurture::core::contracts::workflows::generalgo::CreatePartitionsRequest, numberofdays_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::farm::nurture::core::contracts::workflows::generalgo::CreatePartitionsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::farm::nurture::core::contracts::workflows::generalgo::CreatePartitionsResponse, status_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::farm::nurture::core::contracts::workflows::generalgo::HandoverOtpRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::farm::nurture::core::contracts::workflows::generalgo::HandoverOtpRequest, otp_),
  PROTOBUF_FIELD_OFFSET(::farm::nurture::core::contracts::workflows::generalgo::HandoverOtpRequest, actordetails_),
  PROTOBUF_FIELD_OFFSET(::farm::nurture::core::contracts::workflows::generalgo::HandoverOtpRequest, mobilenumber_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::farm::nurture::core::contracts::workflows::generalgo::HandoverOtpResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::farm::nurture::core::contracts::workflows::generalgo::HandoverOtpResponse, status_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::farm::nurture::core::contracts::workflows::generalgo::ExecuteUserJourneyCampaignRequest)},
  { 11, -1, sizeof(::farm::nurture::core::contracts::workflows::generalgo::ExecuteUserJourneyCampaignResponse)},
  { 17, -1, sizeof(::farm::nurture::core::contracts::workflows::generalgo::ExecuteCampaignRequest)},
  { 25, -1, sizeof(::farm::nurture::core::contracts::workflows::generalgo::ExecuteCampaignResponse)},
  { 31, -1, sizeof(::farm::nurture::core::contracts::workflows::generalgo::CreatePartitionsRequest)},
  { 40, -1, sizeof(::farm::nurture::core::contracts::workflows::generalgo::CreatePartitionsResponse)},
  { 46, -1, sizeof(::farm::nurture::core::contracts::workflows::generalgo::HandoverOtpRequest)},
  { 54, -1, sizeof(::farm::nurture::core::contracts::workflows::generalgo::HandoverOtpResponse)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::farm::nurture::core::contracts::workflows::generalgo::_ExecuteUserJourneyCampaignRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::farm::nurture::core::contracts::workflows::generalgo::_ExecuteUserJourneyCampaignResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::farm::nurture::core::contracts::workflows::generalgo::_ExecuteCampaignRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::farm::nurture::core::contracts::workflows::generalgo::_ExecuteCampaignResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::farm::nurture::core::contracts::workflows::generalgo::_CreatePartitionsRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::farm::nurture::core::contracts::workflows::generalgo::_CreatePartitionsResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::farm::nurture::core::contracts::workflows::generalgo::_HandoverOtpRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::farm::nurture::core::contracts::workflows::generalgo::_HandoverOtpResponse_default_instance_),
};

const char descriptor_table_protodef_Workflows_2fGeneralGoWorkflows_2fgeneral_5fgo_5fworkflows_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n7Workflows/GeneralGoWorkflows/general_g"
  "o_workflows.proto\022/farm.nurture.core.con"
  "tracts.workflows.generalgo\032\022Common/enums"
  ".proto\032\025Common/entities.proto\032\024Common/he"
  "aders.proto\032\037google/protobuf/timestamp.p"
  "roto\032\036google/protobuf/duration.proto\"\365\001\n"
  "!ExecuteUserJourneyCampaignRequest\022J\n\016re"
  "questHeaders\030\001 \001(\01322.farm.nurture.core.c"
  "ontracts.common.RequestHeaders\022\022\n\ncampai"
  "gnId\030\002 \001(\003\022\032\n\022engagementVertexId\030\003 \001(\003\022\023"
  "\n\013referenceId\030\004 \001(\t\022/\n\014waitDuration\030\005 \001("
  "\0132\031.google.protobuf.Duration\022\016\n\006unused\030\006"
  " \001(\003\"h\n\"ExecuteUserJourneyCampaignRespon"
  "se\022B\n\006status\030\001 \001(\01622.farm.nurture.core.c"
  "ontracts.common.ResponseStatus\"\272\001\n\026Execu"
  "teCampaignRequest\022\023\n\013campaign_id\030\001 \001(\003\022V"
  "\n\024campaignScheduleType\030\002 \001(\01628.farm.nurt"
  "ure.core.contracts.common.CampaignSchedu"
  "leType\0223\n\020inactionDuration\030\003 \001(\0132\031.googl"
  "e.protobuf.Duration\"]\n\027ExecuteCampaignRe"
  "sponse\022B\n\006status\030\001 \001(\01622.farm.nurture.co"
  "re.contracts.common.ResponseStatus\"h\n\027Cr"
  "eatePartitionsRequest\022\021\n\ttableName\030\001 \001(\t"
  "\022\024\n\014databaseName\030\002 \001(\t\022\016\n\006bucket\030\003 \001(\t\022\024"
  "\n\014numberOfDays\030\004 \001(\003\"^\n\030CreatePartitions"
  "Response\022B\n\006status\030\001 \001(\01622.farm.nurture."
  "core.contracts.common.ResponseStatus\"z\n\022"
  "HandoverOtpRequest\022\013\n\003otp\030\001 \001(\t\022A\n\014actor"
  "Details\030\002 \001(\0132+.farm.nurture.core.contra"
  "cts.common.ActorID\022\024\n\014mobileNumber\030\003 \001(\t"
  "\"Y\n\023HandoverOtpResponse\022B\n\006status\030\001 \001(\0162"
  "2.farm.nurture.core.contracts.common.Res"
  "ponseStatus2\314\005\n\022GeneralGoWorkflows\022\246\001\n\017E"
  "xecuteCampaign\022G.farm.nurture.core.contr"
  "acts.workflows.generalgo.ExecuteCampaign"
  "Request\032H.farm.nurture.core.contracts.wo"
  "rkflows.generalgo.ExecuteCampaignRespons"
  "e\"\000\022\307\001\n\032ExecuteUserJourneyCampaign\022R.far"
  "m.nurture.core.contracts.workflows.gener"
  "algo.ExecuteUserJourneyCampaignRequest\032S"
  ".farm.nurture.core.contracts.workflows.g"
  "eneralgo.ExecuteUserJourneyCampaignRespo"
  "nse\"\000\022\247\001\n\020CreatePartitions\022H.farm.nurtur"
  "e.core.contracts.workflows.generalgo.Cre"
  "atePartitionsRequest\032I.farm.nurture.core"
  ".contracts.workflows.generalgo.CreatePar"
  "titionsResponse\022\230\001\n\013HandoverOtp\022C.farm.n"
  "urture.core.contracts.workflows.generalg"
  "o.HandoverOtpRequest\032D.farm.nurture.core"
  ".contracts.workflows.generalgo.HandoverO"
  "tpResponseBs\n/farm.nurture.core.contract"
  "s.workflows.generalgoP\001Z>github.com/nurt"
  "ure-farm/Contracts/Workflows/GeneralGoWo"
  "rkflowsb\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_Workflows_2fGeneralGoWorkflows_2fgeneral_5fgo_5fworkflows_2eproto_deps[5] = {
  &::descriptor_table_Common_2fentities_2eproto,
  &::descriptor_table_Common_2fenums_2eproto,
  &::descriptor_table_Common_2fheaders_2eproto,
  &::descriptor_table_google_2fprotobuf_2fduration_2eproto,
  &::descriptor_table_google_2fprotobuf_2ftimestamp_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_Workflows_2fGeneralGoWorkflows_2fgeneral_5fgo_5fworkflows_2eproto_sccs[8] = {
  &scc_info_CreatePartitionsRequest_Workflows_2fGeneralGoWorkflows_2fgeneral_5fgo_5fworkflows_2eproto.base,
  &scc_info_CreatePartitionsResponse_Workflows_2fGeneralGoWorkflows_2fgeneral_5fgo_5fworkflows_2eproto.base,
  &scc_info_ExecuteCampaignRequest_Workflows_2fGeneralGoWorkflows_2fgeneral_5fgo_5fworkflows_2eproto.base,
  &scc_info_ExecuteCampaignResponse_Workflows_2fGeneralGoWorkflows_2fgeneral_5fgo_5fworkflows_2eproto.base,
  &scc_info_ExecuteUserJourneyCampaignRequest_Workflows_2fGeneralGoWorkflows_2fgeneral_5fgo_5fworkflows_2eproto.base,
  &scc_info_ExecuteUserJourneyCampaignResponse_Workflows_2fGeneralGoWorkflows_2fgeneral_5fgo_5fworkflows_2eproto.base,
  &scc_info_HandoverOtpRequest_Workflows_2fGeneralGoWorkflows_2fgeneral_5fgo_5fworkflows_2eproto.base,
  &scc_info_HandoverOtpResponse_Workflows_2fGeneralGoWorkflows_2fgeneral_5fgo_5fworkflows_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_Workflows_2fGeneralGoWorkflows_2fgeneral_5fgo_5fworkflows_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_Workflows_2fGeneralGoWorkflows_2fgeneral_5fgo_5fworkflows_2eproto = {
  false, false, descriptor_table_protodef_Workflows_2fGeneralGoWorkflows_2fgeneral_5fgo_5fworkflows_2eproto, "Workflows/GeneralGoWorkflows/general_go_workflows.proto", 2135,
  &descriptor_table_Workflows_2fGeneralGoWorkflows_2fgeneral_5fgo_5fworkflows_2eproto_once, descriptor_table_Workflows_2fGeneralGoWorkflows_2fgeneral_5fgo_5fworkflows_2eproto_sccs, descriptor_table_Workflows_2fGeneralGoWorkflows_2fgeneral_5fgo_5fworkflows_2eproto_deps, 8, 5,
  schemas, file_default_instances, TableStruct_Workflows_2fGeneralGoWorkflows_2fgeneral_5fgo_5fworkflows_2eproto::offsets,
  file_level_metadata_Workflows_2fGeneralGoWorkflows_2fgeneral_5fgo_5fworkflows_2eproto, 8, file_level_enum_descriptors_Workflows_2fGeneralGoWorkflows_2fgeneral_5fgo_5fworkflows_2eproto, file_level_service_descriptors_Workflows_2fGeneralGoWorkflows_2fgeneral_5fgo_5fworkflows_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_Workflows_2fGeneralGoWorkflows_2fgeneral_5fgo_5fworkflows_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_Workflows_2fGeneralGoWorkflows_2fgeneral_5fgo_5fworkflows_2eproto)), true);
namespace farm {
namespace nurture {
namespace core {
namespace contracts {
namespace workflows {
namespace generalgo {

// ===================================================================

class ExecuteUserJourneyCampaignRequest::_Internal {
 public:
  static const ::farm::nurture::core::contracts::common::RequestHeaders& requestheaders(const ExecuteUserJourneyCampaignRequest* msg);
  static const PROTOBUF_NAMESPACE_ID::Duration& waitduration(const ExecuteUserJourneyCampaignRequest* msg);
};

const ::farm::nurture::core::contracts::common::RequestHeaders&
ExecuteUserJourneyCampaignRequest::_Internal::requestheaders(const ExecuteUserJourneyCampaignRequest* msg) {
  return *msg->requestheaders_;
}
const PROTOBUF_NAMESPACE_ID::Duration&
ExecuteUserJourneyCampaignRequest::_Internal::waitduration(const ExecuteUserJourneyCampaignRequest* msg) {
  return *msg->waitduration_;
}
void ExecuteUserJourneyCampaignRequest::clear_requestheaders() {
  if (GetArena() == nullptr && requestheaders_ != nullptr) {
    delete requestheaders_;
  }
  requestheaders_ = nullptr;
}
void ExecuteUserJourneyCampaignRequest::clear_waitduration() {
  if (GetArena() == nullptr && waitduration_ != nullptr) {
    delete waitduration_;
  }
  waitduration_ = nullptr;
}
ExecuteUserJourneyCampaignRequest::ExecuteUserJourneyCampaignRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:farm.nurture.core.contracts.workflows.generalgo.ExecuteUserJourneyCampaignRequest)
}
ExecuteUserJourneyCampaignRequest::ExecuteUserJourneyCampaignRequest(const ExecuteUserJourneyCampaignRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  referenceid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_referenceid().empty()) {
    referenceid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_referenceid(), 
      GetArena());
  }
  if (from._internal_has_requestheaders()) {
    requestheaders_ = new ::farm::nurture::core::contracts::common::RequestHeaders(*from.requestheaders_);
  } else {
    requestheaders_ = nullptr;
  }
  if (from._internal_has_waitduration()) {
    waitduration_ = new PROTOBUF_NAMESPACE_ID::Duration(*from.waitduration_);
  } else {
    waitduration_ = nullptr;
  }
  ::memcpy(&campaignid_, &from.campaignid_,
    static_cast<size_t>(reinterpret_cast<char*>(&unused_) -
    reinterpret_cast<char*>(&campaignid_)) + sizeof(unused_));
  // @@protoc_insertion_point(copy_constructor:farm.nurture.core.contracts.workflows.generalgo.ExecuteUserJourneyCampaignRequest)
}

void ExecuteUserJourneyCampaignRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ExecuteUserJourneyCampaignRequest_Workflows_2fGeneralGoWorkflows_2fgeneral_5fgo_5fworkflows_2eproto.base);
  referenceid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&requestheaders_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&unused_) -
      reinterpret_cast<char*>(&requestheaders_)) + sizeof(unused_));
}

ExecuteUserJourneyCampaignRequest::~ExecuteUserJourneyCampaignRequest() {
  // @@protoc_insertion_point(destructor:farm.nurture.core.contracts.workflows.generalgo.ExecuteUserJourneyCampaignRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ExecuteUserJourneyCampaignRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  referenceid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete requestheaders_;
  if (this != internal_default_instance()) delete waitduration_;
}

void ExecuteUserJourneyCampaignRequest::ArenaDtor(void* object) {
  ExecuteUserJourneyCampaignRequest* _this = reinterpret_cast< ExecuteUserJourneyCampaignRequest* >(object);
  (void)_this;
}
void ExecuteUserJourneyCampaignRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ExecuteUserJourneyCampaignRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ExecuteUserJourneyCampaignRequest& ExecuteUserJourneyCampaignRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ExecuteUserJourneyCampaignRequest_Workflows_2fGeneralGoWorkflows_2fgeneral_5fgo_5fworkflows_2eproto.base);
  return *internal_default_instance();
}


void ExecuteUserJourneyCampaignRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:farm.nurture.core.contracts.workflows.generalgo.ExecuteUserJourneyCampaignRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  referenceid_.ClearToEmpty();
  if (GetArena() == nullptr && requestheaders_ != nullptr) {
    delete requestheaders_;
  }
  requestheaders_ = nullptr;
  if (GetArena() == nullptr && waitduration_ != nullptr) {
    delete waitduration_;
  }
  waitduration_ = nullptr;
  ::memset(&campaignid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&unused_) -
      reinterpret_cast<char*>(&campaignid_)) + sizeof(unused_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ExecuteUserJourneyCampaignRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .farm.nurture.core.contracts.common.RequestHeaders requestHeaders = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_requestheaders(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 campaignId = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          campaignid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 engagementVertexId = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          engagementvertexid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string referenceId = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_referenceid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "farm.nurture.core.contracts.workflows.generalgo.ExecuteUserJourneyCampaignRequest.referenceId"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.protobuf.Duration waitDuration = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_waitduration(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 unused = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          unused_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ExecuteUserJourneyCampaignRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:farm.nurture.core.contracts.workflows.generalgo.ExecuteUserJourneyCampaignRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .farm.nurture.core.contracts.common.RequestHeaders requestHeaders = 1;
  if (this->has_requestheaders()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::requestheaders(this), target, stream);
  }

  // int64 campaignId = 2;
  if (this->campaignid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->_internal_campaignid(), target);
  }

  // int64 engagementVertexId = 3;
  if (this->engagementvertexid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(3, this->_internal_engagementvertexid(), target);
  }

  // string referenceId = 4;
  if (this->referenceid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_referenceid().data(), static_cast<int>(this->_internal_referenceid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "farm.nurture.core.contracts.workflows.generalgo.ExecuteUserJourneyCampaignRequest.referenceId");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_referenceid(), target);
  }

  // .google.protobuf.Duration waitDuration = 5;
  if (this->has_waitduration()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        5, _Internal::waitduration(this), target, stream);
  }

  // int64 unused = 6;
  if (this->unused() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(6, this->_internal_unused(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:farm.nurture.core.contracts.workflows.generalgo.ExecuteUserJourneyCampaignRequest)
  return target;
}

size_t ExecuteUserJourneyCampaignRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:farm.nurture.core.contracts.workflows.generalgo.ExecuteUserJourneyCampaignRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string referenceId = 4;
  if (this->referenceid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_referenceid());
  }

  // .farm.nurture.core.contracts.common.RequestHeaders requestHeaders = 1;
  if (this->has_requestheaders()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *requestheaders_);
  }

  // .google.protobuf.Duration waitDuration = 5;
  if (this->has_waitduration()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *waitduration_);
  }

  // int64 campaignId = 2;
  if (this->campaignid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_campaignid());
  }

  // int64 engagementVertexId = 3;
  if (this->engagementvertexid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_engagementvertexid());
  }

  // int64 unused = 6;
  if (this->unused() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_unused());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ExecuteUserJourneyCampaignRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:farm.nurture.core.contracts.workflows.generalgo.ExecuteUserJourneyCampaignRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ExecuteUserJourneyCampaignRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ExecuteUserJourneyCampaignRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:farm.nurture.core.contracts.workflows.generalgo.ExecuteUserJourneyCampaignRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:farm.nurture.core.contracts.workflows.generalgo.ExecuteUserJourneyCampaignRequest)
    MergeFrom(*source);
  }
}

void ExecuteUserJourneyCampaignRequest::MergeFrom(const ExecuteUserJourneyCampaignRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:farm.nurture.core.contracts.workflows.generalgo.ExecuteUserJourneyCampaignRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.referenceid().size() > 0) {
    _internal_set_referenceid(from._internal_referenceid());
  }
  if (from.has_requestheaders()) {
    _internal_mutable_requestheaders()->::farm::nurture::core::contracts::common::RequestHeaders::MergeFrom(from._internal_requestheaders());
  }
  if (from.has_waitduration()) {
    _internal_mutable_waitduration()->PROTOBUF_NAMESPACE_ID::Duration::MergeFrom(from._internal_waitduration());
  }
  if (from.campaignid() != 0) {
    _internal_set_campaignid(from._internal_campaignid());
  }
  if (from.engagementvertexid() != 0) {
    _internal_set_engagementvertexid(from._internal_engagementvertexid());
  }
  if (from.unused() != 0) {
    _internal_set_unused(from._internal_unused());
  }
}

void ExecuteUserJourneyCampaignRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:farm.nurture.core.contracts.workflows.generalgo.ExecuteUserJourneyCampaignRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ExecuteUserJourneyCampaignRequest::CopyFrom(const ExecuteUserJourneyCampaignRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:farm.nurture.core.contracts.workflows.generalgo.ExecuteUserJourneyCampaignRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ExecuteUserJourneyCampaignRequest::IsInitialized() const {
  return true;
}

void ExecuteUserJourneyCampaignRequest::InternalSwap(ExecuteUserJourneyCampaignRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  referenceid_.Swap(&other->referenceid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ExecuteUserJourneyCampaignRequest, unused_)
      + sizeof(ExecuteUserJourneyCampaignRequest::unused_)
      - PROTOBUF_FIELD_OFFSET(ExecuteUserJourneyCampaignRequest, requestheaders_)>(
          reinterpret_cast<char*>(&requestheaders_),
          reinterpret_cast<char*>(&other->requestheaders_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ExecuteUserJourneyCampaignRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ExecuteUserJourneyCampaignResponse::_Internal {
 public:
};

ExecuteUserJourneyCampaignResponse::ExecuteUserJourneyCampaignResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:farm.nurture.core.contracts.workflows.generalgo.ExecuteUserJourneyCampaignResponse)
}
ExecuteUserJourneyCampaignResponse::ExecuteUserJourneyCampaignResponse(const ExecuteUserJourneyCampaignResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  status_ = from.status_;
  // @@protoc_insertion_point(copy_constructor:farm.nurture.core.contracts.workflows.generalgo.ExecuteUserJourneyCampaignResponse)
}

void ExecuteUserJourneyCampaignResponse::SharedCtor() {
  status_ = 0;
}

ExecuteUserJourneyCampaignResponse::~ExecuteUserJourneyCampaignResponse() {
  // @@protoc_insertion_point(destructor:farm.nurture.core.contracts.workflows.generalgo.ExecuteUserJourneyCampaignResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ExecuteUserJourneyCampaignResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void ExecuteUserJourneyCampaignResponse::ArenaDtor(void* object) {
  ExecuteUserJourneyCampaignResponse* _this = reinterpret_cast< ExecuteUserJourneyCampaignResponse* >(object);
  (void)_this;
}
void ExecuteUserJourneyCampaignResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ExecuteUserJourneyCampaignResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ExecuteUserJourneyCampaignResponse& ExecuteUserJourneyCampaignResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ExecuteUserJourneyCampaignResponse_Workflows_2fGeneralGoWorkflows_2fgeneral_5fgo_5fworkflows_2eproto.base);
  return *internal_default_instance();
}


void ExecuteUserJourneyCampaignResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:farm.nurture.core.contracts.workflows.generalgo.ExecuteUserJourneyCampaignResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  status_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ExecuteUserJourneyCampaignResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .farm.nurture.core.contracts.common.ResponseStatus status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_status(static_cast<::farm::nurture::core::contracts::common::ResponseStatus>(val));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ExecuteUserJourneyCampaignResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:farm.nurture.core.contracts.workflows.generalgo.ExecuteUserJourneyCampaignResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .farm.nurture.core.contracts.common.ResponseStatus status = 1;
  if (this->status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_status(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:farm.nurture.core.contracts.workflows.generalgo.ExecuteUserJourneyCampaignResponse)
  return target;
}

size_t ExecuteUserJourneyCampaignResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:farm.nurture.core.contracts.workflows.generalgo.ExecuteUserJourneyCampaignResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .farm.nurture.core.contracts.common.ResponseStatus status = 1;
  if (this->status() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_status());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ExecuteUserJourneyCampaignResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:farm.nurture.core.contracts.workflows.generalgo.ExecuteUserJourneyCampaignResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ExecuteUserJourneyCampaignResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ExecuteUserJourneyCampaignResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:farm.nurture.core.contracts.workflows.generalgo.ExecuteUserJourneyCampaignResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:farm.nurture.core.contracts.workflows.generalgo.ExecuteUserJourneyCampaignResponse)
    MergeFrom(*source);
  }
}

void ExecuteUserJourneyCampaignResponse::MergeFrom(const ExecuteUserJourneyCampaignResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:farm.nurture.core.contracts.workflows.generalgo.ExecuteUserJourneyCampaignResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.status() != 0) {
    _internal_set_status(from._internal_status());
  }
}

void ExecuteUserJourneyCampaignResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:farm.nurture.core.contracts.workflows.generalgo.ExecuteUserJourneyCampaignResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ExecuteUserJourneyCampaignResponse::CopyFrom(const ExecuteUserJourneyCampaignResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:farm.nurture.core.contracts.workflows.generalgo.ExecuteUserJourneyCampaignResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ExecuteUserJourneyCampaignResponse::IsInitialized() const {
  return true;
}

void ExecuteUserJourneyCampaignResponse::InternalSwap(ExecuteUserJourneyCampaignResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(status_, other->status_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ExecuteUserJourneyCampaignResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ExecuteCampaignRequest::_Internal {
 public:
  static const PROTOBUF_NAMESPACE_ID::Duration& inactionduration(const ExecuteCampaignRequest* msg);
};

const PROTOBUF_NAMESPACE_ID::Duration&
ExecuteCampaignRequest::_Internal::inactionduration(const ExecuteCampaignRequest* msg) {
  return *msg->inactionduration_;
}
void ExecuteCampaignRequest::clear_inactionduration() {
  if (GetArena() == nullptr && inactionduration_ != nullptr) {
    delete inactionduration_;
  }
  inactionduration_ = nullptr;
}
ExecuteCampaignRequest::ExecuteCampaignRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:farm.nurture.core.contracts.workflows.generalgo.ExecuteCampaignRequest)
}
ExecuteCampaignRequest::ExecuteCampaignRequest(const ExecuteCampaignRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_inactionduration()) {
    inactionduration_ = new PROTOBUF_NAMESPACE_ID::Duration(*from.inactionduration_);
  } else {
    inactionduration_ = nullptr;
  }
  ::memcpy(&campaign_id_, &from.campaign_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&campaignscheduletype_) -
    reinterpret_cast<char*>(&campaign_id_)) + sizeof(campaignscheduletype_));
  // @@protoc_insertion_point(copy_constructor:farm.nurture.core.contracts.workflows.generalgo.ExecuteCampaignRequest)
}

void ExecuteCampaignRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ExecuteCampaignRequest_Workflows_2fGeneralGoWorkflows_2fgeneral_5fgo_5fworkflows_2eproto.base);
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&inactionduration_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&campaignscheduletype_) -
      reinterpret_cast<char*>(&inactionduration_)) + sizeof(campaignscheduletype_));
}

ExecuteCampaignRequest::~ExecuteCampaignRequest() {
  // @@protoc_insertion_point(destructor:farm.nurture.core.contracts.workflows.generalgo.ExecuteCampaignRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ExecuteCampaignRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete inactionduration_;
}

void ExecuteCampaignRequest::ArenaDtor(void* object) {
  ExecuteCampaignRequest* _this = reinterpret_cast< ExecuteCampaignRequest* >(object);
  (void)_this;
}
void ExecuteCampaignRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ExecuteCampaignRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ExecuteCampaignRequest& ExecuteCampaignRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ExecuteCampaignRequest_Workflows_2fGeneralGoWorkflows_2fgeneral_5fgo_5fworkflows_2eproto.base);
  return *internal_default_instance();
}


void ExecuteCampaignRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:farm.nurture.core.contracts.workflows.generalgo.ExecuteCampaignRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && inactionduration_ != nullptr) {
    delete inactionduration_;
  }
  inactionduration_ = nullptr;
  ::memset(&campaign_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&campaignscheduletype_) -
      reinterpret_cast<char*>(&campaign_id_)) + sizeof(campaignscheduletype_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ExecuteCampaignRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int64 campaign_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          campaign_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .farm.nurture.core.contracts.common.CampaignScheduleType campaignScheduleType = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_campaignscheduletype(static_cast<::farm::nurture::core::contracts::common::CampaignScheduleType>(val));
        } else goto handle_unusual;
        continue;
      // .google.protobuf.Duration inactionDuration = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_inactionduration(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ExecuteCampaignRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:farm.nurture.core.contracts.workflows.generalgo.ExecuteCampaignRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 campaign_id = 1;
  if (this->campaign_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(1, this->_internal_campaign_id(), target);
  }

  // .farm.nurture.core.contracts.common.CampaignScheduleType campaignScheduleType = 2;
  if (this->campaignscheduletype() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      2, this->_internal_campaignscheduletype(), target);
  }

  // .google.protobuf.Duration inactionDuration = 3;
  if (this->has_inactionduration()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::inactionduration(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:farm.nurture.core.contracts.workflows.generalgo.ExecuteCampaignRequest)
  return target;
}

size_t ExecuteCampaignRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:farm.nurture.core.contracts.workflows.generalgo.ExecuteCampaignRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .google.protobuf.Duration inactionDuration = 3;
  if (this->has_inactionduration()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *inactionduration_);
  }

  // int64 campaign_id = 1;
  if (this->campaign_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_campaign_id());
  }

  // .farm.nurture.core.contracts.common.CampaignScheduleType campaignScheduleType = 2;
  if (this->campaignscheduletype() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_campaignscheduletype());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ExecuteCampaignRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:farm.nurture.core.contracts.workflows.generalgo.ExecuteCampaignRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ExecuteCampaignRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ExecuteCampaignRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:farm.nurture.core.contracts.workflows.generalgo.ExecuteCampaignRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:farm.nurture.core.contracts.workflows.generalgo.ExecuteCampaignRequest)
    MergeFrom(*source);
  }
}

void ExecuteCampaignRequest::MergeFrom(const ExecuteCampaignRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:farm.nurture.core.contracts.workflows.generalgo.ExecuteCampaignRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_inactionduration()) {
    _internal_mutable_inactionduration()->PROTOBUF_NAMESPACE_ID::Duration::MergeFrom(from._internal_inactionduration());
  }
  if (from.campaign_id() != 0) {
    _internal_set_campaign_id(from._internal_campaign_id());
  }
  if (from.campaignscheduletype() != 0) {
    _internal_set_campaignscheduletype(from._internal_campaignscheduletype());
  }
}

void ExecuteCampaignRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:farm.nurture.core.contracts.workflows.generalgo.ExecuteCampaignRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ExecuteCampaignRequest::CopyFrom(const ExecuteCampaignRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:farm.nurture.core.contracts.workflows.generalgo.ExecuteCampaignRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ExecuteCampaignRequest::IsInitialized() const {
  return true;
}

void ExecuteCampaignRequest::InternalSwap(ExecuteCampaignRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ExecuteCampaignRequest, campaignscheduletype_)
      + sizeof(ExecuteCampaignRequest::campaignscheduletype_)
      - PROTOBUF_FIELD_OFFSET(ExecuteCampaignRequest, inactionduration_)>(
          reinterpret_cast<char*>(&inactionduration_),
          reinterpret_cast<char*>(&other->inactionduration_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ExecuteCampaignRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ExecuteCampaignResponse::_Internal {
 public:
};

ExecuteCampaignResponse::ExecuteCampaignResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:farm.nurture.core.contracts.workflows.generalgo.ExecuteCampaignResponse)
}
ExecuteCampaignResponse::ExecuteCampaignResponse(const ExecuteCampaignResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  status_ = from.status_;
  // @@protoc_insertion_point(copy_constructor:farm.nurture.core.contracts.workflows.generalgo.ExecuteCampaignResponse)
}

void ExecuteCampaignResponse::SharedCtor() {
  status_ = 0;
}

ExecuteCampaignResponse::~ExecuteCampaignResponse() {
  // @@protoc_insertion_point(destructor:farm.nurture.core.contracts.workflows.generalgo.ExecuteCampaignResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ExecuteCampaignResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void ExecuteCampaignResponse::ArenaDtor(void* object) {
  ExecuteCampaignResponse* _this = reinterpret_cast< ExecuteCampaignResponse* >(object);
  (void)_this;
}
void ExecuteCampaignResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ExecuteCampaignResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ExecuteCampaignResponse& ExecuteCampaignResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ExecuteCampaignResponse_Workflows_2fGeneralGoWorkflows_2fgeneral_5fgo_5fworkflows_2eproto.base);
  return *internal_default_instance();
}


void ExecuteCampaignResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:farm.nurture.core.contracts.workflows.generalgo.ExecuteCampaignResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  status_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ExecuteCampaignResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .farm.nurture.core.contracts.common.ResponseStatus status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_status(static_cast<::farm::nurture::core::contracts::common::ResponseStatus>(val));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ExecuteCampaignResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:farm.nurture.core.contracts.workflows.generalgo.ExecuteCampaignResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .farm.nurture.core.contracts.common.ResponseStatus status = 1;
  if (this->status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_status(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:farm.nurture.core.contracts.workflows.generalgo.ExecuteCampaignResponse)
  return target;
}

size_t ExecuteCampaignResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:farm.nurture.core.contracts.workflows.generalgo.ExecuteCampaignResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .farm.nurture.core.contracts.common.ResponseStatus status = 1;
  if (this->status() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_status());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ExecuteCampaignResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:farm.nurture.core.contracts.workflows.generalgo.ExecuteCampaignResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ExecuteCampaignResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ExecuteCampaignResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:farm.nurture.core.contracts.workflows.generalgo.ExecuteCampaignResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:farm.nurture.core.contracts.workflows.generalgo.ExecuteCampaignResponse)
    MergeFrom(*source);
  }
}

void ExecuteCampaignResponse::MergeFrom(const ExecuteCampaignResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:farm.nurture.core.contracts.workflows.generalgo.ExecuteCampaignResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.status() != 0) {
    _internal_set_status(from._internal_status());
  }
}

void ExecuteCampaignResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:farm.nurture.core.contracts.workflows.generalgo.ExecuteCampaignResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ExecuteCampaignResponse::CopyFrom(const ExecuteCampaignResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:farm.nurture.core.contracts.workflows.generalgo.ExecuteCampaignResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ExecuteCampaignResponse::IsInitialized() const {
  return true;
}

void ExecuteCampaignResponse::InternalSwap(ExecuteCampaignResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(status_, other->status_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ExecuteCampaignResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CreatePartitionsRequest::_Internal {
 public:
};

CreatePartitionsRequest::CreatePartitionsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:farm.nurture.core.contracts.workflows.generalgo.CreatePartitionsRequest)
}
CreatePartitionsRequest::CreatePartitionsRequest(const CreatePartitionsRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  tablename_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_tablename().empty()) {
    tablename_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_tablename(), 
      GetArena());
  }
  databasename_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_databasename().empty()) {
    databasename_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_databasename(), 
      GetArena());
  }
  bucket_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_bucket().empty()) {
    bucket_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_bucket(), 
      GetArena());
  }
  numberofdays_ = from.numberofdays_;
  // @@protoc_insertion_point(copy_constructor:farm.nurture.core.contracts.workflows.generalgo.CreatePartitionsRequest)
}

void CreatePartitionsRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_CreatePartitionsRequest_Workflows_2fGeneralGoWorkflows_2fgeneral_5fgo_5fworkflows_2eproto.base);
  tablename_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  databasename_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  bucket_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  numberofdays_ = PROTOBUF_LONGLONG(0);
}

CreatePartitionsRequest::~CreatePartitionsRequest() {
  // @@protoc_insertion_point(destructor:farm.nurture.core.contracts.workflows.generalgo.CreatePartitionsRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CreatePartitionsRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  tablename_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  databasename_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  bucket_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void CreatePartitionsRequest::ArenaDtor(void* object) {
  CreatePartitionsRequest* _this = reinterpret_cast< CreatePartitionsRequest* >(object);
  (void)_this;
}
void CreatePartitionsRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CreatePartitionsRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CreatePartitionsRequest& CreatePartitionsRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CreatePartitionsRequest_Workflows_2fGeneralGoWorkflows_2fgeneral_5fgo_5fworkflows_2eproto.base);
  return *internal_default_instance();
}


void CreatePartitionsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:farm.nurture.core.contracts.workflows.generalgo.CreatePartitionsRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  tablename_.ClearToEmpty();
  databasename_.ClearToEmpty();
  bucket_.ClearToEmpty();
  numberofdays_ = PROTOBUF_LONGLONG(0);
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreatePartitionsRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string tableName = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_tablename();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "farm.nurture.core.contracts.workflows.generalgo.CreatePartitionsRequest.tableName"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string databaseName = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_databasename();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "farm.nurture.core.contracts.workflows.generalgo.CreatePartitionsRequest.databaseName"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string bucket = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_bucket();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "farm.nurture.core.contracts.workflows.generalgo.CreatePartitionsRequest.bucket"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 numberOfDays = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          numberofdays_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CreatePartitionsRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:farm.nurture.core.contracts.workflows.generalgo.CreatePartitionsRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string tableName = 1;
  if (this->tablename().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_tablename().data(), static_cast<int>(this->_internal_tablename().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "farm.nurture.core.contracts.workflows.generalgo.CreatePartitionsRequest.tableName");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_tablename(), target);
  }

  // string databaseName = 2;
  if (this->databasename().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_databasename().data(), static_cast<int>(this->_internal_databasename().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "farm.nurture.core.contracts.workflows.generalgo.CreatePartitionsRequest.databaseName");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_databasename(), target);
  }

  // string bucket = 3;
  if (this->bucket().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_bucket().data(), static_cast<int>(this->_internal_bucket().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "farm.nurture.core.contracts.workflows.generalgo.CreatePartitionsRequest.bucket");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_bucket(), target);
  }

  // int64 numberOfDays = 4;
  if (this->numberofdays() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(4, this->_internal_numberofdays(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:farm.nurture.core.contracts.workflows.generalgo.CreatePartitionsRequest)
  return target;
}

size_t CreatePartitionsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:farm.nurture.core.contracts.workflows.generalgo.CreatePartitionsRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string tableName = 1;
  if (this->tablename().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_tablename());
  }

  // string databaseName = 2;
  if (this->databasename().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_databasename());
  }

  // string bucket = 3;
  if (this->bucket().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_bucket());
  }

  // int64 numberOfDays = 4;
  if (this->numberofdays() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_numberofdays());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CreatePartitionsRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:farm.nurture.core.contracts.workflows.generalgo.CreatePartitionsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CreatePartitionsRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CreatePartitionsRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:farm.nurture.core.contracts.workflows.generalgo.CreatePartitionsRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:farm.nurture.core.contracts.workflows.generalgo.CreatePartitionsRequest)
    MergeFrom(*source);
  }
}

void CreatePartitionsRequest::MergeFrom(const CreatePartitionsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:farm.nurture.core.contracts.workflows.generalgo.CreatePartitionsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.tablename().size() > 0) {
    _internal_set_tablename(from._internal_tablename());
  }
  if (from.databasename().size() > 0) {
    _internal_set_databasename(from._internal_databasename());
  }
  if (from.bucket().size() > 0) {
    _internal_set_bucket(from._internal_bucket());
  }
  if (from.numberofdays() != 0) {
    _internal_set_numberofdays(from._internal_numberofdays());
  }
}

void CreatePartitionsRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:farm.nurture.core.contracts.workflows.generalgo.CreatePartitionsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreatePartitionsRequest::CopyFrom(const CreatePartitionsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:farm.nurture.core.contracts.workflows.generalgo.CreatePartitionsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreatePartitionsRequest::IsInitialized() const {
  return true;
}

void CreatePartitionsRequest::InternalSwap(CreatePartitionsRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  tablename_.Swap(&other->tablename_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  databasename_.Swap(&other->databasename_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  bucket_.Swap(&other->bucket_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(numberofdays_, other->numberofdays_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CreatePartitionsRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CreatePartitionsResponse::_Internal {
 public:
};

CreatePartitionsResponse::CreatePartitionsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:farm.nurture.core.contracts.workflows.generalgo.CreatePartitionsResponse)
}
CreatePartitionsResponse::CreatePartitionsResponse(const CreatePartitionsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  status_ = from.status_;
  // @@protoc_insertion_point(copy_constructor:farm.nurture.core.contracts.workflows.generalgo.CreatePartitionsResponse)
}

void CreatePartitionsResponse::SharedCtor() {
  status_ = 0;
}

CreatePartitionsResponse::~CreatePartitionsResponse() {
  // @@protoc_insertion_point(destructor:farm.nurture.core.contracts.workflows.generalgo.CreatePartitionsResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CreatePartitionsResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void CreatePartitionsResponse::ArenaDtor(void* object) {
  CreatePartitionsResponse* _this = reinterpret_cast< CreatePartitionsResponse* >(object);
  (void)_this;
}
void CreatePartitionsResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CreatePartitionsResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CreatePartitionsResponse& CreatePartitionsResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CreatePartitionsResponse_Workflows_2fGeneralGoWorkflows_2fgeneral_5fgo_5fworkflows_2eproto.base);
  return *internal_default_instance();
}


void CreatePartitionsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:farm.nurture.core.contracts.workflows.generalgo.CreatePartitionsResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  status_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreatePartitionsResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .farm.nurture.core.contracts.common.ResponseStatus status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_status(static_cast<::farm::nurture::core::contracts::common::ResponseStatus>(val));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CreatePartitionsResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:farm.nurture.core.contracts.workflows.generalgo.CreatePartitionsResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .farm.nurture.core.contracts.common.ResponseStatus status = 1;
  if (this->status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_status(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:farm.nurture.core.contracts.workflows.generalgo.CreatePartitionsResponse)
  return target;
}

size_t CreatePartitionsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:farm.nurture.core.contracts.workflows.generalgo.CreatePartitionsResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .farm.nurture.core.contracts.common.ResponseStatus status = 1;
  if (this->status() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_status());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CreatePartitionsResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:farm.nurture.core.contracts.workflows.generalgo.CreatePartitionsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CreatePartitionsResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CreatePartitionsResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:farm.nurture.core.contracts.workflows.generalgo.CreatePartitionsResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:farm.nurture.core.contracts.workflows.generalgo.CreatePartitionsResponse)
    MergeFrom(*source);
  }
}

void CreatePartitionsResponse::MergeFrom(const CreatePartitionsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:farm.nurture.core.contracts.workflows.generalgo.CreatePartitionsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.status() != 0) {
    _internal_set_status(from._internal_status());
  }
}

void CreatePartitionsResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:farm.nurture.core.contracts.workflows.generalgo.CreatePartitionsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreatePartitionsResponse::CopyFrom(const CreatePartitionsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:farm.nurture.core.contracts.workflows.generalgo.CreatePartitionsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreatePartitionsResponse::IsInitialized() const {
  return true;
}

void CreatePartitionsResponse::InternalSwap(CreatePartitionsResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(status_, other->status_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CreatePartitionsResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class HandoverOtpRequest::_Internal {
 public:
  static const ::farm::nurture::core::contracts::common::ActorID& actordetails(const HandoverOtpRequest* msg);
};

const ::farm::nurture::core::contracts::common::ActorID&
HandoverOtpRequest::_Internal::actordetails(const HandoverOtpRequest* msg) {
  return *msg->actordetails_;
}
void HandoverOtpRequest::clear_actordetails() {
  if (GetArena() == nullptr && actordetails_ != nullptr) {
    delete actordetails_;
  }
  actordetails_ = nullptr;
}
HandoverOtpRequest::HandoverOtpRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:farm.nurture.core.contracts.workflows.generalgo.HandoverOtpRequest)
}
HandoverOtpRequest::HandoverOtpRequest(const HandoverOtpRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  otp_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_otp().empty()) {
    otp_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_otp(), 
      GetArena());
  }
  mobilenumber_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_mobilenumber().empty()) {
    mobilenumber_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_mobilenumber(), 
      GetArena());
  }
  if (from._internal_has_actordetails()) {
    actordetails_ = new ::farm::nurture::core::contracts::common::ActorID(*from.actordetails_);
  } else {
    actordetails_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:farm.nurture.core.contracts.workflows.generalgo.HandoverOtpRequest)
}

void HandoverOtpRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_HandoverOtpRequest_Workflows_2fGeneralGoWorkflows_2fgeneral_5fgo_5fworkflows_2eproto.base);
  otp_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  mobilenumber_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  actordetails_ = nullptr;
}

HandoverOtpRequest::~HandoverOtpRequest() {
  // @@protoc_insertion_point(destructor:farm.nurture.core.contracts.workflows.generalgo.HandoverOtpRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void HandoverOtpRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  otp_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  mobilenumber_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete actordetails_;
}

void HandoverOtpRequest::ArenaDtor(void* object) {
  HandoverOtpRequest* _this = reinterpret_cast< HandoverOtpRequest* >(object);
  (void)_this;
}
void HandoverOtpRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void HandoverOtpRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const HandoverOtpRequest& HandoverOtpRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_HandoverOtpRequest_Workflows_2fGeneralGoWorkflows_2fgeneral_5fgo_5fworkflows_2eproto.base);
  return *internal_default_instance();
}


void HandoverOtpRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:farm.nurture.core.contracts.workflows.generalgo.HandoverOtpRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  otp_.ClearToEmpty();
  mobilenumber_.ClearToEmpty();
  if (GetArena() == nullptr && actordetails_ != nullptr) {
    delete actordetails_;
  }
  actordetails_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* HandoverOtpRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string otp = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_otp();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "farm.nurture.core.contracts.workflows.generalgo.HandoverOtpRequest.otp"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .farm.nurture.core.contracts.common.ActorID actorDetails = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_actordetails(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string mobileNumber = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_mobilenumber();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "farm.nurture.core.contracts.workflows.generalgo.HandoverOtpRequest.mobileNumber"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* HandoverOtpRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:farm.nurture.core.contracts.workflows.generalgo.HandoverOtpRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string otp = 1;
  if (this->otp().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_otp().data(), static_cast<int>(this->_internal_otp().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "farm.nurture.core.contracts.workflows.generalgo.HandoverOtpRequest.otp");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_otp(), target);
  }

  // .farm.nurture.core.contracts.common.ActorID actorDetails = 2;
  if (this->has_actordetails()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::actordetails(this), target, stream);
  }

  // string mobileNumber = 3;
  if (this->mobilenumber().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_mobilenumber().data(), static_cast<int>(this->_internal_mobilenumber().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "farm.nurture.core.contracts.workflows.generalgo.HandoverOtpRequest.mobileNumber");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_mobilenumber(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:farm.nurture.core.contracts.workflows.generalgo.HandoverOtpRequest)
  return target;
}

size_t HandoverOtpRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:farm.nurture.core.contracts.workflows.generalgo.HandoverOtpRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string otp = 1;
  if (this->otp().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_otp());
  }

  // string mobileNumber = 3;
  if (this->mobilenumber().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_mobilenumber());
  }

  // .farm.nurture.core.contracts.common.ActorID actorDetails = 2;
  if (this->has_actordetails()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *actordetails_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void HandoverOtpRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:farm.nurture.core.contracts.workflows.generalgo.HandoverOtpRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const HandoverOtpRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<HandoverOtpRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:farm.nurture.core.contracts.workflows.generalgo.HandoverOtpRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:farm.nurture.core.contracts.workflows.generalgo.HandoverOtpRequest)
    MergeFrom(*source);
  }
}

void HandoverOtpRequest::MergeFrom(const HandoverOtpRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:farm.nurture.core.contracts.workflows.generalgo.HandoverOtpRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.otp().size() > 0) {
    _internal_set_otp(from._internal_otp());
  }
  if (from.mobilenumber().size() > 0) {
    _internal_set_mobilenumber(from._internal_mobilenumber());
  }
  if (from.has_actordetails()) {
    _internal_mutable_actordetails()->::farm::nurture::core::contracts::common::ActorID::MergeFrom(from._internal_actordetails());
  }
}

void HandoverOtpRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:farm.nurture.core.contracts.workflows.generalgo.HandoverOtpRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HandoverOtpRequest::CopyFrom(const HandoverOtpRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:farm.nurture.core.contracts.workflows.generalgo.HandoverOtpRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HandoverOtpRequest::IsInitialized() const {
  return true;
}

void HandoverOtpRequest::InternalSwap(HandoverOtpRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  otp_.Swap(&other->otp_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  mobilenumber_.Swap(&other->mobilenumber_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(actordetails_, other->actordetails_);
}

::PROTOBUF_NAMESPACE_ID::Metadata HandoverOtpRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class HandoverOtpResponse::_Internal {
 public:
};

HandoverOtpResponse::HandoverOtpResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:farm.nurture.core.contracts.workflows.generalgo.HandoverOtpResponse)
}
HandoverOtpResponse::HandoverOtpResponse(const HandoverOtpResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  status_ = from.status_;
  // @@protoc_insertion_point(copy_constructor:farm.nurture.core.contracts.workflows.generalgo.HandoverOtpResponse)
}

void HandoverOtpResponse::SharedCtor() {
  status_ = 0;
}

HandoverOtpResponse::~HandoverOtpResponse() {
  // @@protoc_insertion_point(destructor:farm.nurture.core.contracts.workflows.generalgo.HandoverOtpResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void HandoverOtpResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void HandoverOtpResponse::ArenaDtor(void* object) {
  HandoverOtpResponse* _this = reinterpret_cast< HandoverOtpResponse* >(object);
  (void)_this;
}
void HandoverOtpResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void HandoverOtpResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const HandoverOtpResponse& HandoverOtpResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_HandoverOtpResponse_Workflows_2fGeneralGoWorkflows_2fgeneral_5fgo_5fworkflows_2eproto.base);
  return *internal_default_instance();
}


void HandoverOtpResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:farm.nurture.core.contracts.workflows.generalgo.HandoverOtpResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  status_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* HandoverOtpResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .farm.nurture.core.contracts.common.ResponseStatus status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_status(static_cast<::farm::nurture::core::contracts::common::ResponseStatus>(val));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* HandoverOtpResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:farm.nurture.core.contracts.workflows.generalgo.HandoverOtpResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .farm.nurture.core.contracts.common.ResponseStatus status = 1;
  if (this->status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_status(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:farm.nurture.core.contracts.workflows.generalgo.HandoverOtpResponse)
  return target;
}

size_t HandoverOtpResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:farm.nurture.core.contracts.workflows.generalgo.HandoverOtpResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .farm.nurture.core.contracts.common.ResponseStatus status = 1;
  if (this->status() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_status());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void HandoverOtpResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:farm.nurture.core.contracts.workflows.generalgo.HandoverOtpResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const HandoverOtpResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<HandoverOtpResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:farm.nurture.core.contracts.workflows.generalgo.HandoverOtpResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:farm.nurture.core.contracts.workflows.generalgo.HandoverOtpResponse)
    MergeFrom(*source);
  }
}

void HandoverOtpResponse::MergeFrom(const HandoverOtpResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:farm.nurture.core.contracts.workflows.generalgo.HandoverOtpResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.status() != 0) {
    _internal_set_status(from._internal_status());
  }
}

void HandoverOtpResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:farm.nurture.core.contracts.workflows.generalgo.HandoverOtpResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HandoverOtpResponse::CopyFrom(const HandoverOtpResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:farm.nurture.core.contracts.workflows.generalgo.HandoverOtpResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HandoverOtpResponse::IsInitialized() const {
  return true;
}

void HandoverOtpResponse::InternalSwap(HandoverOtpResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(status_, other->status_);
}

::PROTOBUF_NAMESPACE_ID::Metadata HandoverOtpResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace generalgo
}  // namespace workflows
}  // namespace contracts
}  // namespace core
}  // namespace nurture
}  // namespace farm
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::farm::nurture::core::contracts::workflows::generalgo::ExecuteUserJourneyCampaignRequest* Arena::CreateMaybeMessage< ::farm::nurture::core::contracts::workflows::generalgo::ExecuteUserJourneyCampaignRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::farm::nurture::core::contracts::workflows::generalgo::ExecuteUserJourneyCampaignRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::farm::nurture::core::contracts::workflows::generalgo::ExecuteUserJourneyCampaignResponse* Arena::CreateMaybeMessage< ::farm::nurture::core::contracts::workflows::generalgo::ExecuteUserJourneyCampaignResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::farm::nurture::core::contracts::workflows::generalgo::ExecuteUserJourneyCampaignResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::farm::nurture::core::contracts::workflows::generalgo::ExecuteCampaignRequest* Arena::CreateMaybeMessage< ::farm::nurture::core::contracts::workflows::generalgo::ExecuteCampaignRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::farm::nurture::core::contracts::workflows::generalgo::ExecuteCampaignRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::farm::nurture::core::contracts::workflows::generalgo::ExecuteCampaignResponse* Arena::CreateMaybeMessage< ::farm::nurture::core::contracts::workflows::generalgo::ExecuteCampaignResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::farm::nurture::core::contracts::workflows::generalgo::ExecuteCampaignResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::farm::nurture::core::contracts::workflows::generalgo::CreatePartitionsRequest* Arena::CreateMaybeMessage< ::farm::nurture::core::contracts::workflows::generalgo::CreatePartitionsRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::farm::nurture::core::contracts::workflows::generalgo::CreatePartitionsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::farm::nurture::core::contracts::workflows::generalgo::CreatePartitionsResponse* Arena::CreateMaybeMessage< ::farm::nurture::core::contracts::workflows::generalgo::CreatePartitionsResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::farm::nurture::core::contracts::workflows::generalgo::CreatePartitionsResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::farm::nurture::core::contracts::workflows::generalgo::HandoverOtpRequest* Arena::CreateMaybeMessage< ::farm::nurture::core::contracts::workflows::generalgo::HandoverOtpRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::farm::nurture::core::contracts::workflows::generalgo::HandoverOtpRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::farm::nurture::core::contracts::workflows::generalgo::HandoverOtpResponse* Arena::CreateMaybeMessage< ::farm::nurture::core::contracts::workflows::generalgo::HandoverOtpResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::farm::nurture::core::contracts::workflows::generalgo::HandoverOtpResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
