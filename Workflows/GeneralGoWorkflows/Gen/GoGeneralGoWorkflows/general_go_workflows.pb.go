// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.14.0
// source: Workflows/GeneralGoWorkflows/general_go_workflows.proto

package GeneralGoWorkflows

import (
	GoCommon "code.nurture.farm/Core/Contracts/Common/Gen/GoCommon"
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	_ "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type ExecuteUserJourneyCampaignRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestHeaders     *GoCommon.RequestHeaders `protobuf:"bytes,1,opt,name=requestHeaders,proto3" json:"requestHeaders,omitempty"`
	CampaignId         int64                    `protobuf:"varint,2,opt,name=campaignId,proto3" json:"campaignId,omitempty"`
	EngagementVertexId int64                    `protobuf:"varint,3,opt,name=engagementVertexId,proto3" json:"engagementVertexId,omitempty"`
	ReferenceId        string                   `protobuf:"bytes,4,opt,name=referenceId,proto3" json:"referenceId,omitempty"`
	WaitDuration       *durationpb.Duration     `protobuf:"bytes,5,opt,name=waitDuration,proto3" json:"waitDuration,omitempty"`
	Unused             int64                    `protobuf:"varint,6,opt,name=unused,proto3" json:"unused,omitempty"`
}

func (x *ExecuteUserJourneyCampaignRequest) Reset() {
	*x = ExecuteUserJourneyCampaignRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Workflows_GeneralGoWorkflows_general_go_workflows_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExecuteUserJourneyCampaignRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecuteUserJourneyCampaignRequest) ProtoMessage() {}

func (x *ExecuteUserJourneyCampaignRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Workflows_GeneralGoWorkflows_general_go_workflows_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecuteUserJourneyCampaignRequest.ProtoReflect.Descriptor instead.
func (*ExecuteUserJourneyCampaignRequest) Descriptor() ([]byte, []int) {
	return file_Workflows_GeneralGoWorkflows_general_go_workflows_proto_rawDescGZIP(), []int{0}
}

func (x *ExecuteUserJourneyCampaignRequest) GetRequestHeaders() *GoCommon.RequestHeaders {
	if x != nil {
		return x.RequestHeaders
	}
	return nil
}

func (x *ExecuteUserJourneyCampaignRequest) GetCampaignId() int64 {
	if x != nil {
		return x.CampaignId
	}
	return 0
}

func (x *ExecuteUserJourneyCampaignRequest) GetEngagementVertexId() int64 {
	if x != nil {
		return x.EngagementVertexId
	}
	return 0
}

func (x *ExecuteUserJourneyCampaignRequest) GetReferenceId() string {
	if x != nil {
		return x.ReferenceId
	}
	return ""
}

func (x *ExecuteUserJourneyCampaignRequest) GetWaitDuration() *durationpb.Duration {
	if x != nil {
		return x.WaitDuration
	}
	return nil
}

func (x *ExecuteUserJourneyCampaignRequest) GetUnused() int64 {
	if x != nil {
		return x.Unused
	}
	return 0
}

type ExecuteUserJourneyCampaignResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status GoCommon.ResponseStatus `protobuf:"varint,1,opt,name=status,proto3,enum=farm.nurture.core.contracts.common.ResponseStatus" json:"status,omitempty"`
}

func (x *ExecuteUserJourneyCampaignResponse) Reset() {
	*x = ExecuteUserJourneyCampaignResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Workflows_GeneralGoWorkflows_general_go_workflows_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExecuteUserJourneyCampaignResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecuteUserJourneyCampaignResponse) ProtoMessage() {}

func (x *ExecuteUserJourneyCampaignResponse) ProtoReflect() protoreflect.Message {
	mi := &file_Workflows_GeneralGoWorkflows_general_go_workflows_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecuteUserJourneyCampaignResponse.ProtoReflect.Descriptor instead.
func (*ExecuteUserJourneyCampaignResponse) Descriptor() ([]byte, []int) {
	return file_Workflows_GeneralGoWorkflows_general_go_workflows_proto_rawDescGZIP(), []int{1}
}

func (x *ExecuteUserJourneyCampaignResponse) GetStatus() GoCommon.ResponseStatus {
	if x != nil {
		return x.Status
	}
	return GoCommon.ResponseStatus_NO_RESPONSE_STATUS
}

type ExecuteCampaignRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CampaignId           int64                         `protobuf:"varint,1,opt,name=campaign_id,json=campaignId,proto3" json:"campaign_id,omitempty"`
	CampaignScheduleType GoCommon.CampaignScheduleType `protobuf:"varint,2,opt,name=campaignScheduleType,proto3,enum=farm.nurture.core.contracts.common.CampaignScheduleType" json:"campaignScheduleType,omitempty"`
	InactionDuration     *durationpb.Duration          `protobuf:"bytes,3,opt,name=inactionDuration,proto3" json:"inactionDuration,omitempty"`
}

func (x *ExecuteCampaignRequest) Reset() {
	*x = ExecuteCampaignRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Workflows_GeneralGoWorkflows_general_go_workflows_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExecuteCampaignRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecuteCampaignRequest) ProtoMessage() {}

func (x *ExecuteCampaignRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Workflows_GeneralGoWorkflows_general_go_workflows_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecuteCampaignRequest.ProtoReflect.Descriptor instead.
func (*ExecuteCampaignRequest) Descriptor() ([]byte, []int) {
	return file_Workflows_GeneralGoWorkflows_general_go_workflows_proto_rawDescGZIP(), []int{2}
}

func (x *ExecuteCampaignRequest) GetCampaignId() int64 {
	if x != nil {
		return x.CampaignId
	}
	return 0
}

func (x *ExecuteCampaignRequest) GetCampaignScheduleType() GoCommon.CampaignScheduleType {
	if x != nil {
		return x.CampaignScheduleType
	}
	return GoCommon.CampaignScheduleType_NO_CAMPAIGN_SCHEDULE_TYPE
}

func (x *ExecuteCampaignRequest) GetInactionDuration() *durationpb.Duration {
	if x != nil {
		return x.InactionDuration
	}
	return nil
}

type ExecuteCampaignResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status GoCommon.ResponseStatus `protobuf:"varint,1,opt,name=status,proto3,enum=farm.nurture.core.contracts.common.ResponseStatus" json:"status,omitempty"`
}

func (x *ExecuteCampaignResponse) Reset() {
	*x = ExecuteCampaignResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Workflows_GeneralGoWorkflows_general_go_workflows_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExecuteCampaignResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecuteCampaignResponse) ProtoMessage() {}

func (x *ExecuteCampaignResponse) ProtoReflect() protoreflect.Message {
	mi := &file_Workflows_GeneralGoWorkflows_general_go_workflows_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecuteCampaignResponse.ProtoReflect.Descriptor instead.
func (*ExecuteCampaignResponse) Descriptor() ([]byte, []int) {
	return file_Workflows_GeneralGoWorkflows_general_go_workflows_proto_rawDescGZIP(), []int{3}
}

func (x *ExecuteCampaignResponse) GetStatus() GoCommon.ResponseStatus {
	if x != nil {
		return x.Status
	}
	return GoCommon.ResponseStatus_NO_RESPONSE_STATUS
}

type CreatePartitionsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TableName    string `protobuf:"bytes,1,opt,name=tableName,proto3" json:"tableName,omitempty"`
	DatabaseName string `protobuf:"bytes,2,opt,name=databaseName,proto3" json:"databaseName,omitempty"`
	Bucket       string `protobuf:"bytes,3,opt,name=bucket,proto3" json:"bucket,omitempty"`
	NumberOfDays int64  `protobuf:"varint,4,opt,name=numberOfDays,proto3" json:"numberOfDays,omitempty"`
}

func (x *CreatePartitionsRequest) Reset() {
	*x = CreatePartitionsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Workflows_GeneralGoWorkflows_general_go_workflows_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreatePartitionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePartitionsRequest) ProtoMessage() {}

func (x *CreatePartitionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Workflows_GeneralGoWorkflows_general_go_workflows_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePartitionsRequest.ProtoReflect.Descriptor instead.
func (*CreatePartitionsRequest) Descriptor() ([]byte, []int) {
	return file_Workflows_GeneralGoWorkflows_general_go_workflows_proto_rawDescGZIP(), []int{4}
}

func (x *CreatePartitionsRequest) GetTableName() string {
	if x != nil {
		return x.TableName
	}
	return ""
}

func (x *CreatePartitionsRequest) GetDatabaseName() string {
	if x != nil {
		return x.DatabaseName
	}
	return ""
}

func (x *CreatePartitionsRequest) GetBucket() string {
	if x != nil {
		return x.Bucket
	}
	return ""
}

func (x *CreatePartitionsRequest) GetNumberOfDays() int64 {
	if x != nil {
		return x.NumberOfDays
	}
	return 0
}

type CreatePartitionsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status GoCommon.ResponseStatus `protobuf:"varint,1,opt,name=status,proto3,enum=farm.nurture.core.contracts.common.ResponseStatus" json:"status,omitempty"`
}

func (x *CreatePartitionsResponse) Reset() {
	*x = CreatePartitionsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Workflows_GeneralGoWorkflows_general_go_workflows_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreatePartitionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePartitionsResponse) ProtoMessage() {}

func (x *CreatePartitionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_Workflows_GeneralGoWorkflows_general_go_workflows_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePartitionsResponse.ProtoReflect.Descriptor instead.
func (*CreatePartitionsResponse) Descriptor() ([]byte, []int) {
	return file_Workflows_GeneralGoWorkflows_general_go_workflows_proto_rawDescGZIP(), []int{5}
}

func (x *CreatePartitionsResponse) GetStatus() GoCommon.ResponseStatus {
	if x != nil {
		return x.Status
	}
	return GoCommon.ResponseStatus_NO_RESPONSE_STATUS
}

var File_Workflows_GeneralGoWorkflows_general_go_workflows_proto protoreflect.FileDescriptor

var file_Workflows_GeneralGoWorkflows_general_go_workflows_proto_rawDesc = []byte{
	0x0a, 0x37, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x73, 0x2f, 0x47, 0x65, 0x6e, 0x65,
	0x72, 0x61, 0x6c, 0x47, 0x6f, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x73, 0x2f, 0x67,
	0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x5f, 0x67, 0x6f, 0x5f, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c,
	0x6f, 0x77, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x2f, 0x66, 0x61, 0x72, 0x6d, 0x2e,
	0x6e, 0x75, 0x72, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x63, 0x6f, 0x6e,
	0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x73,
	0x2e, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x67, 0x6f, 0x1a, 0x12, 0x43, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2f, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x15,
	0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x14, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x68, 0x65,
	0x61, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64, 0x75,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xc8, 0x02, 0x0a,
	0x21, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x4a, 0x6f, 0x75, 0x72,
	0x6e, 0x65, 0x79, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x5a, 0x0a, 0x0e, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x65, 0x61,
	0x64, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x66, 0x61, 0x72,
	0x6d, 0x2e, 0x6e, 0x75, 0x72, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x63,
	0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x52, 0x0e,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x12, 0x1e,
	0x0a, 0x0a, 0x63, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0a, 0x63, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x49, 0x64, 0x12, 0x2e,
	0x0a, 0x12, 0x65, 0x6e, 0x67, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x56, 0x65, 0x72, 0x74,
	0x65, 0x78, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x12, 0x65, 0x6e, 0x67, 0x61,
	0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x56, 0x65, 0x72, 0x74, 0x65, 0x78, 0x49, 0x64, 0x12, 0x20,
	0x0a, 0x0b, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x49, 0x64,
	0x12, 0x3d, 0x0a, 0x0c, 0x77, 0x61, 0x69, 0x74, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x0c, 0x77, 0x61, 0x69, 0x74, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x16, 0x0a, 0x06, 0x75, 0x6e, 0x75, 0x73, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x06, 0x75, 0x6e, 0x75, 0x73, 0x65, 0x64, 0x22, 0x70, 0x0a, 0x22, 0x45, 0x78, 0x65, 0x63, 0x75,
	0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x4a, 0x6f, 0x75, 0x72, 0x6e, 0x65, 0x79, 0x43, 0x61, 0x6d,
	0x70, 0x61, 0x69, 0x67, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4a, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x32, 0x2e,
	0x66, 0x61, 0x72, 0x6d, 0x2e, 0x6e, 0x75, 0x72, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x63, 0x6f, 0x72,
	0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0xee, 0x01, 0x0a, 0x16, 0x45, 0x78,
	0x65, 0x63, 0x75, 0x74, 0x65, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x63, 0x61, 0x6d, 0x70, 0x61,
	0x69, 0x67, 0x6e, 0x49, 0x64, 0x12, 0x6c, 0x0a, 0x14, 0x63, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67,
	0x6e, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x38, 0x2e, 0x66, 0x61, 0x72, 0x6d, 0x2e, 0x6e, 0x75, 0x72, 0x74, 0x75,
	0x72, 0x65, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74,
	0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67,
	0x6e, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x14, 0x63,
	0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x45, 0x0a, 0x10, 0x69, 0x6e, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44,
	0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x10, 0x69, 0x6e, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x65, 0x0a, 0x17, 0x45, 0x78,
	0x65, 0x63, 0x75, 0x74, 0x65, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4a, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x32, 0x2e, 0x66, 0x61, 0x72, 0x6d, 0x2e, 0x6e, 0x75, 0x72,
	0x74, 0x75, 0x72, 0x65, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61,
	0x63, 0x74, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x22, 0x97, 0x01, 0x0a, 0x17, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x61, 0x72, 0x74,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a,
	0x09, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x64,
	0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x6e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x4f, 0x66, 0x44, 0x61, 0x79, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x6e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x4f, 0x66, 0x44, 0x61, 0x79, 0x73, 0x22, 0x66, 0x0a, 0x18, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4a, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x32, 0x2e, 0x66, 0x61, 0x72, 0x6d, 0x2e, 0x6e,
	0x75, 0x72, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x74,
	0x72, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x32, 0xb1, 0x04, 0x0a, 0x12, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x47,
	0x6f, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x73, 0x12, 0xa6, 0x01, 0x0a, 0x0f, 0x45,
	0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x12, 0x47,
	0x2e, 0x66, 0x61, 0x72, 0x6d, 0x2e, 0x6e, 0x75, 0x72, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x63, 0x6f,
	0x72, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x77, 0x6f, 0x72,
	0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x73, 0x2e, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x67, 0x6f,
	0x2e, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x48, 0x2e, 0x66, 0x61, 0x72, 0x6d, 0x2e, 0x6e,
	0x75, 0x72, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x74,
	0x72, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x73, 0x2e,
	0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x67, 0x6f, 0x2e, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74,
	0x65, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0xc7, 0x01, 0x0a, 0x1a, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x55,
	0x73, 0x65, 0x72, 0x4a, 0x6f, 0x75, 0x72, 0x6e, 0x65, 0x79, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69,
	0x67, 0x6e, 0x12, 0x52, 0x2e, 0x66, 0x61, 0x72, 0x6d, 0x2e, 0x6e, 0x75, 0x72, 0x74, 0x75, 0x72,
	0x65, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73,
	0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x73, 0x2e, 0x67, 0x65, 0x6e, 0x65, 0x72,
	0x61, 0x6c, 0x67, 0x6f, 0x2e, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72,
	0x4a, 0x6f, 0x75, 0x72, 0x6e, 0x65, 0x79, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x53, 0x2e, 0x66, 0x61, 0x72, 0x6d, 0x2e, 0x6e, 0x75,
	0x72, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72,
	0x61, 0x63, 0x74, 0x73, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x73, 0x2e, 0x67,
	0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x67, 0x6f, 0x2e, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65,
	0x55, 0x73, 0x65, 0x72, 0x4a, 0x6f, 0x75, 0x72, 0x6e, 0x65, 0x79, 0x43, 0x61, 0x6d, 0x70, 0x61,
	0x69, 0x67, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0xa7, 0x01,
	0x0a, 0x10, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x12, 0x48, 0x2e, 0x66, 0x61, 0x72, 0x6d, 0x2e, 0x6e, 0x75, 0x72, 0x74, 0x75, 0x72,
	0x65, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73,
	0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x73, 0x2e, 0x67, 0x65, 0x6e, 0x65, 0x72,
	0x61, 0x6c, 0x67, 0x6f, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x61, 0x72, 0x74, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x49, 0x2e, 0x66,
	0x61, 0x72, 0x6d, 0x2e, 0x6e, 0x75, 0x72, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x63, 0x6f, 0x72, 0x65,
	0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x66,
	0x6c, 0x6f, 0x77, 0x73, 0x2e, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x67, 0x6f, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x72, 0x0a, 0x2f, 0x66, 0x61, 0x72, 0x6d, 0x2e,
	0x6e, 0x75, 0x72, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x63, 0x6f, 0x6e,
	0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x73,
	0x2e, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x67, 0x6f, 0x50, 0x01, 0x5a, 0x3d, 0x63, 0x6f,
	0x64, 0x65, 0x2e, 0x6e, 0x75, 0x72, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x66, 0x61, 0x72, 0x6d, 0x2f,
	0x43, 0x6f, 0x72, 0x65, 0x2f, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x2f, 0x57,
	0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x73, 0x2f, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c,
	0x47, 0x6f, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_Workflows_GeneralGoWorkflows_general_go_workflows_proto_rawDescOnce sync.Once
	file_Workflows_GeneralGoWorkflows_general_go_workflows_proto_rawDescData = file_Workflows_GeneralGoWorkflows_general_go_workflows_proto_rawDesc
)

func file_Workflows_GeneralGoWorkflows_general_go_workflows_proto_rawDescGZIP() []byte {
	file_Workflows_GeneralGoWorkflows_general_go_workflows_proto_rawDescOnce.Do(func() {
		file_Workflows_GeneralGoWorkflows_general_go_workflows_proto_rawDescData = protoimpl.X.CompressGZIP(file_Workflows_GeneralGoWorkflows_general_go_workflows_proto_rawDescData)
	})
	return file_Workflows_GeneralGoWorkflows_general_go_workflows_proto_rawDescData
}

var file_Workflows_GeneralGoWorkflows_general_go_workflows_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_Workflows_GeneralGoWorkflows_general_go_workflows_proto_goTypes = []interface{}{
	(*ExecuteUserJourneyCampaignRequest)(nil),  // 0: farm.nurture.core.contracts.workflows.generalgo.ExecuteUserJourneyCampaignRequest
	(*ExecuteUserJourneyCampaignResponse)(nil), // 1: farm.nurture.core.contracts.workflows.generalgo.ExecuteUserJourneyCampaignResponse
	(*ExecuteCampaignRequest)(nil),             // 2: farm.nurture.core.contracts.workflows.generalgo.ExecuteCampaignRequest
	(*ExecuteCampaignResponse)(nil),            // 3: farm.nurture.core.contracts.workflows.generalgo.ExecuteCampaignResponse
	(*CreatePartitionsRequest)(nil),            // 4: farm.nurture.core.contracts.workflows.generalgo.CreatePartitionsRequest
	(*CreatePartitionsResponse)(nil),           // 5: farm.nurture.core.contracts.workflows.generalgo.CreatePartitionsResponse
	(*GoCommon.RequestHeaders)(nil),            // 6: farm.nurture.core.contracts.common.RequestHeaders
	(*durationpb.Duration)(nil),                // 7: google.protobuf.Duration
	(GoCommon.ResponseStatus)(0),               // 8: farm.nurture.core.contracts.common.ResponseStatus
	(GoCommon.CampaignScheduleType)(0),         // 9: farm.nurture.core.contracts.common.CampaignScheduleType
}
var file_Workflows_GeneralGoWorkflows_general_go_workflows_proto_depIdxs = []int32{
	6,  // 0: farm.nurture.core.contracts.workflows.generalgo.ExecuteUserJourneyCampaignRequest.requestHeaders:type_name -> farm.nurture.core.contracts.common.RequestHeaders
	7,  // 1: farm.nurture.core.contracts.workflows.generalgo.ExecuteUserJourneyCampaignRequest.waitDuration:type_name -> google.protobuf.Duration
	8,  // 2: farm.nurture.core.contracts.workflows.generalgo.ExecuteUserJourneyCampaignResponse.status:type_name -> farm.nurture.core.contracts.common.ResponseStatus
	9,  // 3: farm.nurture.core.contracts.workflows.generalgo.ExecuteCampaignRequest.campaignScheduleType:type_name -> farm.nurture.core.contracts.common.CampaignScheduleType
	7,  // 4: farm.nurture.core.contracts.workflows.generalgo.ExecuteCampaignRequest.inactionDuration:type_name -> google.protobuf.Duration
	8,  // 5: farm.nurture.core.contracts.workflows.generalgo.ExecuteCampaignResponse.status:type_name -> farm.nurture.core.contracts.common.ResponseStatus
	8,  // 6: farm.nurture.core.contracts.workflows.generalgo.CreatePartitionsResponse.status:type_name -> farm.nurture.core.contracts.common.ResponseStatus
	2,  // 7: farm.nurture.core.contracts.workflows.generalgo.GeneralGoWorkflows.ExecuteCampaign:input_type -> farm.nurture.core.contracts.workflows.generalgo.ExecuteCampaignRequest
	0,  // 8: farm.nurture.core.contracts.workflows.generalgo.GeneralGoWorkflows.ExecuteUserJourneyCampaign:input_type -> farm.nurture.core.contracts.workflows.generalgo.ExecuteUserJourneyCampaignRequest
	4,  // 9: farm.nurture.core.contracts.workflows.generalgo.GeneralGoWorkflows.CreatePartitions:input_type -> farm.nurture.core.contracts.workflows.generalgo.CreatePartitionsRequest
	3,  // 10: farm.nurture.core.contracts.workflows.generalgo.GeneralGoWorkflows.ExecuteCampaign:output_type -> farm.nurture.core.contracts.workflows.generalgo.ExecuteCampaignResponse
	1,  // 11: farm.nurture.core.contracts.workflows.generalgo.GeneralGoWorkflows.ExecuteUserJourneyCampaign:output_type -> farm.nurture.core.contracts.workflows.generalgo.ExecuteUserJourneyCampaignResponse
	5,  // 12: farm.nurture.core.contracts.workflows.generalgo.GeneralGoWorkflows.CreatePartitions:output_type -> farm.nurture.core.contracts.workflows.generalgo.CreatePartitionsResponse
	10, // [10:13] is the sub-list for method output_type
	7,  // [7:10] is the sub-list for method input_type
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { file_Workflows_GeneralGoWorkflows_general_go_workflows_proto_init() }
func file_Workflows_GeneralGoWorkflows_general_go_workflows_proto_init() {
	if File_Workflows_GeneralGoWorkflows_general_go_workflows_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_Workflows_GeneralGoWorkflows_general_go_workflows_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExecuteUserJourneyCampaignRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Workflows_GeneralGoWorkflows_general_go_workflows_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExecuteUserJourneyCampaignResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Workflows_GeneralGoWorkflows_general_go_workflows_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExecuteCampaignRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Workflows_GeneralGoWorkflows_general_go_workflows_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExecuteCampaignResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Workflows_GeneralGoWorkflows_general_go_workflows_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreatePartitionsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Workflows_GeneralGoWorkflows_general_go_workflows_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreatePartitionsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_Workflows_GeneralGoWorkflows_general_go_workflows_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_Workflows_GeneralGoWorkflows_general_go_workflows_proto_goTypes,
		DependencyIndexes: file_Workflows_GeneralGoWorkflows_general_go_workflows_proto_depIdxs,
		MessageInfos:      file_Workflows_GeneralGoWorkflows_general_go_workflows_proto_msgTypes,
	}.Build()
	File_Workflows_GeneralGoWorkflows_general_go_workflows_proto = out.File
	file_Workflows_GeneralGoWorkflows_general_go_workflows_proto_rawDesc = nil
	file_Workflows_GeneralGoWorkflows_general_go_workflows_proto_goTypes = nil
	file_Workflows_GeneralGoWorkflows_general_go_workflows_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// GeneralGoWorkflowsClient is the client API for GeneralGoWorkflows service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type GeneralGoWorkflowsClient interface {
	ExecuteCampaign(ctx context.Context, in *ExecuteCampaignRequest, opts ...grpc.CallOption) (*ExecuteCampaignResponse, error)
	ExecuteUserJourneyCampaign(ctx context.Context, in *ExecuteUserJourneyCampaignRequest, opts ...grpc.CallOption) (*ExecuteUserJourneyCampaignResponse, error)
	CreatePartitions(ctx context.Context, in *CreatePartitionsRequest, opts ...grpc.CallOption) (*CreatePartitionsResponse, error)
}

type generalGoWorkflowsClient struct {
	cc grpc.ClientConnInterface
}

func NewGeneralGoWorkflowsClient(cc grpc.ClientConnInterface) GeneralGoWorkflowsClient {
	return &generalGoWorkflowsClient{cc}
}

func (c *generalGoWorkflowsClient) ExecuteCampaign(ctx context.Context, in *ExecuteCampaignRequest, opts ...grpc.CallOption) (*ExecuteCampaignResponse, error) {
	out := new(ExecuteCampaignResponse)
	err := c.cc.Invoke(ctx, "/farm.nurture.core.contracts.workflows.generalgo.GeneralGoWorkflows/ExecuteCampaign", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *generalGoWorkflowsClient) ExecuteUserJourneyCampaign(ctx context.Context, in *ExecuteUserJourneyCampaignRequest, opts ...grpc.CallOption) (*ExecuteUserJourneyCampaignResponse, error) {
	out := new(ExecuteUserJourneyCampaignResponse)
	err := c.cc.Invoke(ctx, "/farm.nurture.core.contracts.workflows.generalgo.GeneralGoWorkflows/ExecuteUserJourneyCampaign", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *generalGoWorkflowsClient) CreatePartitions(ctx context.Context, in *CreatePartitionsRequest, opts ...grpc.CallOption) (*CreatePartitionsResponse, error) {
	out := new(CreatePartitionsResponse)
	err := c.cc.Invoke(ctx, "/farm.nurture.core.contracts.workflows.generalgo.GeneralGoWorkflows/CreatePartitions", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// GeneralGoWorkflowsServer is the server API for GeneralGoWorkflows service.
type GeneralGoWorkflowsServer interface {
	ExecuteCampaign(context.Context, *ExecuteCampaignRequest) (*ExecuteCampaignResponse, error)
	ExecuteUserJourneyCampaign(context.Context, *ExecuteUserJourneyCampaignRequest) (*ExecuteUserJourneyCampaignResponse, error)
	CreatePartitions(context.Context, *CreatePartitionsRequest) (*CreatePartitionsResponse, error)
}

// UnimplementedGeneralGoWorkflowsServer can be embedded to have forward compatible implementations.
type UnimplementedGeneralGoWorkflowsServer struct {
}

func (*UnimplementedGeneralGoWorkflowsServer) ExecuteCampaign(context.Context, *ExecuteCampaignRequest) (*ExecuteCampaignResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ExecuteCampaign not implemented")
}
func (*UnimplementedGeneralGoWorkflowsServer) ExecuteUserJourneyCampaign(context.Context, *ExecuteUserJourneyCampaignRequest) (*ExecuteUserJourneyCampaignResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ExecuteUserJourneyCampaign not implemented")
}
func (*UnimplementedGeneralGoWorkflowsServer) CreatePartitions(context.Context, *CreatePartitionsRequest) (*CreatePartitionsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreatePartitions not implemented")
}

func RegisterGeneralGoWorkflowsServer(s *grpc.Server, srv GeneralGoWorkflowsServer) {
	s.RegisterService(&_GeneralGoWorkflows_serviceDesc, srv)
}

func _GeneralGoWorkflows_ExecuteCampaign_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ExecuteCampaignRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GeneralGoWorkflowsServer).ExecuteCampaign(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/farm.nurture.core.contracts.workflows.generalgo.GeneralGoWorkflows/ExecuteCampaign",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GeneralGoWorkflowsServer).ExecuteCampaign(ctx, req.(*ExecuteCampaignRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GeneralGoWorkflows_ExecuteUserJourneyCampaign_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ExecuteUserJourneyCampaignRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GeneralGoWorkflowsServer).ExecuteUserJourneyCampaign(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/farm.nurture.core.contracts.workflows.generalgo.GeneralGoWorkflows/ExecuteUserJourneyCampaign",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GeneralGoWorkflowsServer).ExecuteUserJourneyCampaign(ctx, req.(*ExecuteUserJourneyCampaignRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GeneralGoWorkflows_CreatePartitions_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreatePartitionsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GeneralGoWorkflowsServer).CreatePartitions(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/farm.nurture.core.contracts.workflows.generalgo.GeneralGoWorkflows/CreatePartitions",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GeneralGoWorkflowsServer).CreatePartitions(ctx, req.(*CreatePartitionsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _GeneralGoWorkflows_serviceDesc = grpc.ServiceDesc{
	ServiceName: "farm.nurture.core.contracts.workflows.generalgo.GeneralGoWorkflows",
	HandlerType: (*GeneralGoWorkflowsServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ExecuteCampaign",
			Handler:    _GeneralGoWorkflows_ExecuteCampaign_Handler,
		},
		{
			MethodName: "ExecuteUserJourneyCampaign",
			Handler:    _GeneralGoWorkflows_ExecuteUserJourneyCampaign_Handler,
		},
		{
			MethodName: "CreatePartitions",
			Handler:    _GeneralGoWorkflows_CreatePartitions_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "Workflows/GeneralGoWorkflows/general_go_workflows.proto",
}
