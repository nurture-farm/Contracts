// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.14.0
// source: Workflows/GeneralGoWorkflows/general_go_workflows.proto

package GeneralGoWorkflows

import (
	GoCommon "code.nurture.farm/Core/Contracts/Common/Gen/GoCommon"
	_ "code.nurture.farm/Core/Contracts/CommunicationEngine/Gen/GoCommunicationEngine"
	GoFeedbackService "code.nurture.farm/Core/Contracts/FeedbackService/Gen/GoFeedbackService"
	GoInsuranceService "code.nurture.farm/Core/Contracts/InsuranceService/Gen/GoInsuranceService"
	GoMachineService "code.nurture.farm/Core/Contracts/MachineService/Gen/GoMachineService"
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type Status int32

const (
	Status_NO_STATUS   Status = 0
	Status_IN_PROGRESS Status = 1
	Status_COMPLETED   Status = 2
	Status_FAILED      Status = 3
)

// Enum value maps for Status.
var (
	Status_name = map[int32]string{
		0: "NO_STATUS",
		1: "IN_PROGRESS",
		2: "COMPLETED",
		3: "FAILED",
	}
	Status_value = map[string]int32{
		"NO_STATUS":   0,
		"IN_PROGRESS": 1,
		"COMPLETED":   2,
		"FAILED":      3,
	}
)

func (x Status) Enum() *Status {
	p := new(Status)
	*p = x
	return p
}

func (x Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Status) Descriptor() protoreflect.EnumDescriptor {
	return file_Workflows_GeneralGoWorkflows_general_go_workflows_proto_enumTypes[0].Descriptor()
}

func (Status) Type() protoreflect.EnumType {
	return &file_Workflows_GeneralGoWorkflows_general_go_workflows_proto_enumTypes[0]
}

func (x Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Status.Descriptor instead.
func (Status) EnumDescriptor() ([]byte, []int) {
	return file_Workflows_GeneralGoWorkflows_general_go_workflows_proto_rawDescGZIP(), []int{0}
}

type ClearStaleCreatedOrderRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestHeaders *GoCommon.RequestHeaders `protobuf:"bytes,1,opt,name=requestHeaders,proto3" json:"requestHeaders,omitempty"`
}

func (x *ClearStaleCreatedOrderRequest) Reset() {
	*x = ClearStaleCreatedOrderRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Workflows_GeneralGoWorkflows_general_go_workflows_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClearStaleCreatedOrderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClearStaleCreatedOrderRequest) ProtoMessage() {}

func (x *ClearStaleCreatedOrderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Workflows_GeneralGoWorkflows_general_go_workflows_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClearStaleCreatedOrderRequest.ProtoReflect.Descriptor instead.
func (*ClearStaleCreatedOrderRequest) Descriptor() ([]byte, []int) {
	return file_Workflows_GeneralGoWorkflows_general_go_workflows_proto_rawDescGZIP(), []int{0}
}

func (x *ClearStaleCreatedOrderRequest) GetRequestHeaders() *GoCommon.RequestHeaders {
	if x != nil {
		return x.RequestHeaders
	}
	return nil
}

type ClearStaleCreatedOrderResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status GoCommon.ResponseStatus `protobuf:"varint,1,opt,name=status,proto3,enum=farm.nurture.core.contracts.common.ResponseStatus" json:"status,omitempty"`
}

func (x *ClearStaleCreatedOrderResponse) Reset() {
	*x = ClearStaleCreatedOrderResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Workflows_GeneralGoWorkflows_general_go_workflows_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClearStaleCreatedOrderResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClearStaleCreatedOrderResponse) ProtoMessage() {}

func (x *ClearStaleCreatedOrderResponse) ProtoReflect() protoreflect.Message {
	mi := &file_Workflows_GeneralGoWorkflows_general_go_workflows_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClearStaleCreatedOrderResponse.ProtoReflect.Descriptor instead.
func (*ClearStaleCreatedOrderResponse) Descriptor() ([]byte, []int) {
	return file_Workflows_GeneralGoWorkflows_general_go_workflows_proto_rawDescGZIP(), []int{1}
}

func (x *ClearStaleCreatedOrderResponse) GetStatus() GoCommon.ResponseStatus {
	if x != nil {
		return x.Status
	}
	return GoCommon.ResponseStatus_NO_RESPONSE_STATUS
}

type ScoreComputationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ScoringId int64 `protobuf:"varint,1,opt,name=scoring_id,json=scoringId,proto3" json:"scoring_id,omitempty"`
}

func (x *ScoreComputationRequest) Reset() {
	*x = ScoreComputationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Workflows_GeneralGoWorkflows_general_go_workflows_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScoreComputationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScoreComputationRequest) ProtoMessage() {}

func (x *ScoreComputationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Workflows_GeneralGoWorkflows_general_go_workflows_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScoreComputationRequest.ProtoReflect.Descriptor instead.
func (*ScoreComputationRequest) Descriptor() ([]byte, []int) {
	return file_Workflows_GeneralGoWorkflows_general_go_workflows_proto_rawDescGZIP(), []int{2}
}

func (x *ScoreComputationRequest) GetScoringId() int64 {
	if x != nil {
		return x.ScoringId
	}
	return 0
}

type ScoreComputationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status GoCommon.ResponseStatus `protobuf:"varint,1,opt,name=status,proto3,enum=farm.nurture.core.contracts.common.ResponseStatus" json:"status,omitempty"`
}

func (x *ScoreComputationResponse) Reset() {
	*x = ScoreComputationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Workflows_GeneralGoWorkflows_general_go_workflows_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScoreComputationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScoreComputationResponse) ProtoMessage() {}

func (x *ScoreComputationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_Workflows_GeneralGoWorkflows_general_go_workflows_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScoreComputationResponse.ProtoReflect.Descriptor instead.
func (*ScoreComputationResponse) Descriptor() ([]byte, []int) {
	return file_Workflows_GeneralGoWorkflows_general_go_workflows_proto_rawDescGZIP(), []int{3}
}

func (x *ScoreComputationResponse) GetStatus() GoCommon.ResponseStatus {
	if x != nil {
		return x.Status
	}
	return GoCommon.ResponseStatus_NO_RESPONSE_STATUS
}

type IotComputationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *IotComputationRequest) Reset() {
	*x = IotComputationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Workflows_GeneralGoWorkflows_general_go_workflows_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IotComputationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IotComputationRequest) ProtoMessage() {}

func (x *IotComputationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Workflows_GeneralGoWorkflows_general_go_workflows_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IotComputationRequest.ProtoReflect.Descriptor instead.
func (*IotComputationRequest) Descriptor() ([]byte, []int) {
	return file_Workflows_GeneralGoWorkflows_general_go_workflows_proto_rawDescGZIP(), []int{4}
}

type IotComputationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status GoCommon.ResponseStatus `protobuf:"varint,1,opt,name=status,proto3,enum=farm.nurture.core.contracts.common.ResponseStatus" json:"status,omitempty"`
}

func (x *IotComputationResponse) Reset() {
	*x = IotComputationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Workflows_GeneralGoWorkflows_general_go_workflows_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IotComputationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IotComputationResponse) ProtoMessage() {}

func (x *IotComputationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_Workflows_GeneralGoWorkflows_general_go_workflows_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IotComputationResponse.ProtoReflect.Descriptor instead.
func (*IotComputationResponse) Descriptor() ([]byte, []int) {
	return file_Workflows_GeneralGoWorkflows_general_go_workflows_proto_rawDescGZIP(), []int{5}
}

func (x *IotComputationResponse) GetStatus() GoCommon.ResponseStatus {
	if x != nil {
		return x.Status
	}
	return GoCommon.ResponseStatus_NO_RESPONSE_STATUS
}

type PostServiceFeedbackPNRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Actor        *GoCommon.ActorID           `protobuf:"bytes,1,opt,name=actor,proto3" json:"actor,omitempty"`
	LanguageCode GoCommon.LanguageCode       `protobuf:"varint,2,opt,name=languageCode,proto3,enum=farm.nurture.core.contracts.common.LanguageCode" json:"languageCode,omitempty"`
	ServiceName  string                      `protobuf:"bytes,3,opt,name=serviceName,proto3" json:"serviceName,omitempty"`
	ExternalType string                      `protobuf:"bytes,4,opt,name=externalType,proto3" json:"externalType,omitempty"`
	ExternalId   string                      `protobuf:"bytes,5,opt,name=externalId,proto3" json:"externalId,omitempty"`
	Feature      string                      `protobuf:"bytes,6,opt,name=feature,proto3" json:"feature,omitempty"`
	Namespace    GoFeedbackService.Namespace `protobuf:"varint,7,opt,name=namespace,proto3,enum=farm.nurture.core.contracts.feedback.Namespace" json:"namespace,omitempty"`
}

func (x *PostServiceFeedbackPNRequest) Reset() {
	*x = PostServiceFeedbackPNRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Workflows_GeneralGoWorkflows_general_go_workflows_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PostServiceFeedbackPNRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostServiceFeedbackPNRequest) ProtoMessage() {}

func (x *PostServiceFeedbackPNRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Workflows_GeneralGoWorkflows_general_go_workflows_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostServiceFeedbackPNRequest.ProtoReflect.Descriptor instead.
func (*PostServiceFeedbackPNRequest) Descriptor() ([]byte, []int) {
	return file_Workflows_GeneralGoWorkflows_general_go_workflows_proto_rawDescGZIP(), []int{6}
}

func (x *PostServiceFeedbackPNRequest) GetActor() *GoCommon.ActorID {
	if x != nil {
		return x.Actor
	}
	return nil
}

func (x *PostServiceFeedbackPNRequest) GetLanguageCode() GoCommon.LanguageCode {
	if x != nil {
		return x.LanguageCode
	}
	return GoCommon.LanguageCode_NO_LANGUAGE_CODE
}

func (x *PostServiceFeedbackPNRequest) GetServiceName() string {
	if x != nil {
		return x.ServiceName
	}
	return ""
}

func (x *PostServiceFeedbackPNRequest) GetExternalType() string {
	if x != nil {
		return x.ExternalType
	}
	return ""
}

func (x *PostServiceFeedbackPNRequest) GetExternalId() string {
	if x != nil {
		return x.ExternalId
	}
	return ""
}

func (x *PostServiceFeedbackPNRequest) GetFeature() string {
	if x != nil {
		return x.Feature
	}
	return ""
}

func (x *PostServiceFeedbackPNRequest) GetNamespace() GoFeedbackService.Namespace {
	if x != nil {
		return x.Namespace
	}
	return GoFeedbackService.Namespace_NO_NAMESPACE
}

type PostPusaSprayPopUpRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Actor        *GoCommon.ActorID           `protobuf:"bytes,1,opt,name=actor,proto3" json:"actor,omitempty"`
	LanguageCode GoCommon.LanguageCode       `protobuf:"varint,2,opt,name=languageCode,proto3,enum=farm.nurture.core.contracts.common.LanguageCode" json:"languageCode,omitempty"`
	ServiceName  string                      `protobuf:"bytes,3,opt,name=serviceName,proto3" json:"serviceName,omitempty"`
	ExternalType string                      `protobuf:"bytes,4,opt,name=externalType,proto3" json:"externalType,omitempty"`
	ExternalId   string                      `protobuf:"bytes,5,opt,name=externalId,proto3" json:"externalId,omitempty"`
	Namespace    GoFeedbackService.Namespace `protobuf:"varint,7,opt,name=namespace,proto3,enum=farm.nurture.core.contracts.feedback.Namespace" json:"namespace,omitempty"`
	EventId      int64                       `protobuf:"varint,8,opt,name=eventId,proto3" json:"eventId,omitempty"`
	FarmId       int64                       `protobuf:"varint,9,opt,name=farmId,proto3" json:"farmId,omitempty"`
}

func (x *PostPusaSprayPopUpRequest) Reset() {
	*x = PostPusaSprayPopUpRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Workflows_GeneralGoWorkflows_general_go_workflows_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PostPusaSprayPopUpRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostPusaSprayPopUpRequest) ProtoMessage() {}

func (x *PostPusaSprayPopUpRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Workflows_GeneralGoWorkflows_general_go_workflows_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostPusaSprayPopUpRequest.ProtoReflect.Descriptor instead.
func (*PostPusaSprayPopUpRequest) Descriptor() ([]byte, []int) {
	return file_Workflows_GeneralGoWorkflows_general_go_workflows_proto_rawDescGZIP(), []int{7}
}

func (x *PostPusaSprayPopUpRequest) GetActor() *GoCommon.ActorID {
	if x != nil {
		return x.Actor
	}
	return nil
}

func (x *PostPusaSprayPopUpRequest) GetLanguageCode() GoCommon.LanguageCode {
	if x != nil {
		return x.LanguageCode
	}
	return GoCommon.LanguageCode_NO_LANGUAGE_CODE
}

func (x *PostPusaSprayPopUpRequest) GetServiceName() string {
	if x != nil {
		return x.ServiceName
	}
	return ""
}

func (x *PostPusaSprayPopUpRequest) GetExternalType() string {
	if x != nil {
		return x.ExternalType
	}
	return ""
}

func (x *PostPusaSprayPopUpRequest) GetExternalId() string {
	if x != nil {
		return x.ExternalId
	}
	return ""
}

func (x *PostPusaSprayPopUpRequest) GetNamespace() GoFeedbackService.Namespace {
	if x != nil {
		return x.Namespace
	}
	return GoFeedbackService.Namespace_NO_NAMESPACE
}

func (x *PostPusaSprayPopUpRequest) GetEventId() int64 {
	if x != nil {
		return x.EventId
	}
	return 0
}

func (x *PostPusaSprayPopUpRequest) GetFarmId() int64 {
	if x != nil {
		return x.FarmId
	}
	return 0
}

type PostServiceFeedbackPNResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status GoCommon.ResponseStatus `protobuf:"varint,1,opt,name=status,proto3,enum=farm.nurture.core.contracts.common.ResponseStatus" json:"status,omitempty"`
}

func (x *PostServiceFeedbackPNResponse) Reset() {
	*x = PostServiceFeedbackPNResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Workflows_GeneralGoWorkflows_general_go_workflows_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PostServiceFeedbackPNResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostServiceFeedbackPNResponse) ProtoMessage() {}

func (x *PostServiceFeedbackPNResponse) ProtoReflect() protoreflect.Message {
	mi := &file_Workflows_GeneralGoWorkflows_general_go_workflows_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostServiceFeedbackPNResponse.ProtoReflect.Descriptor instead.
func (*PostServiceFeedbackPNResponse) Descriptor() ([]byte, []int) {
	return file_Workflows_GeneralGoWorkflows_general_go_workflows_proto_rawDescGZIP(), []int{8}
}

func (x *PostServiceFeedbackPNResponse) GetStatus() GoCommon.ResponseStatus {
	if x != nil {
		return x.Status
	}
	return GoCommon.ResponseStatus_NO_RESPONSE_STATUS
}

type PostPusaSprayPopUpResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status GoCommon.ResponseStatus `protobuf:"varint,1,opt,name=status,proto3,enum=farm.nurture.core.contracts.common.ResponseStatus" json:"status,omitempty"`
}

func (x *PostPusaSprayPopUpResponse) Reset() {
	*x = PostPusaSprayPopUpResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Workflows_GeneralGoWorkflows_general_go_workflows_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PostPusaSprayPopUpResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostPusaSprayPopUpResponse) ProtoMessage() {}

func (x *PostPusaSprayPopUpResponse) ProtoReflect() protoreflect.Message {
	mi := &file_Workflows_GeneralGoWorkflows_general_go_workflows_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostPusaSprayPopUpResponse.ProtoReflect.Descriptor instead.
func (*PostPusaSprayPopUpResponse) Descriptor() ([]byte, []int) {
	return file_Workflows_GeneralGoWorkflows_general_go_workflows_proto_rawDescGZIP(), []int{9}
}

func (x *PostPusaSprayPopUpResponse) GetStatus() GoCommon.ResponseStatus {
	if x != nil {
		return x.Status
	}
	return GoCommon.ResponseStatus_NO_RESPONSE_STATUS
}

type ExecuteUserJourneyCampaignRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestHeaders     *GoCommon.RequestHeaders `protobuf:"bytes,1,opt,name=requestHeaders,proto3" json:"requestHeaders,omitempty"`
	CampaignId         int64                    `protobuf:"varint,2,opt,name=campaignId,proto3" json:"campaignId,omitempty"`
	EngagementVertexId int64                    `protobuf:"varint,3,opt,name=engagementVertexId,proto3" json:"engagementVertexId,omitempty"`
	ReferenceId        string                   `protobuf:"bytes,4,opt,name=referenceId,proto3" json:"referenceId,omitempty"`
	WaitDuration       *durationpb.Duration     `protobuf:"bytes,5,opt,name=waitDuration,proto3" json:"waitDuration,omitempty"`
}

func (x *ExecuteUserJourneyCampaignRequest) Reset() {
	*x = ExecuteUserJourneyCampaignRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Workflows_GeneralGoWorkflows_general_go_workflows_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExecuteUserJourneyCampaignRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecuteUserJourneyCampaignRequest) ProtoMessage() {}

func (x *ExecuteUserJourneyCampaignRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Workflows_GeneralGoWorkflows_general_go_workflows_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecuteUserJourneyCampaignRequest.ProtoReflect.Descriptor instead.
func (*ExecuteUserJourneyCampaignRequest) Descriptor() ([]byte, []int) {
	return file_Workflows_GeneralGoWorkflows_general_go_workflows_proto_rawDescGZIP(), []int{10}
}

func (x *ExecuteUserJourneyCampaignRequest) GetRequestHeaders() *GoCommon.RequestHeaders {
	if x != nil {
		return x.RequestHeaders
	}
	return nil
}

func (x *ExecuteUserJourneyCampaignRequest) GetCampaignId() int64 {
	if x != nil {
		return x.CampaignId
	}
	return 0
}

func (x *ExecuteUserJourneyCampaignRequest) GetEngagementVertexId() int64 {
	if x != nil {
		return x.EngagementVertexId
	}
	return 0
}

func (x *ExecuteUserJourneyCampaignRequest) GetReferenceId() string {
	if x != nil {
		return x.ReferenceId
	}
	return ""
}

func (x *ExecuteUserJourneyCampaignRequest) GetWaitDuration() *durationpb.Duration {
	if x != nil {
		return x.WaitDuration
	}
	return nil
}

type ExecuteUserJourneyCampaignResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status GoCommon.ResponseStatus `protobuf:"varint,1,opt,name=status,proto3,enum=farm.nurture.core.contracts.common.ResponseStatus" json:"status,omitempty"`
}

func (x *ExecuteUserJourneyCampaignResponse) Reset() {
	*x = ExecuteUserJourneyCampaignResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Workflows_GeneralGoWorkflows_general_go_workflows_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExecuteUserJourneyCampaignResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecuteUserJourneyCampaignResponse) ProtoMessage() {}

func (x *ExecuteUserJourneyCampaignResponse) ProtoReflect() protoreflect.Message {
	mi := &file_Workflows_GeneralGoWorkflows_general_go_workflows_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecuteUserJourneyCampaignResponse.ProtoReflect.Descriptor instead.
func (*ExecuteUserJourneyCampaignResponse) Descriptor() ([]byte, []int) {
	return file_Workflows_GeneralGoWorkflows_general_go_workflows_proto_rawDescGZIP(), []int{11}
}

func (x *ExecuteUserJourneyCampaignResponse) GetStatus() GoCommon.ResponseStatus {
	if x != nil {
		return x.Status
	}
	return GoCommon.ResponseStatus_NO_RESPONSE_STATUS
}

type ExecuteCampaignRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CampaignId           int64                         `protobuf:"varint,1,opt,name=campaign_id,json=campaignId,proto3" json:"campaign_id,omitempty"`
	CampaignScheduleType GoCommon.CampaignScheduleType `protobuf:"varint,2,opt,name=campaignScheduleType,proto3,enum=farm.nurture.core.contracts.common.CampaignScheduleType" json:"campaignScheduleType,omitempty"`
	InactionDuration     *durationpb.Duration          `protobuf:"bytes,3,opt,name=inactionDuration,proto3" json:"inactionDuration,omitempty"`
}

func (x *ExecuteCampaignRequest) Reset() {
	*x = ExecuteCampaignRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Workflows_GeneralGoWorkflows_general_go_workflows_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExecuteCampaignRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecuteCampaignRequest) ProtoMessage() {}

func (x *ExecuteCampaignRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Workflows_GeneralGoWorkflows_general_go_workflows_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecuteCampaignRequest.ProtoReflect.Descriptor instead.
func (*ExecuteCampaignRequest) Descriptor() ([]byte, []int) {
	return file_Workflows_GeneralGoWorkflows_general_go_workflows_proto_rawDescGZIP(), []int{12}
}

func (x *ExecuteCampaignRequest) GetCampaignId() int64 {
	if x != nil {
		return x.CampaignId
	}
	return 0
}

func (x *ExecuteCampaignRequest) GetCampaignScheduleType() GoCommon.CampaignScheduleType {
	if x != nil {
		return x.CampaignScheduleType
	}
	return GoCommon.CampaignScheduleType_NO_CAMPAIGN_SCHEDULE_TYPE
}

func (x *ExecuteCampaignRequest) GetInactionDuration() *durationpb.Duration {
	if x != nil {
		return x.InactionDuration
	}
	return nil
}

type ExecuteCampaignResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status GoCommon.ResponseStatus `protobuf:"varint,1,opt,name=status,proto3,enum=farm.nurture.core.contracts.common.ResponseStatus" json:"status,omitempty"`
}

func (x *ExecuteCampaignResponse) Reset() {
	*x = ExecuteCampaignResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Workflows_GeneralGoWorkflows_general_go_workflows_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExecuteCampaignResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecuteCampaignResponse) ProtoMessage() {}

func (x *ExecuteCampaignResponse) ProtoReflect() protoreflect.Message {
	mi := &file_Workflows_GeneralGoWorkflows_general_go_workflows_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecuteCampaignResponse.ProtoReflect.Descriptor instead.
func (*ExecuteCampaignResponse) Descriptor() ([]byte, []int) {
	return file_Workflows_GeneralGoWorkflows_general_go_workflows_proto_rawDescGZIP(), []int{13}
}

func (x *ExecuteCampaignResponse) GetStatus() GoCommon.ResponseStatus {
	if x != nil {
		return x.Status
	}
	return GoCommon.ResponseStatus_NO_RESPONSE_STATUS
}

type RefreshUserContentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Actor         *GoCommon.ActorID       `protobuf:"bytes,1,opt,name=actor,proto3" json:"actor,omitempty"`
	LanguageCodes []GoCommon.LanguageCode `protobuf:"varint,2,rep,packed,name=languageCodes,proto3,enum=farm.nurture.core.contracts.common.LanguageCode" json:"languageCodes,omitempty"`
	Latitude      float64                 `protobuf:"fixed64,6,opt,name=latitude,proto3" json:"latitude,omitempty"`
	Longitude     float64                 `protobuf:"fixed64,7,opt,name=longitude,proto3" json:"longitude,omitempty"`
}

func (x *RefreshUserContentRequest) Reset() {
	*x = RefreshUserContentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Workflows_GeneralGoWorkflows_general_go_workflows_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RefreshUserContentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RefreshUserContentRequest) ProtoMessage() {}

func (x *RefreshUserContentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Workflows_GeneralGoWorkflows_general_go_workflows_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RefreshUserContentRequest.ProtoReflect.Descriptor instead.
func (*RefreshUserContentRequest) Descriptor() ([]byte, []int) {
	return file_Workflows_GeneralGoWorkflows_general_go_workflows_proto_rawDescGZIP(), []int{14}
}

func (x *RefreshUserContentRequest) GetActor() *GoCommon.ActorID {
	if x != nil {
		return x.Actor
	}
	return nil
}

func (x *RefreshUserContentRequest) GetLanguageCodes() []GoCommon.LanguageCode {
	if x != nil {
		return x.LanguageCodes
	}
	return nil
}

func (x *RefreshUserContentRequest) GetLatitude() float64 {
	if x != nil {
		return x.Latitude
	}
	return 0
}

func (x *RefreshUserContentRequest) GetLongitude() float64 {
	if x != nil {
		return x.Longitude
	}
	return 0
}

type RefreshUserContentResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status     GoCommon.ResponseStatus `protobuf:"varint,1,opt,name=status,proto3,enum=farm.nurture.core.contracts.common.ResponseStatus" json:"status,omitempty"`
	ContentIds []int64                 `protobuf:"varint,2,rep,packed,name=contentIds,proto3" json:"contentIds,omitempty"`
}

func (x *RefreshUserContentResponse) Reset() {
	*x = RefreshUserContentResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Workflows_GeneralGoWorkflows_general_go_workflows_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RefreshUserContentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RefreshUserContentResponse) ProtoMessage() {}

func (x *RefreshUserContentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_Workflows_GeneralGoWorkflows_general_go_workflows_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RefreshUserContentResponse.ProtoReflect.Descriptor instead.
func (*RefreshUserContentResponse) Descriptor() ([]byte, []int) {
	return file_Workflows_GeneralGoWorkflows_general_go_workflows_proto_rawDescGZIP(), []int{15}
}

func (x *RefreshUserContentResponse) GetStatus() GoCommon.ResponseStatus {
	if x != nil {
		return x.Status
	}
	return GoCommon.ResponseStatus_NO_RESPONSE_STATUS
}

func (x *RefreshUserContentResponse) GetContentIds() []int64 {
	if x != nil {
		return x.ContentIds
	}
	return nil
}

type PreventiveMaintenanceTriggerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PreventiveMaintenanceTriggerRequest) Reset() {
	*x = PreventiveMaintenanceTriggerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Workflows_GeneralGoWorkflows_general_go_workflows_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PreventiveMaintenanceTriggerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PreventiveMaintenanceTriggerRequest) ProtoMessage() {}

func (x *PreventiveMaintenanceTriggerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Workflows_GeneralGoWorkflows_general_go_workflows_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PreventiveMaintenanceTriggerRequest.ProtoReflect.Descriptor instead.
func (*PreventiveMaintenanceTriggerRequest) Descriptor() ([]byte, []int) {
	return file_Workflows_GeneralGoWorkflows_general_go_workflows_proto_rawDescGZIP(), []int{16}
}

type PreventiveMaintenanceTriggerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status GoCommon.ResponseStatus `protobuf:"varint,1,opt,name=status,proto3,enum=farm.nurture.core.contracts.common.ResponseStatus" json:"status,omitempty"`
}

func (x *PreventiveMaintenanceTriggerResponse) Reset() {
	*x = PreventiveMaintenanceTriggerResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Workflows_GeneralGoWorkflows_general_go_workflows_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PreventiveMaintenanceTriggerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PreventiveMaintenanceTriggerResponse) ProtoMessage() {}

func (x *PreventiveMaintenanceTriggerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_Workflows_GeneralGoWorkflows_general_go_workflows_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PreventiveMaintenanceTriggerResponse.ProtoReflect.Descriptor instead.
func (*PreventiveMaintenanceTriggerResponse) Descriptor() ([]byte, []int) {
	return file_Workflows_GeneralGoWorkflows_general_go_workflows_proto_rawDescGZIP(), []int{17}
}

func (x *PreventiveMaintenanceTriggerResponse) GetStatus() GoCommon.ResponseStatus {
	if x != nil {
		return x.Status
	}
	return GoCommon.ResponseStatus_NO_RESPONSE_STATUS
}

type UpdateActorsMachinePreventiveMaintenanceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActorDetails                   []*GoCommon.ActorID                          `protobuf:"bytes,1,rep,name=actorDetails,proto3" json:"actorDetails,omitempty"`
	PreventiveMaintenanceId        int32                                        `protobuf:"varint,2,opt,name=preventiveMaintenanceId,proto3" json:"preventiveMaintenanceId,omitempty"`
	MachineId                      int64                                        `protobuf:"varint,3,opt,name=machineId,proto3" json:"machineId,omitempty"`
	MachinePreventiveMaintenanceId int64                                        `protobuf:"varint,4,opt,name=machinePreventiveMaintenanceId,proto3" json:"machinePreventiveMaintenanceId,omitempty"`
	PmStatus                       GoMachineService.PreventiveMaintenanceStatus `protobuf:"varint,5,opt,name=pmStatus,proto3,enum=farm.nurture.core.contracts.ms.PreventiveMaintenanceStatus" json:"pmStatus,omitempty"`
}

func (x *UpdateActorsMachinePreventiveMaintenanceRequest) Reset() {
	*x = UpdateActorsMachinePreventiveMaintenanceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Workflows_GeneralGoWorkflows_general_go_workflows_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateActorsMachinePreventiveMaintenanceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateActorsMachinePreventiveMaintenanceRequest) ProtoMessage() {}

func (x *UpdateActorsMachinePreventiveMaintenanceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Workflows_GeneralGoWorkflows_general_go_workflows_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateActorsMachinePreventiveMaintenanceRequest.ProtoReflect.Descriptor instead.
func (*UpdateActorsMachinePreventiveMaintenanceRequest) Descriptor() ([]byte, []int) {
	return file_Workflows_GeneralGoWorkflows_general_go_workflows_proto_rawDescGZIP(), []int{18}
}

func (x *UpdateActorsMachinePreventiveMaintenanceRequest) GetActorDetails() []*GoCommon.ActorID {
	if x != nil {
		return x.ActorDetails
	}
	return nil
}

func (x *UpdateActorsMachinePreventiveMaintenanceRequest) GetPreventiveMaintenanceId() int32 {
	if x != nil {
		return x.PreventiveMaintenanceId
	}
	return 0
}

func (x *UpdateActorsMachinePreventiveMaintenanceRequest) GetMachineId() int64 {
	if x != nil {
		return x.MachineId
	}
	return 0
}

func (x *UpdateActorsMachinePreventiveMaintenanceRequest) GetMachinePreventiveMaintenanceId() int64 {
	if x != nil {
		return x.MachinePreventiveMaintenanceId
	}
	return 0
}

func (x *UpdateActorsMachinePreventiveMaintenanceRequest) GetPmStatus() GoMachineService.PreventiveMaintenanceStatus {
	if x != nil {
		return x.PmStatus
	}
	return GoMachineService.PreventiveMaintenanceStatus_NO_PREVENTIVE_MAINTENANCE_STATUS
}

type UpdateActorsMachinePreventiveMaintenanceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status GoCommon.ResponseStatus `protobuf:"varint,1,opt,name=status,proto3,enum=farm.nurture.core.contracts.common.ResponseStatus" json:"status,omitempty"`
}

func (x *UpdateActorsMachinePreventiveMaintenanceResponse) Reset() {
	*x = UpdateActorsMachinePreventiveMaintenanceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Workflows_GeneralGoWorkflows_general_go_workflows_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateActorsMachinePreventiveMaintenanceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateActorsMachinePreventiveMaintenanceResponse) ProtoMessage() {}

func (x *UpdateActorsMachinePreventiveMaintenanceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_Workflows_GeneralGoWorkflows_general_go_workflows_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateActorsMachinePreventiveMaintenanceResponse.ProtoReflect.Descriptor instead.
func (*UpdateActorsMachinePreventiveMaintenanceResponse) Descriptor() ([]byte, []int) {
	return file_Workflows_GeneralGoWorkflows_general_go_workflows_proto_rawDescGZIP(), []int{19}
}

func (x *UpdateActorsMachinePreventiveMaintenanceResponse) GetStatus() GoCommon.ResponseStatus {
	if x != nil {
		return x.Status
	}
	return GoCommon.ResponseStatus_NO_RESPONSE_STATUS
}

type RescheduleMachinePreventiveMaintenanceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MachineId                      int64 `protobuf:"varint,1,opt,name=machineId,proto3" json:"machineId,omitempty"`
	Date                           int64 `protobuf:"varint,2,opt,name=date,proto3" json:"date,omitempty"`
	MachinePreventiveMaintenanceId int64 `protobuf:"varint,3,opt,name=machinePreventiveMaintenanceId,proto3" json:"machinePreventiveMaintenanceId,omitempty"`
}

func (x *RescheduleMachinePreventiveMaintenanceRequest) Reset() {
	*x = RescheduleMachinePreventiveMaintenanceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Workflows_GeneralGoWorkflows_general_go_workflows_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RescheduleMachinePreventiveMaintenanceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RescheduleMachinePreventiveMaintenanceRequest) ProtoMessage() {}

func (x *RescheduleMachinePreventiveMaintenanceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Workflows_GeneralGoWorkflows_general_go_workflows_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RescheduleMachinePreventiveMaintenanceRequest.ProtoReflect.Descriptor instead.
func (*RescheduleMachinePreventiveMaintenanceRequest) Descriptor() ([]byte, []int) {
	return file_Workflows_GeneralGoWorkflows_general_go_workflows_proto_rawDescGZIP(), []int{20}
}

func (x *RescheduleMachinePreventiveMaintenanceRequest) GetMachineId() int64 {
	if x != nil {
		return x.MachineId
	}
	return 0
}

func (x *RescheduleMachinePreventiveMaintenanceRequest) GetDate() int64 {
	if x != nil {
		return x.Date
	}
	return 0
}

func (x *RescheduleMachinePreventiveMaintenanceRequest) GetMachinePreventiveMaintenanceId() int64 {
	if x != nil {
		return x.MachinePreventiveMaintenanceId
	}
	return 0
}

type RescheduleMachinePreventiveMaintenanceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status GoCommon.ResponseStatus `protobuf:"varint,1,opt,name=status,proto3,enum=farm.nurture.core.contracts.common.ResponseStatus" json:"status,omitempty"`
}

func (x *RescheduleMachinePreventiveMaintenanceResponse) Reset() {
	*x = RescheduleMachinePreventiveMaintenanceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Workflows_GeneralGoWorkflows_general_go_workflows_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RescheduleMachinePreventiveMaintenanceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RescheduleMachinePreventiveMaintenanceResponse) ProtoMessage() {}

func (x *RescheduleMachinePreventiveMaintenanceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_Workflows_GeneralGoWorkflows_general_go_workflows_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RescheduleMachinePreventiveMaintenanceResponse.ProtoReflect.Descriptor instead.
func (*RescheduleMachinePreventiveMaintenanceResponse) Descriptor() ([]byte, []int) {
	return file_Workflows_GeneralGoWorkflows_general_go_workflows_proto_rawDescGZIP(), []int{21}
}

func (x *RescheduleMachinePreventiveMaintenanceResponse) GetStatus() GoCommon.ResponseStatus {
	if x != nil {
		return x.Status
	}
	return GoCommon.ResponseStatus_NO_RESPONSE_STATUS
}

type HandoverOtpRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Otp          string            `protobuf:"bytes,1,opt,name=otp,proto3" json:"otp,omitempty"`
	ActorDetails *GoCommon.ActorID `protobuf:"bytes,2,opt,name=actorDetails,proto3" json:"actorDetails,omitempty"`
	MobileNumber string            `protobuf:"bytes,3,opt,name=mobileNumber,proto3" json:"mobileNumber,omitempty"`
}

func (x *HandoverOtpRequest) Reset() {
	*x = HandoverOtpRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Workflows_GeneralGoWorkflows_general_go_workflows_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HandoverOtpRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HandoverOtpRequest) ProtoMessage() {}

func (x *HandoverOtpRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Workflows_GeneralGoWorkflows_general_go_workflows_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HandoverOtpRequest.ProtoReflect.Descriptor instead.
func (*HandoverOtpRequest) Descriptor() ([]byte, []int) {
	return file_Workflows_GeneralGoWorkflows_general_go_workflows_proto_rawDescGZIP(), []int{22}
}

func (x *HandoverOtpRequest) GetOtp() string {
	if x != nil {
		return x.Otp
	}
	return ""
}

func (x *HandoverOtpRequest) GetActorDetails() *GoCommon.ActorID {
	if x != nil {
		return x.ActorDetails
	}
	return nil
}

func (x *HandoverOtpRequest) GetMobileNumber() string {
	if x != nil {
		return x.MobileNumber
	}
	return ""
}

type HandoverOtpResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status GoCommon.ResponseStatus `protobuf:"varint,1,opt,name=status,proto3,enum=farm.nurture.core.contracts.common.ResponseStatus" json:"status,omitempty"`
}

func (x *HandoverOtpResponse) Reset() {
	*x = HandoverOtpResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Workflows_GeneralGoWorkflows_general_go_workflows_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HandoverOtpResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HandoverOtpResponse) ProtoMessage() {}

func (x *HandoverOtpResponse) ProtoReflect() protoreflect.Message {
	mi := &file_Workflows_GeneralGoWorkflows_general_go_workflows_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HandoverOtpResponse.ProtoReflect.Descriptor instead.
func (*HandoverOtpResponse) Descriptor() ([]byte, []int) {
	return file_Workflows_GeneralGoWorkflows_general_go_workflows_proto_rawDescGZIP(), []int{23}
}

func (x *HandoverOtpResponse) GetStatus() GoCommon.ResponseStatus {
	if x != nil {
		return x.Status
	}
	return GoCommon.ResponseStatus_NO_RESPONSE_STATUS
}

type Attributes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key   string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *Attributes) Reset() {
	*x = Attributes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Workflows_GeneralGoWorkflows_general_go_workflows_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Attributes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Attributes) ProtoMessage() {}

func (x *Attributes) ProtoReflect() protoreflect.Message {
	mi := &file_Workflows_GeneralGoWorkflows_general_go_workflows_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Attributes.ProtoReflect.Descriptor instead.
func (*Attributes) Descriptor() ([]byte, []int) {
	return file_Workflows_GeneralGoWorkflows_general_go_workflows_proto_rawDescGZIP(), []int{24}
}

func (x *Attributes) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *Attributes) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type OfferRewardRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                 int64                   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	UserDetails        *GoCommon.ActorID       `protobuf:"bytes,2,opt,name=userDetails,proto3" json:"userDetails,omitempty"`
	UserActionType     GoCommon.UserActionType `protobuf:"varint,3,opt,name=userActionType,proto3,enum=farm.nurture.core.contracts.common.UserActionType" json:"userActionType,omitempty"`
	RewardType         GoCommon.RewardType     `protobuf:"varint,4,opt,name=rewardType,proto3,enum=farm.nurture.core.contracts.common.RewardType" json:"rewardType,omitempty"`
	RewardPoints       int32                   `protobuf:"varint,5,opt,name=rewardPoints,proto3" json:"rewardPoints,omitempty"`
	AllottedTime       *timestamppb.Timestamp  `protobuf:"bytes,6,opt,name=allottedTime,proto3" json:"allottedTime,omitempty"`
	Source             string                  `protobuf:"bytes,7,opt,name=source,proto3" json:"source,omitempty"`
	SourceReferenceId  string                  `protobuf:"bytes,8,opt,name=sourceReferenceId,proto3" json:"sourceReferenceId,omitempty"`
	CorrectionId       string                  `protobuf:"bytes,9,opt,name=correctionId,proto3" json:"correctionId,omitempty"`
	ParentCorrectionId string                  `protobuf:"bytes,10,opt,name=parentCorrectionId,proto3" json:"parentCorrectionId,omitempty"`
	TitleKey           string                  `protobuf:"bytes,11,opt,name=titleKey,proto3" json:"titleKey,omitempty"`
	DescriptionKey     string                  `protobuf:"bytes,12,opt,name=descriptionKey,proto3" json:"descriptionKey,omitempty"`
	ValidFrom          *timestamppb.Timestamp  `protobuf:"bytes,13,opt,name=validFrom,proto3" json:"validFrom,omitempty"`
	ValidTo            *timestamppb.Timestamp  `protobuf:"bytes,14,opt,name=validTo,proto3" json:"validTo,omitempty"`
	Attributes         []*Attributes           `protobuf:"bytes,15,rep,name=attributes,proto3" json:"attributes,omitempty"`
	Status             Status                  `protobuf:"varint,16,opt,name=status,proto3,enum=farm.nurture.core.contracts.workflows.generalgo.Status" json:"status,omitempty"`
	CreatedAt          *timestamppb.Timestamp  `protobuf:"bytes,18,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	UpdatedAt          *timestamppb.Timestamp  `protobuf:"bytes,19,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
}

func (x *OfferRewardRequest) Reset() {
	*x = OfferRewardRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Workflows_GeneralGoWorkflows_general_go_workflows_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OfferRewardRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OfferRewardRequest) ProtoMessage() {}

func (x *OfferRewardRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Workflows_GeneralGoWorkflows_general_go_workflows_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OfferRewardRequest.ProtoReflect.Descriptor instead.
func (*OfferRewardRequest) Descriptor() ([]byte, []int) {
	return file_Workflows_GeneralGoWorkflows_general_go_workflows_proto_rawDescGZIP(), []int{25}
}

func (x *OfferRewardRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *OfferRewardRequest) GetUserDetails() *GoCommon.ActorID {
	if x != nil {
		return x.UserDetails
	}
	return nil
}

func (x *OfferRewardRequest) GetUserActionType() GoCommon.UserActionType {
	if x != nil {
		return x.UserActionType
	}
	return GoCommon.UserActionType_NO_USER_ACTION_TYPE
}

func (x *OfferRewardRequest) GetRewardType() GoCommon.RewardType {
	if x != nil {
		return x.RewardType
	}
	return GoCommon.RewardType_NO_REWARD_TYPE
}

func (x *OfferRewardRequest) GetRewardPoints() int32 {
	if x != nil {
		return x.RewardPoints
	}
	return 0
}

func (x *OfferRewardRequest) GetAllottedTime() *timestamppb.Timestamp {
	if x != nil {
		return x.AllottedTime
	}
	return nil
}

func (x *OfferRewardRequest) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

func (x *OfferRewardRequest) GetSourceReferenceId() string {
	if x != nil {
		return x.SourceReferenceId
	}
	return ""
}

func (x *OfferRewardRequest) GetCorrectionId() string {
	if x != nil {
		return x.CorrectionId
	}
	return ""
}

func (x *OfferRewardRequest) GetParentCorrectionId() string {
	if x != nil {
		return x.ParentCorrectionId
	}
	return ""
}

func (x *OfferRewardRequest) GetTitleKey() string {
	if x != nil {
		return x.TitleKey
	}
	return ""
}

func (x *OfferRewardRequest) GetDescriptionKey() string {
	if x != nil {
		return x.DescriptionKey
	}
	return ""
}

func (x *OfferRewardRequest) GetValidFrom() *timestamppb.Timestamp {
	if x != nil {
		return x.ValidFrom
	}
	return nil
}

func (x *OfferRewardRequest) GetValidTo() *timestamppb.Timestamp {
	if x != nil {
		return x.ValidTo
	}
	return nil
}

func (x *OfferRewardRequest) GetAttributes() []*Attributes {
	if x != nil {
		return x.Attributes
	}
	return nil
}

func (x *OfferRewardRequest) GetStatus() Status {
	if x != nil {
		return x.Status
	}
	return Status_NO_STATUS
}

func (x *OfferRewardRequest) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *OfferRewardRequest) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type OfferRewardResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status GoCommon.ResponseStatus `protobuf:"varint,1,opt,name=status,proto3,enum=farm.nurture.core.contracts.common.ResponseStatus" json:"status,omitempty"`
}

func (x *OfferRewardResponse) Reset() {
	*x = OfferRewardResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Workflows_GeneralGoWorkflows_general_go_workflows_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OfferRewardResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OfferRewardResponse) ProtoMessage() {}

func (x *OfferRewardResponse) ProtoReflect() protoreflect.Message {
	mi := &file_Workflows_GeneralGoWorkflows_general_go_workflows_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OfferRewardResponse.ProtoReflect.Descriptor instead.
func (*OfferRewardResponse) Descriptor() ([]byte, []int) {
	return file_Workflows_GeneralGoWorkflows_general_go_workflows_proto_rawDescGZIP(), []int{26}
}

func (x *OfferRewardResponse) GetStatus() GoCommon.ResponseStatus {
	if x != nil {
		return x.Status
	}
	return GoCommon.ResponseStatus_NO_RESPONSE_STATUS
}

type DiscountedSprayServiceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserDetails *GoCommon.ActorID `protobuf:"bytes,1,opt,name=userDetails,proto3" json:"userDetails,omitempty"`
	BookingId   int64             `protobuf:"varint,2,opt,name=bookingId,proto3" json:"bookingId,omitempty"`
	ServiceId   int64             `protobuf:"varint,3,opt,name=serviceId,proto3" json:"serviceId,omitempty"`
}

func (x *DiscountedSprayServiceRequest) Reset() {
	*x = DiscountedSprayServiceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Workflows_GeneralGoWorkflows_general_go_workflows_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DiscountedSprayServiceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DiscountedSprayServiceRequest) ProtoMessage() {}

func (x *DiscountedSprayServiceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Workflows_GeneralGoWorkflows_general_go_workflows_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DiscountedSprayServiceRequest.ProtoReflect.Descriptor instead.
func (*DiscountedSprayServiceRequest) Descriptor() ([]byte, []int) {
	return file_Workflows_GeneralGoWorkflows_general_go_workflows_proto_rawDescGZIP(), []int{27}
}

func (x *DiscountedSprayServiceRequest) GetUserDetails() *GoCommon.ActorID {
	if x != nil {
		return x.UserDetails
	}
	return nil
}

func (x *DiscountedSprayServiceRequest) GetBookingId() int64 {
	if x != nil {
		return x.BookingId
	}
	return 0
}

func (x *DiscountedSprayServiceRequest) GetServiceId() int64 {
	if x != nil {
		return x.ServiceId
	}
	return 0
}

type OfferInsuranceRewardRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserDetails      *GoCommon.ActorID      `protobuf:"bytes,1,opt,name=userDetails,proto3" json:"userDetails,omitempty"`
	Location         *GoCommon.Location     `protobuf:"bytes,2,opt,name=location,proto3" json:"location,omitempty"`
	PaymentMethod    GoCommon.PaymentMethod `protobuf:"varint,3,opt,name=paymentMethod,proto3,enum=farm.nurture.core.contracts.common.PaymentMethod" json:"paymentMethod,omitempty"`
	SchemeQuantities []int64                `protobuf:"varint,4,rep,packed,name=schemeQuantities,proto3" json:"schemeQuantities,omitempty"`
	OfferId          int64                  `protobuf:"varint,5,opt,name=offerId,proto3" json:"offerId,omitempty"`
	LanguageCode     GoCommon.LanguageCode  `protobuf:"varint,6,opt,name=languageCode,proto3,enum=farm.nurture.core.contracts.common.LanguageCode" json:"languageCode,omitempty"`
	Attributes       []*Attributes          `protobuf:"bytes,7,rep,name=attributes,proto3" json:"attributes,omitempty"`
	UserRewardId     int64                  `protobuf:"varint,8,opt,name=userRewardId,proto3" json:"userRewardId,omitempty"`
	RewardType       GoCommon.RewardType    `protobuf:"varint,9,opt,name=rewardType,proto3,enum=farm.nurture.core.contracts.common.RewardType" json:"rewardType,omitempty"`
}

func (x *OfferInsuranceRewardRequest) Reset() {
	*x = OfferInsuranceRewardRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Workflows_GeneralGoWorkflows_general_go_workflows_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OfferInsuranceRewardRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OfferInsuranceRewardRequest) ProtoMessage() {}

func (x *OfferInsuranceRewardRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Workflows_GeneralGoWorkflows_general_go_workflows_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OfferInsuranceRewardRequest.ProtoReflect.Descriptor instead.
func (*OfferInsuranceRewardRequest) Descriptor() ([]byte, []int) {
	return file_Workflows_GeneralGoWorkflows_general_go_workflows_proto_rawDescGZIP(), []int{28}
}

func (x *OfferInsuranceRewardRequest) GetUserDetails() *GoCommon.ActorID {
	if x != nil {
		return x.UserDetails
	}
	return nil
}

func (x *OfferInsuranceRewardRequest) GetLocation() *GoCommon.Location {
	if x != nil {
		return x.Location
	}
	return nil
}

func (x *OfferInsuranceRewardRequest) GetPaymentMethod() GoCommon.PaymentMethod {
	if x != nil {
		return x.PaymentMethod
	}
	return GoCommon.PaymentMethod_CASH
}

func (x *OfferInsuranceRewardRequest) GetSchemeQuantities() []int64 {
	if x != nil {
		return x.SchemeQuantities
	}
	return nil
}

func (x *OfferInsuranceRewardRequest) GetOfferId() int64 {
	if x != nil {
		return x.OfferId
	}
	return 0
}

func (x *OfferInsuranceRewardRequest) GetLanguageCode() GoCommon.LanguageCode {
	if x != nil {
		return x.LanguageCode
	}
	return GoCommon.LanguageCode_NO_LANGUAGE_CODE
}

func (x *OfferInsuranceRewardRequest) GetAttributes() []*Attributes {
	if x != nil {
		return x.Attributes
	}
	return nil
}

func (x *OfferInsuranceRewardRequest) GetUserRewardId() int64 {
	if x != nil {
		return x.UserRewardId
	}
	return 0
}

func (x *OfferInsuranceRewardRequest) GetRewardType() GoCommon.RewardType {
	if x != nil {
		return x.RewardType
	}
	return GoCommon.RewardType_NO_REWARD_TYPE
}

type OfferInsuranceRewardResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status GoCommon.ResponseStatus `protobuf:"varint,1,opt,name=status,proto3,enum=farm.nurture.core.contracts.common.ResponseStatus" json:"status,omitempty"`
}

func (x *OfferInsuranceRewardResponse) Reset() {
	*x = OfferInsuranceRewardResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Workflows_GeneralGoWorkflows_general_go_workflows_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OfferInsuranceRewardResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OfferInsuranceRewardResponse) ProtoMessage() {}

func (x *OfferInsuranceRewardResponse) ProtoReflect() protoreflect.Message {
	mi := &file_Workflows_GeneralGoWorkflows_general_go_workflows_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OfferInsuranceRewardResponse.ProtoReflect.Descriptor instead.
func (*OfferInsuranceRewardResponse) Descriptor() ([]byte, []int) {
	return file_Workflows_GeneralGoWorkflows_general_go_workflows_proto_rawDescGZIP(), []int{29}
}

func (x *OfferInsuranceRewardResponse) GetStatus() GoCommon.ResponseStatus {
	if x != nil {
		return x.Status
	}
	return GoCommon.ResponseStatus_NO_RESPONSE_STATUS
}

type CreatePartitionsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TableName    string `protobuf:"bytes,1,opt,name=tableName,proto3" json:"tableName,omitempty"`
	DatabaseName string `protobuf:"bytes,2,opt,name=databaseName,proto3" json:"databaseName,omitempty"`
	Bucket       string `protobuf:"bytes,3,opt,name=bucket,proto3" json:"bucket,omitempty"`
	NumberOfDays int64  `protobuf:"varint,4,opt,name=numberOfDays,proto3" json:"numberOfDays,omitempty"`
}

func (x *CreatePartitionsRequest) Reset() {
	*x = CreatePartitionsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Workflows_GeneralGoWorkflows_general_go_workflows_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreatePartitionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePartitionsRequest) ProtoMessage() {}

func (x *CreatePartitionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Workflows_GeneralGoWorkflows_general_go_workflows_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePartitionsRequest.ProtoReflect.Descriptor instead.
func (*CreatePartitionsRequest) Descriptor() ([]byte, []int) {
	return file_Workflows_GeneralGoWorkflows_general_go_workflows_proto_rawDescGZIP(), []int{30}
}

func (x *CreatePartitionsRequest) GetTableName() string {
	if x != nil {
		return x.TableName
	}
	return ""
}

func (x *CreatePartitionsRequest) GetDatabaseName() string {
	if x != nil {
		return x.DatabaseName
	}
	return ""
}

func (x *CreatePartitionsRequest) GetBucket() string {
	if x != nil {
		return x.Bucket
	}
	return ""
}

func (x *CreatePartitionsRequest) GetNumberOfDays() int64 {
	if x != nil {
		return x.NumberOfDays
	}
	return 0
}

type CreatePartitionsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status GoCommon.ResponseStatus `protobuf:"varint,1,opt,name=status,proto3,enum=farm.nurture.core.contracts.common.ResponseStatus" json:"status,omitempty"`
}

func (x *CreatePartitionsResponse) Reset() {
	*x = CreatePartitionsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Workflows_GeneralGoWorkflows_general_go_workflows_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreatePartitionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePartitionsResponse) ProtoMessage() {}

func (x *CreatePartitionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_Workflows_GeneralGoWorkflows_general_go_workflows_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePartitionsResponse.ProtoReflect.Descriptor instead.
func (*CreatePartitionsResponse) Descriptor() ([]byte, []int) {
	return file_Workflows_GeneralGoWorkflows_general_go_workflows_proto_rawDescGZIP(), []int{31}
}

func (x *CreatePartitionsResponse) GetStatus() GoCommon.ResponseStatus {
	if x != nil {
		return x.Status
	}
	return GoCommon.ResponseStatus_NO_RESPONSE_STATUS
}

type TriggerF2FPointExpiryCronRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CronExp      string `protobuf:"bytes,1,opt,name=cronExp,proto3" json:"cronExp,omitempty"`
	SegmentId    int64  `protobuf:"varint,2,opt,name=segmentId,proto3" json:"segmentId,omitempty"`
	ExpiryPoints int64  `protobuf:"varint,4,opt,name=expiryPoints,proto3" json:"expiryPoints,omitempty"`
}

func (x *TriggerF2FPointExpiryCronRequest) Reset() {
	*x = TriggerF2FPointExpiryCronRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Workflows_GeneralGoWorkflows_general_go_workflows_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TriggerF2FPointExpiryCronRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TriggerF2FPointExpiryCronRequest) ProtoMessage() {}

func (x *TriggerF2FPointExpiryCronRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Workflows_GeneralGoWorkflows_general_go_workflows_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TriggerF2FPointExpiryCronRequest.ProtoReflect.Descriptor instead.
func (*TriggerF2FPointExpiryCronRequest) Descriptor() ([]byte, []int) {
	return file_Workflows_GeneralGoWorkflows_general_go_workflows_proto_rawDescGZIP(), []int{32}
}

func (x *TriggerF2FPointExpiryCronRequest) GetCronExp() string {
	if x != nil {
		return x.CronExp
	}
	return ""
}

func (x *TriggerF2FPointExpiryCronRequest) GetSegmentId() int64 {
	if x != nil {
		return x.SegmentId
	}
	return 0
}

func (x *TriggerF2FPointExpiryCronRequest) GetExpiryPoints() int64 {
	if x != nil {
		return x.ExpiryPoints
	}
	return 0
}

type TriggerF2FPointExpiryCronResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status GoCommon.ResponseStatus `protobuf:"varint,1,opt,name=status,proto3,enum=farm.nurture.core.contracts.common.ResponseStatus" json:"status,omitempty"`
}

func (x *TriggerF2FPointExpiryCronResponse) Reset() {
	*x = TriggerF2FPointExpiryCronResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Workflows_GeneralGoWorkflows_general_go_workflows_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TriggerF2FPointExpiryCronResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TriggerF2FPointExpiryCronResponse) ProtoMessage() {}

func (x *TriggerF2FPointExpiryCronResponse) ProtoReflect() protoreflect.Message {
	mi := &file_Workflows_GeneralGoWorkflows_general_go_workflows_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TriggerF2FPointExpiryCronResponse.ProtoReflect.Descriptor instead.
func (*TriggerF2FPointExpiryCronResponse) Descriptor() ([]byte, []int) {
	return file_Workflows_GeneralGoWorkflows_general_go_workflows_proto_rawDescGZIP(), []int{33}
}

func (x *TriggerF2FPointExpiryCronResponse) GetStatus() GoCommon.ResponseStatus {
	if x != nil {
		return x.Status
	}
	return GoCommon.ResponseStatus_NO_RESPONSE_STATUS
}

type InsurancePurchaseEventRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActorId      *GoCommon.ActorID              `protobuf:"bytes,1,opt,name=actorId,proto3" json:"actorId,omitempty"`
	UserSchemeId int64                          `protobuf:"varint,2,opt,name=userSchemeId,proto3" json:"userSchemeId,omitempty"`
	ServiceType  GoInsuranceService.ServiceType `protobuf:"varint,3,opt,name=serviceType,proto3,enum=farm.nurture.core.contracts.InsuranceService.ServiceType" json:"serviceType,omitempty"`
}

func (x *InsurancePurchaseEventRequest) Reset() {
	*x = InsurancePurchaseEventRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Workflows_GeneralGoWorkflows_general_go_workflows_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InsurancePurchaseEventRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InsurancePurchaseEventRequest) ProtoMessage() {}

func (x *InsurancePurchaseEventRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Workflows_GeneralGoWorkflows_general_go_workflows_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InsurancePurchaseEventRequest.ProtoReflect.Descriptor instead.
func (*InsurancePurchaseEventRequest) Descriptor() ([]byte, []int) {
	return file_Workflows_GeneralGoWorkflows_general_go_workflows_proto_rawDescGZIP(), []int{34}
}

func (x *InsurancePurchaseEventRequest) GetActorId() *GoCommon.ActorID {
	if x != nil {
		return x.ActorId
	}
	return nil
}

func (x *InsurancePurchaseEventRequest) GetUserSchemeId() int64 {
	if x != nil {
		return x.UserSchemeId
	}
	return 0
}

func (x *InsurancePurchaseEventRequest) GetServiceType() GoInsuranceService.ServiceType {
	if x != nil {
		return x.ServiceType
	}
	return GoInsuranceService.ServiceType_WEATHER_KAVACH
}

type InsurancePurchaseEventResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status GoCommon.ResponseStatus `protobuf:"varint,1,opt,name=status,proto3,enum=farm.nurture.core.contracts.common.ResponseStatus" json:"status,omitempty"`
}

func (x *InsurancePurchaseEventResponse) Reset() {
	*x = InsurancePurchaseEventResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Workflows_GeneralGoWorkflows_general_go_workflows_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InsurancePurchaseEventResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InsurancePurchaseEventResponse) ProtoMessage() {}

func (x *InsurancePurchaseEventResponse) ProtoReflect() protoreflect.Message {
	mi := &file_Workflows_GeneralGoWorkflows_general_go_workflows_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InsurancePurchaseEventResponse.ProtoReflect.Descriptor instead.
func (*InsurancePurchaseEventResponse) Descriptor() ([]byte, []int) {
	return file_Workflows_GeneralGoWorkflows_general_go_workflows_proto_rawDescGZIP(), []int{35}
}

func (x *InsurancePurchaseEventResponse) GetStatus() GoCommon.ResponseStatus {
	if x != nil {
		return x.Status
	}
	return GoCommon.ResponseStatus_NO_RESPONSE_STATUS
}

var File_Workflows_GeneralGoWorkflows_general_go_workflows_proto protoreflect.FileDescriptor

var file_Workflows_GeneralGoWorkflows_general_go_workflows_proto_rawDesc = []byte{
	0x0a, 0x37, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x73, 0x2f, 0x47, 0x65, 0x6e, 0x65,
	0x72, 0x61, 0x6c, 0x47, 0x6f, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x73, 0x2f, 0x67,
	0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x5f, 0x67, 0x6f, 0x5f, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c,
	0x6f, 0x77, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x2f, 0x66, 0x61, 0x72, 0x6d, 0x2e,
	0x6e, 0x75, 0x72, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x63, 0x6f, 0x6e,
	0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x73,
	0x2e, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x67, 0x6f, 0x1a, 0x12, 0x43, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2f, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x15,
	0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x24, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x14, 0x43, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2f, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x45, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x26, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2f, 0x66, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x28, 0x49, 0x6e, 0x73, 0x75, 0x72,
	0x61, 0x6e, 0x63, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x69, 0x6e, 0x73, 0x75,
	0x72, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0x7b, 0x0a, 0x1d, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x53, 0x74, 0x61,
	0x6c, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x5a, 0x0a, 0x0e, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x32, 0x2e,
	0x66, 0x61, 0x72, 0x6d, 0x2e, 0x6e, 0x75, 0x72, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x63, 0x6f, 0x72,
	0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72,
	0x73, 0x52, 0x0e, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72,
	0x73, 0x22, 0x6c, 0x0a, 0x1e, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x53, 0x74, 0x61, 0x6c, 0x65, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x4a, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x32, 0x2e, 0x66, 0x61, 0x72, 0x6d, 0x2e, 0x6e, 0x75, 0x72, 0x74, 0x75,
	0x72, 0x65, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74,
	0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22,
	0x38, 0x0a, 0x17, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x63,
	0x6f, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09,
	0x73, 0x63, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x49, 0x64, 0x22, 0x66, 0x0a, 0x18, 0x53, 0x63, 0x6f,
	0x72, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4a, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x32, 0x2e, 0x66, 0x61, 0x72, 0x6d, 0x2e, 0x6e, 0x75, 0x72,
	0x74, 0x75, 0x72, 0x65, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61,
	0x63, 0x74, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x22, 0x17, 0x0a, 0x15, 0x49, 0x6f, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x64, 0x0a, 0x16, 0x49, 0x6f,
	0x74, 0x43, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4a, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x32, 0x2e, 0x66, 0x61, 0x72, 0x6d, 0x2e, 0x6e, 0x75, 0x72, 0x74,
	0x75, 0x72, 0x65, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63,
	0x74, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x22, 0x86, 0x03, 0x0a, 0x1c, 0x50, 0x6f, 0x73, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x46, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x50, 0x4e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x41, 0x0a, 0x05, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x2b, 0x2e, 0x66, 0x61, 0x72, 0x6d, 0x2e, 0x6e, 0x75, 0x72, 0x74, 0x75, 0x72, 0x65, 0x2e,
	0x63, 0x6f, 0x72, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x41, 0x63, 0x74, 0x6f, 0x72, 0x49, 0x44, 0x52, 0x05, 0x61,
	0x63, 0x74, 0x6f, 0x72, 0x12, 0x54, 0x0a, 0x0c, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65,
	0x43, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x30, 0x2e, 0x66, 0x61, 0x72,
	0x6d, 0x2e, 0x6e, 0x75, 0x72, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x63,
	0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x0c, 0x6c, 0x61,
	0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0c,
	0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x1e, 0x0a, 0x0a, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x49, 0x64, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x49, 0x64,
	0x12, 0x18, 0x0a, 0x07, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x4d, 0x0a, 0x09, 0x6e, 0x61,
	0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2f, 0x2e,
	0x66, 0x61, 0x72, 0x6d, 0x2e, 0x6e, 0x75, 0x72, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x63, 0x6f, 0x72,
	0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x66, 0x65, 0x65, 0x64,
	0x62, 0x61, 0x63, 0x6b, 0x2e, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x52, 0x09,
	0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x22, 0x9b, 0x03, 0x0a, 0x19, 0x50, 0x6f,
	0x73, 0x74, 0x50, 0x75, 0x73, 0x61, 0x53, 0x70, 0x72, 0x61, 0x79, 0x50, 0x6f, 0x70, 0x55, 0x70,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x41, 0x0a, 0x05, 0x61, 0x63, 0x74, 0x6f, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x66, 0x61, 0x72, 0x6d, 0x2e, 0x6e, 0x75,
	0x72, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72,
	0x61, 0x63, 0x74, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x41, 0x63, 0x74, 0x6f,
	0x72, 0x49, 0x44, 0x52, 0x05, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x54, 0x0a, 0x0c, 0x6c, 0x61,
	0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x30, 0x2e, 0x66, 0x61, 0x72, 0x6d, 0x2e, 0x6e, 0x75, 0x72, 0x74, 0x75, 0x72, 0x65, 0x2e,
	0x63, 0x6f, 0x72, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x43, 0x6f,
	0x64, 0x65, 0x52, 0x0c, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x64, 0x65,
	0x12, 0x20, 0x0a, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x54, 0x79,
	0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e,
	0x61, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e,
	0x61, 0x6c, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x65, 0x78, 0x74, 0x65,
	0x72, 0x6e, 0x61, 0x6c, 0x49, 0x64, 0x12, 0x4d, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2f, 0x2e, 0x66, 0x61, 0x72, 0x6d,
	0x2e, 0x6e, 0x75, 0x72, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x63, 0x6f,
	0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x66, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b,
	0x2e, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x64,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12,
	0x16, 0x0a, 0x06, 0x66, 0x61, 0x72, 0x6d, 0x49, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x06, 0x66, 0x61, 0x72, 0x6d, 0x49, 0x64, 0x22, 0x6b, 0x0a, 0x1d, 0x50, 0x6f, 0x73, 0x74, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x50, 0x4e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4a, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x32, 0x2e, 0x66, 0x61, 0x72, 0x6d, 0x2e,
	0x6e, 0x75, 0x72, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x63, 0x6f, 0x6e,
	0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x22, 0x68, 0x0a, 0x1a, 0x50, 0x6f, 0x73, 0x74, 0x50, 0x75, 0x73, 0x61,
	0x53, 0x70, 0x72, 0x61, 0x79, 0x50, 0x6f, 0x70, 0x55, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x4a, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x32, 0x2e, 0x66, 0x61, 0x72, 0x6d, 0x2e, 0x6e, 0x75, 0x72, 0x74, 0x75, 0x72,
	0x65, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0xb0,
	0x02, 0x0a, 0x21, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x4a, 0x6f,
	0x75, 0x72, 0x6e, 0x65, 0x79, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x5a, 0x0a, 0x0e, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48,
	0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x66,
	0x61, 0x72, 0x6d, 0x2e, 0x6e, 0x75, 0x72, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x63, 0x6f, 0x72, 0x65,
	0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73,
	0x52, 0x0e, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73,
	0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x49, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x63, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x49, 0x64,
	0x12, 0x2e, 0x0a, 0x12, 0x65, 0x6e, 0x67, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x56, 0x65,
	0x72, 0x74, 0x65, 0x78, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x12, 0x65, 0x6e,
	0x67, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x56, 0x65, 0x72, 0x74, 0x65, 0x78, 0x49, 0x64,
	0x12, 0x20, 0x0a, 0x0b, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65,
	0x49, 0x64, 0x12, 0x3d, 0x0a, 0x0c, 0x77, 0x61, 0x69, 0x74, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x0c, 0x77, 0x61, 0x69, 0x74, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x22, 0x70, 0x0a, 0x22, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72,
	0x4a, 0x6f, 0x75, 0x72, 0x6e, 0x65, 0x79, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4a, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x32, 0x2e, 0x66, 0x61, 0x72, 0x6d, 0x2e, 0x6e,
	0x75, 0x72, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x74,
	0x72, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x22, 0xee, 0x01, 0x0a, 0x16, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x43,
	0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f,
	0x0a, 0x0b, 0x63, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0a, 0x63, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x49, 0x64, 0x12,
	0x6c, 0x0a, 0x14, 0x63, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x53, 0x63, 0x68, 0x65, 0x64,
	0x75, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x38, 0x2e,
	0x66, 0x61, 0x72, 0x6d, 0x2e, 0x6e, 0x75, 0x72, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x63, 0x6f, 0x72,
	0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x53, 0x63, 0x68, 0x65, 0x64,
	0x75, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x14, 0x63, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67,
	0x6e, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x45, 0x0a,
	0x10, 0x69, 0x6e, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x10, 0x69, 0x6e, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x22, 0x65, 0x0a, 0x17, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x43,
	0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x4a, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x32, 0x2e, 0x66, 0x61, 0x72, 0x6d, 0x2e, 0x6e, 0x75, 0x72, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x63,
	0x6f, 0x72, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0xf0, 0x01, 0x0a, 0x19,
	0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x41, 0x0a, 0x05, 0x61, 0x63, 0x74,
	0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x66, 0x61, 0x72, 0x6d, 0x2e,
	0x6e, 0x75, 0x72, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x63, 0x6f, 0x6e,
	0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x41, 0x63,
	0x74, 0x6f, 0x72, 0x49, 0x44, 0x52, 0x05, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x56, 0x0a, 0x0d,
	0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0e, 0x32, 0x30, 0x2e, 0x66, 0x61, 0x72, 0x6d, 0x2e, 0x6e, 0x75, 0x72, 0x74, 0x75,
	0x72, 0x65, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74,
	0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67,
	0x65, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x0d, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x43,
	0x6f, 0x64, 0x65, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x6c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65,
	0x12, 0x1c, 0x0a, 0x09, 0x6c, 0x6f, 0x6e, 0x67, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x09, 0x6c, 0x6f, 0x6e, 0x67, 0x69, 0x74, 0x75, 0x64, 0x65, 0x22, 0x88,
	0x01, 0x0a, 0x1a, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4a, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x32, 0x2e,
	0x66, 0x61, 0x72, 0x6d, 0x2e, 0x6e, 0x75, 0x72, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x63, 0x6f, 0x72,
	0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x03, 0x52, 0x0a, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x73, 0x22, 0x25, 0x0a, 0x23, 0x50, 0x72, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x69, 0x76, 0x65, 0x4d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e,
	0x63, 0x65, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x22, 0x72, 0x0a, 0x24, 0x50, 0x72, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x69, 0x76, 0x65, 0x4d, 0x61,
	0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4a, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x32, 0x2e, 0x66, 0x61, 0x72, 0x6d, 0x2e,
	0x6e, 0x75, 0x72, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x63, 0x6f, 0x6e,
	0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x22, 0xfb, 0x02, 0x0a, 0x2f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41,
	0x63, 0x74, 0x6f, 0x72, 0x73, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x50, 0x72, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x69, 0x76, 0x65, 0x4d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x4f, 0x0a, 0x0c, 0x61, 0x63, 0x74, 0x6f,
	0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2b,
	0x2e, 0x66, 0x61, 0x72, 0x6d, 0x2e, 0x6e, 0x75, 0x72, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x63, 0x6f,
	0x72, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x41, 0x63, 0x74, 0x6f, 0x72, 0x49, 0x44, 0x52, 0x0c, 0x61, 0x63, 0x74,
	0x6f, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x38, 0x0a, 0x17, 0x70, 0x72, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x69, 0x76, 0x65, 0x4d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e,
	0x63, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x17, 0x70, 0x72, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x69, 0x76, 0x65, 0x4d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63,
	0x65, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x49, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x49,
	0x64, 0x12, 0x46, 0x0a, 0x1e, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x50, 0x72, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x69, 0x76, 0x65, 0x4d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63,
	0x65, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x1e, 0x6d, 0x61, 0x63, 0x68, 0x69,
	0x6e, 0x65, 0x50, 0x72, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x69, 0x76, 0x65, 0x4d, 0x61, 0x69, 0x6e,
	0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x12, 0x57, 0x0a, 0x08, 0x70, 0x6d, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x3b, 0x2e, 0x66, 0x61,
	0x72, 0x6d, 0x2e, 0x6e, 0x75, 0x72, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e,
	0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x6d, 0x73, 0x2e, 0x50, 0x72, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x69, 0x76, 0x65, 0x4d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e,
	0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x08, 0x70, 0x6d, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x22, 0x7e, 0x0a, 0x30, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x63, 0x74, 0x6f,
	0x72, 0x73, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x50, 0x72, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x69, 0x76, 0x65, 0x4d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4a, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x32, 0x2e, 0x66, 0x61, 0x72, 0x6d, 0x2e, 0x6e, 0x75,
	0x72, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72,
	0x61, 0x63, 0x74, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x22, 0xa9, 0x01, 0x0a, 0x2d, 0x52, 0x65, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c,
	0x65, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x50, 0x72, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x69,
	0x76, 0x65, 0x4d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65,
	0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x04, 0x64, 0x61, 0x74, 0x65, 0x12, 0x46, 0x0a, 0x1e, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e,
	0x65, 0x50, 0x72, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x69, 0x76, 0x65, 0x4d, 0x61, 0x69, 0x6e, 0x74,
	0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x1e,
	0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x50, 0x72, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x69, 0x76,
	0x65, 0x4d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x22, 0x7c,
	0x0a, 0x2e, 0x52, 0x65, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x4d, 0x61, 0x63, 0x68,
	0x69, 0x6e, 0x65, 0x50, 0x72, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x69, 0x76, 0x65, 0x4d, 0x61, 0x69,
	0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x4a, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x32, 0x2e, 0x66, 0x61, 0x72, 0x6d, 0x2e, 0x6e, 0x75, 0x72, 0x74, 0x75, 0x72, 0x65, 0x2e,
	0x63, 0x6f, 0x72, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x9b, 0x01, 0x0a,
	0x12, 0x48, 0x61, 0x6e, 0x64, 0x6f, 0x76, 0x65, 0x72, 0x4f, 0x74, 0x70, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6f, 0x74, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6f, 0x74, 0x70, 0x12, 0x4f, 0x0a, 0x0c, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x66, 0x61,
	0x72, 0x6d, 0x2e, 0x6e, 0x75, 0x72, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e,
	0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x41, 0x63, 0x74, 0x6f, 0x72, 0x49, 0x44, 0x52, 0x0c, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65,
	0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6d, 0x6f,
	0x62, 0x69, 0x6c, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x22, 0x61, 0x0a, 0x13, 0x48, 0x61,
	0x6e, 0x64, 0x6f, 0x76, 0x65, 0x72, 0x4f, 0x74, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x4a, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x32, 0x2e, 0x66, 0x61, 0x72, 0x6d, 0x2e, 0x6e, 0x75, 0x72, 0x74, 0x75, 0x72, 0x65,
	0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x34, 0x0a,
	0x0a, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x22, 0xf3, 0x07, 0x0a, 0x12, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x52, 0x65, 0x77,
	0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x4d, 0x0a, 0x0b, 0x75, 0x73,
	0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x2b, 0x2e, 0x66, 0x61, 0x72, 0x6d, 0x2e, 0x6e, 0x75, 0x72, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x63,
	0x6f, 0x72, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x41, 0x63, 0x74, 0x6f, 0x72, 0x49, 0x44, 0x52, 0x0b, 0x75, 0x73,
	0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x5a, 0x0a, 0x0e, 0x75, 0x73, 0x65,
	0x72, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x32, 0x2e, 0x66, 0x61, 0x72, 0x6d, 0x2e, 0x6e, 0x75, 0x72, 0x74, 0x75, 0x72, 0x65,
	0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x41, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0e, 0x75, 0x73, 0x65, 0x72, 0x41, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x4e, 0x0a, 0x0a, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x54,
	0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2e, 0x2e, 0x66, 0x61, 0x72, 0x6d,
	0x2e, 0x6e, 0x75, 0x72, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x63, 0x6f,
	0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52,
	0x65, 0x77, 0x61, 0x72, 0x64, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0a, 0x72, 0x65, 0x77, 0x61, 0x72,
	0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x50,
	0x6f, 0x69, 0x6e, 0x74, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x72, 0x65, 0x77,
	0x61, 0x72, 0x64, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x12, 0x3e, 0x0a, 0x0c, 0x61, 0x6c, 0x6c,
	0x6f, 0x74, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0c, 0x61, 0x6c, 0x6c,
	0x6f, 0x74, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x12, 0x2c, 0x0a, 0x11, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x66, 0x65, 0x72,
	0x65, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x12,
	0x22, 0x0a, 0x0c, 0x63, 0x6f, 0x72, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x6f, 0x72, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x64, 0x12, 0x2e, 0x0a, 0x12, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x72,
	0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x12, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x72, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x4b, 0x65, 0x79, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x4b, 0x65, 0x79, 0x12,
	0x26, 0x0a, 0x0e, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x4b, 0x65,
	0x79, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x4b, 0x65, 0x79, 0x12, 0x38, 0x0a, 0x09, 0x76, 0x61, 0x6c, 0x69, 0x64,
	0x46, 0x72, 0x6f, 0x6d, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x46, 0x72, 0x6f,
	0x6d, 0x12, 0x34, 0x0a, 0x07, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x54, 0x6f, 0x18, 0x0e, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x07,
	0x76, 0x61, 0x6c, 0x69, 0x64, 0x54, 0x6f, 0x12, 0x5b, 0x0a, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69,
	0x62, 0x75, 0x74, 0x65, 0x73, 0x18, 0x0f, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3b, 0x2e, 0x66, 0x61,
	0x72, 0x6d, 0x2e, 0x6e, 0x75, 0x72, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e,
	0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c,
	0x6f, 0x77, 0x73, 0x2e, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x67, 0x6f, 0x2e, 0x41, 0x74,
	0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x52, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62,
	0x75, 0x74, 0x65, 0x73, 0x12, 0x4f, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x10,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x37, 0x2e, 0x66, 0x61, 0x72, 0x6d, 0x2e, 0x6e, 0x75, 0x72, 0x74,
	0x75, 0x72, 0x65, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63,
	0x74, 0x73, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x73, 0x2e, 0x67, 0x65, 0x6e,
	0x65, 0x72, 0x61, 0x6c, 0x67, 0x6f, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x38, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x18, 0x12, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12,
	0x38, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x13, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x61, 0x0a, 0x13, 0x4f, 0x66, 0x66,
	0x65, 0x72, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x4a, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x32, 0x2e, 0x66, 0x61, 0x72, 0x6d, 0x2e, 0x6e, 0x75, 0x72, 0x74, 0x75, 0x72, 0x65, 0x2e,
	0x63, 0x6f, 0x72, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0xaa, 0x01, 0x0a,
	0x1d, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x64, 0x53, 0x70, 0x72, 0x61, 0x79,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x4d,
	0x0a, 0x0b, 0x75, 0x73, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x66, 0x61, 0x72, 0x6d, 0x2e, 0x6e, 0x75, 0x72, 0x74, 0x75,
	0x72, 0x65, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74,
	0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x41, 0x63, 0x74, 0x6f, 0x72, 0x49, 0x44,
	0x52, 0x0b, 0x75, 0x73, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x1c, 0x0a,
	0x09, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x09, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x22, 0xfc, 0x04, 0x0a, 0x1b, 0x4f, 0x66,
	0x66, 0x65, 0x72, 0x49, 0x6e, 0x73, 0x75, 0x72, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x77, 0x61,
	0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x4d, 0x0a, 0x0b, 0x75, 0x73, 0x65,
	0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b,
	0x2e, 0x66, 0x61, 0x72, 0x6d, 0x2e, 0x6e, 0x75, 0x72, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x63, 0x6f,
	0x72, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x41, 0x63, 0x74, 0x6f, 0x72, 0x49, 0x44, 0x52, 0x0b, 0x75, 0x73, 0x65,
	0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x48, 0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x66, 0x61, 0x72,
	0x6d, 0x2e, 0x6e, 0x75, 0x72, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x63,
	0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x57, 0x0a, 0x0d, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74,
	0x68, 0x6f, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x31, 0x2e, 0x66, 0x61, 0x72, 0x6d,
	0x2e, 0x6e, 0x75, 0x72, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x63, 0x6f,
	0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x50,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x52, 0x0d, 0x70, 0x61,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x2a, 0x0a, 0x10, 0x73,
	0x63, 0x68, 0x65, 0x6d, 0x65, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x18,
	0x04, 0x20, 0x03, 0x28, 0x03, 0x52, 0x10, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x65, 0x51, 0x75, 0x61,
	0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6f, 0x66, 0x66, 0x65, 0x72,
	0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x6f, 0x66, 0x66, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x54, 0x0a, 0x0c, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x64,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x30, 0x2e, 0x66, 0x61, 0x72, 0x6d, 0x2e, 0x6e,
	0x75, 0x72, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x74,
	0x72, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4c, 0x61, 0x6e,
	0x67, 0x75, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x0c, 0x6c, 0x61, 0x6e, 0x67, 0x75,
	0x61, 0x67, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x5b, 0x0a, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69,
	0x62, 0x75, 0x74, 0x65, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3b, 0x2e, 0x66, 0x61,
	0x72, 0x6d, 0x2e, 0x6e, 0x75, 0x72, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e,
	0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c,
	0x6f, 0x77, 0x73, 0x2e, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x67, 0x6f, 0x2e, 0x41, 0x74,
	0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x52, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62,
	0x75, 0x74, 0x65, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x75, 0x73, 0x65, 0x72, 0x52, 0x65, 0x77, 0x61,
	0x72, 0x64, 0x49, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x75, 0x73, 0x65, 0x72,
	0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x49, 0x64, 0x12, 0x4e, 0x0a, 0x0a, 0x72, 0x65, 0x77, 0x61,
	0x72, 0x64, 0x54, 0x79, 0x70, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2e, 0x2e, 0x66,
	0x61, 0x72, 0x6d, 0x2e, 0x6e, 0x75, 0x72, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x63, 0x6f, 0x72, 0x65,
	0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0a, 0x72, 0x65,
	0x77, 0x61, 0x72, 0x64, 0x54, 0x79, 0x70, 0x65, 0x22, 0x6a, 0x0a, 0x1c, 0x4f, 0x66, 0x66, 0x65,
	0x72, 0x49, 0x6e, 0x73, 0x75, 0x72, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4a, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x32, 0x2e, 0x66, 0x61, 0x72, 0x6d, 0x2e,
	0x6e, 0x75, 0x72, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x63, 0x6f, 0x6e,
	0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x22, 0x97, 0x01, 0x0a, 0x17, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50,
	0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1c, 0x0a, 0x09, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x22,
	0x0a, 0x0c, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x6e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x4f, 0x66, 0x44, 0x61, 0x79, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0c, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x4f, 0x66, 0x44, 0x61, 0x79, 0x73, 0x22, 0x66,
	0x0a, 0x18, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4a, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x32, 0x2e, 0x66, 0x61, 0x72,
	0x6d, 0x2e, 0x6e, 0x75, 0x72, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x63,
	0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x7e, 0x0a, 0x20, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65,
	0x72, 0x46, 0x32, 0x46, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x45, 0x78, 0x70, 0x69, 0x72, 0x79, 0x43,
	0x72, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72,
	0x6f, 0x6e, 0x45, 0x78, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x72, 0x6f,
	0x6e, 0x45, 0x78, 0x70, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x49,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x73, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74,
	0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x65, 0x78, 0x70, 0x69, 0x72, 0x79, 0x50, 0x6f, 0x69, 0x6e,
	0x74, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x65, 0x78, 0x70, 0x69, 0x72, 0x79,
	0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x22, 0x6f, 0x0a, 0x21, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65,
	0x72, 0x46, 0x32, 0x46, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x45, 0x78, 0x70, 0x69, 0x72, 0x79, 0x43,
	0x72, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4a, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x32, 0x2e, 0x66, 0x61,
	0x72, 0x6d, 0x2e, 0x6e, 0x75, 0x72, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e,
	0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0xe7, 0x01, 0x0a, 0x1d, 0x49, 0x6e, 0x73, 0x75,
	0x72, 0x61, 0x6e, 0x63, 0x65, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x45, 0x0a, 0x07, 0x61, 0x63, 0x74,
	0x6f, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x66, 0x61, 0x72,
	0x6d, 0x2e, 0x6e, 0x75, 0x72, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x63,
	0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x41, 0x63, 0x74, 0x6f, 0x72, 0x49, 0x44, 0x52, 0x07, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x49, 0x64,
	0x12, 0x22, 0x0a, 0x0c, 0x75, 0x73, 0x65, 0x72, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x65, 0x49, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x75, 0x73, 0x65, 0x72, 0x53, 0x63, 0x68, 0x65,
	0x6d, 0x65, 0x49, 0x64, 0x12, 0x5b, 0x0a, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x39, 0x2e, 0x66, 0x61, 0x72, 0x6d,
	0x2e, 0x6e, 0x75, 0x72, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x63, 0x6f,
	0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x49, 0x6e, 0x73, 0x75, 0x72, 0x61, 0x6e, 0x63,
	0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x22, 0x6c, 0x0a, 0x1e, 0x49, 0x6e, 0x73, 0x75, 0x72, 0x61, 0x6e, 0x63, 0x65, 0x50, 0x75,
	0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x4a, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x32, 0x2e, 0x66, 0x61, 0x72, 0x6d, 0x2e, 0x6e, 0x75, 0x72, 0x74, 0x75,
	0x72, 0x65, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74,
	0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2a,
	0x43, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0d, 0x0a, 0x09, 0x4e, 0x4f, 0x5f,
	0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x10, 0x00, 0x12, 0x0f, 0x0a, 0x0b, 0x49, 0x4e, 0x5f, 0x50,
	0x52, 0x4f, 0x47, 0x52, 0x45, 0x53, 0x53, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x43, 0x4f, 0x4d,
	0x50, 0x4c, 0x45, 0x54, 0x45, 0x44, 0x10, 0x02, 0x12, 0x0a, 0x0a, 0x06, 0x46, 0x41, 0x49, 0x4c,
	0x45, 0x44, 0x10, 0x03, 0x32, 0xf5, 0x18, 0x0a, 0x12, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c,
	0x47, 0x6f, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x73, 0x12, 0x98, 0x01, 0x0a, 0x0b,
	0x4f, 0x66, 0x66, 0x65, 0x72, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x12, 0x43, 0x2e, 0x66, 0x61,
	0x72, 0x6d, 0x2e, 0x6e, 0x75, 0x72, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e,
	0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c,
	0x6f, 0x77, 0x73, 0x2e, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x67, 0x6f, 0x2e, 0x4f, 0x66,
	0x66, 0x65, 0x72, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x44, 0x2e, 0x66, 0x61, 0x72, 0x6d, 0x2e, 0x6e, 0x75, 0x72, 0x74, 0x75, 0x72, 0x65, 0x2e,
	0x63, 0x6f, 0x72, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x77,
	0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x73, 0x2e, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c,
	0x67, 0x6f, 0x2e, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0xb3, 0x01, 0x0a, 0x1b, 0x4f, 0x66, 0x66, 0x65, 0x72,
	0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x64, 0x53, 0x70, 0x72, 0x61, 0x79, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x4e, 0x2e, 0x66, 0x61, 0x72, 0x6d, 0x2e, 0x6e, 0x75,
	0x72, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72,
	0x61, 0x63, 0x74, 0x73, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x73, 0x2e, 0x67,
	0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x67, 0x6f, 0x2e, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x65, 0x64, 0x53, 0x70, 0x72, 0x61, 0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x44, 0x2e, 0x66, 0x61, 0x72, 0x6d, 0x2e, 0x6e, 0x75,
	0x72, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72,
	0x61, 0x63, 0x74, 0x73, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x73, 0x2e, 0x67,
	0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x67, 0x6f, 0x2e, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x52, 0x65,
	0x77, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x98, 0x01, 0x0a,
	0x0b, 0x48, 0x61, 0x6e, 0x64, 0x6f, 0x76, 0x65, 0x72, 0x4f, 0x74, 0x70, 0x12, 0x43, 0x2e, 0x66,
	0x61, 0x72, 0x6d, 0x2e, 0x6e, 0x75, 0x72, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x63, 0x6f, 0x72, 0x65,
	0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x66,
	0x6c, 0x6f, 0x77, 0x73, 0x2e, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x67, 0x6f, 0x2e, 0x48,
	0x61, 0x6e, 0x64, 0x6f, 0x76, 0x65, 0x72, 0x4f, 0x74, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x44, 0x2e, 0x66, 0x61, 0x72, 0x6d, 0x2e, 0x6e, 0x75, 0x72, 0x74, 0x75, 0x72, 0x65,
	0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x2e,
	0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x73, 0x2e, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61,
	0x6c, 0x67, 0x6f, 0x2e, 0x48, 0x61, 0x6e, 0x64, 0x6f, 0x76, 0x65, 0x72, 0x4f, 0x74, 0x70, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0xe9, 0x01, 0x0a, 0x26, 0x52, 0x65, 0x73, 0x63,
	0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x50, 0x72, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x69, 0x76, 0x65, 0x4d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e,
	0x63, 0x65, 0x12, 0x5e, 0x2e, 0x66, 0x61, 0x72, 0x6d, 0x2e, 0x6e, 0x75, 0x72, 0x74, 0x75, 0x72,
	0x65, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73,
	0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x73, 0x2e, 0x67, 0x65, 0x6e, 0x65, 0x72,
	0x61, 0x6c, 0x67, 0x6f, 0x2e, 0x52, 0x65, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x4d,
	0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x50, 0x72, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x69, 0x76, 0x65,
	0x4d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x5f, 0x2e, 0x66, 0x61, 0x72, 0x6d, 0x2e, 0x6e, 0x75, 0x72, 0x74, 0x75, 0x72,
	0x65, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73,
	0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x73, 0x2e, 0x67, 0x65, 0x6e, 0x65, 0x72,
	0x61, 0x6c, 0x67, 0x6f, 0x2e, 0x52, 0x65, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x4d,
	0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x50, 0x72, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x69, 0x76, 0x65,
	0x4d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0xef, 0x01, 0x0a, 0x28, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x63,
	0x74, 0x6f, 0x72, 0x73, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x50, 0x72, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x69, 0x76, 0x65, 0x4d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65,
	0x12, 0x60, 0x2e, 0x66, 0x61, 0x72, 0x6d, 0x2e, 0x6e, 0x75, 0x72, 0x74, 0x75, 0x72, 0x65, 0x2e,
	0x63, 0x6f, 0x72, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x77,
	0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x73, 0x2e, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c,
	0x67, 0x6f, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x4d,
	0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x50, 0x72, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x69, 0x76, 0x65,
	0x4d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x61, 0x2e, 0x66, 0x61, 0x72, 0x6d, 0x2e, 0x6e, 0x75, 0x72, 0x74, 0x75, 0x72,
	0x65, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73,
	0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x73, 0x2e, 0x67, 0x65, 0x6e, 0x65, 0x72,
	0x61, 0x6c, 0x67, 0x6f, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x63, 0x74, 0x6f, 0x72,
	0x73, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x50, 0x72, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x69,
	0x76, 0x65, 0x4d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0xcb, 0x01, 0x0a, 0x1c, 0x50, 0x72, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x69, 0x76, 0x65, 0x4d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x54,
	0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x12, 0x54, 0x2e, 0x66, 0x61, 0x72, 0x6d, 0x2e, 0x6e, 0x75,
	0x72, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72,
	0x61, 0x63, 0x74, 0x73, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x73, 0x2e, 0x67,
	0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x67, 0x6f, 0x2e, 0x50, 0x72, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x69, 0x76, 0x65, 0x4d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x54, 0x72,
	0x69, 0x67, 0x67, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x55, 0x2e, 0x66,
	0x61, 0x72, 0x6d, 0x2e, 0x6e, 0x75, 0x72, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x63, 0x6f, 0x72, 0x65,
	0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x66,
	0x6c, 0x6f, 0x77, 0x73, 0x2e, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x67, 0x6f, 0x2e, 0x50,
	0x72, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x69, 0x76, 0x65, 0x4d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e,
	0x61, 0x6e, 0x63, 0x65, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0xaf, 0x01, 0x0a, 0x12, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x55,
	0x73, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x4a, 0x2e, 0x66, 0x61, 0x72,
	0x6d, 0x2e, 0x6e, 0x75, 0x72, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x63,
	0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f,
	0x77, 0x73, 0x2e, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x67, 0x6f, 0x2e, 0x52, 0x65, 0x66,
	0x72, 0x65, 0x73, 0x68, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x4b, 0x2e, 0x66, 0x61, 0x72, 0x6d, 0x2e, 0x6e, 0x75,
	0x72, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72,
	0x61, 0x63, 0x74, 0x73, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x73, 0x2e, 0x67,
	0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x67, 0x6f, 0x2e, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68,
	0x55, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0xa6, 0x01, 0x0a, 0x0f, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74,
	0x65, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x12, 0x47, 0x2e, 0x66, 0x61, 0x72, 0x6d,
	0x2e, 0x6e, 0x75, 0x72, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x63, 0x6f,
	0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77,
	0x73, 0x2e, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x67, 0x6f, 0x2e, 0x45, 0x78, 0x65, 0x63,
	0x75, 0x74, 0x65, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x48, 0x2e, 0x66, 0x61, 0x72, 0x6d, 0x2e, 0x6e, 0x75, 0x72, 0x74, 0x75, 0x72,
	0x65, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73,
	0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x73, 0x2e, 0x67, 0x65, 0x6e, 0x65, 0x72,
	0x61, 0x6c, 0x67, 0x6f, 0x2e, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x43, 0x61, 0x6d, 0x70,
	0x61, 0x69, 0x67, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0xb6,
	0x01, 0x0a, 0x15, 0x50, 0x6f, 0x73, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x46, 0x65,
	0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x50, 0x4e, 0x12, 0x4d, 0x2e, 0x66, 0x61, 0x72, 0x6d, 0x2e,
	0x6e, 0x75, 0x72, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x63, 0x6f, 0x6e,
	0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x73,
	0x2e, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x67, 0x6f, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x50, 0x4e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x4e, 0x2e, 0x66, 0x61, 0x72, 0x6d, 0x2e, 0x6e,
	0x75, 0x72, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x74,
	0x72, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x73, 0x2e,
	0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x67, 0x6f, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x50, 0x4e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0xad, 0x01, 0x0a, 0x12, 0x50, 0x6f, 0x73, 0x74,
	0x50, 0x75, 0x73, 0x61, 0x53, 0x70, 0x72, 0x61, 0x79, 0x50, 0x6f, 0x70, 0x55, 0x70, 0x12, 0x4a,
	0x2e, 0x66, 0x61, 0x72, 0x6d, 0x2e, 0x6e, 0x75, 0x72, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x63, 0x6f,
	0x72, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x77, 0x6f, 0x72,
	0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x73, 0x2e, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x67, 0x6f,
	0x2e, 0x50, 0x6f, 0x73, 0x74, 0x50, 0x75, 0x73, 0x61, 0x53, 0x70, 0x72, 0x61, 0x79, 0x50, 0x6f,
	0x70, 0x55, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x4b, 0x2e, 0x66, 0x61, 0x72,
	0x6d, 0x2e, 0x6e, 0x75, 0x72, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x63,
	0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f,
	0x77, 0x73, 0x2e, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x67, 0x6f, 0x2e, 0x50, 0x6f, 0x73,
	0x74, 0x50, 0x75, 0x73, 0x61, 0x53, 0x70, 0x72, 0x61, 0x79, 0x50, 0x6f, 0x70, 0x55, 0x70, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0xa1, 0x01, 0x0a, 0x0e, 0x49, 0x6f, 0x74, 0x43,
	0x6f, 0x6d, 0x70, 0x75, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x46, 0x2e, 0x66, 0x61, 0x72,
	0x6d, 0x2e, 0x6e, 0x75, 0x72, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x63,
	0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f,
	0x77, 0x73, 0x2e, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x67, 0x6f, 0x2e, 0x49, 0x6f, 0x74,
	0x43, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x47, 0x2e, 0x66, 0x61, 0x72, 0x6d, 0x2e, 0x6e, 0x75, 0x72, 0x74, 0x75, 0x72,
	0x65, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73,
	0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x73, 0x2e, 0x67, 0x65, 0x6e, 0x65, 0x72,
	0x61, 0x6c, 0x67, 0x6f, 0x2e, 0x49, 0x6f, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0xc7, 0x01, 0x0a, 0x1a,
	0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x4a, 0x6f, 0x75, 0x72, 0x6e,
	0x65, 0x79, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x12, 0x52, 0x2e, 0x66, 0x61, 0x72,
	0x6d, 0x2e, 0x6e, 0x75, 0x72, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x63,
	0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f,
	0x77, 0x73, 0x2e, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x67, 0x6f, 0x2e, 0x45, 0x78, 0x65,
	0x63, 0x75, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x4a, 0x6f, 0x75, 0x72, 0x6e, 0x65, 0x79, 0x43,
	0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x53,
	0x2e, 0x66, 0x61, 0x72, 0x6d, 0x2e, 0x6e, 0x75, 0x72, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x63, 0x6f,
	0x72, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x77, 0x6f, 0x72,
	0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x73, 0x2e, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x67, 0x6f,
	0x2e, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x4a, 0x6f, 0x75, 0x72,
	0x6e, 0x65, 0x79, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0xb4, 0x01, 0x0a, 0x15, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x49,
	0x6e, 0x73, 0x75, 0x72, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x12,
	0x4c, 0x2e, 0x66, 0x61, 0x72, 0x6d, 0x2e, 0x6e, 0x75, 0x72, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x63,
	0x6f, 0x72, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x77, 0x6f,
	0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x73, 0x2e, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x67,
	0x6f, 0x2e, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x49, 0x6e, 0x73, 0x75, 0x72, 0x61, 0x6e, 0x63, 0x65,
	0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x4d, 0x2e,
	0x66, 0x61, 0x72, 0x6d, 0x2e, 0x6e, 0x75, 0x72, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x63, 0x6f, 0x72,
	0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x77, 0x6f, 0x72, 0x6b,
	0x66, 0x6c, 0x6f, 0x77, 0x73, 0x2e, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x67, 0x6f, 0x2e,
	0x4f, 0x66, 0x66, 0x65, 0x72, 0x49, 0x6e, 0x73, 0x75, 0x72, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65,
	0x77, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0xa7, 0x01, 0x0a,
	0x10, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x12, 0x48, 0x2e, 0x66, 0x61, 0x72, 0x6d, 0x2e, 0x6e, 0x75, 0x72, 0x74, 0x75, 0x72, 0x65,
	0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x2e,
	0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x73, 0x2e, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61,
	0x6c, 0x67, 0x6f, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x61, 0x72, 0x74, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x49, 0x2e, 0x66, 0x61,
	0x72, 0x6d, 0x2e, 0x6e, 0x75, 0x72, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e,
	0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c,
	0x6f, 0x77, 0x73, 0x2e, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x67, 0x6f, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x50, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0xc2, 0x01, 0x0a, 0x19, 0x54, 0x72, 0x69, 0x67, 0x67,
	0x65, 0x72, 0x46, 0x32, 0x46, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x45, 0x78, 0x70, 0x69, 0x72, 0x79,
	0x43, 0x72, 0x6f, 0x6e, 0x12, 0x51, 0x2e, 0x66, 0x61, 0x72, 0x6d, 0x2e, 0x6e, 0x75, 0x72, 0x74,
	0x75, 0x72, 0x65, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63,
	0x74, 0x73, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x73, 0x2e, 0x67, 0x65, 0x6e,
	0x65, 0x72, 0x61, 0x6c, 0x67, 0x6f, 0x2e, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x46, 0x32,
	0x46, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x45, 0x78, 0x70, 0x69, 0x72, 0x79, 0x43, 0x72, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x52, 0x2e, 0x66, 0x61, 0x72, 0x6d, 0x2e, 0x6e,
	0x75, 0x72, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x74,
	0x72, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x73, 0x2e,
	0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x67, 0x6f, 0x2e, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65,
	0x72, 0x46, 0x32, 0x46, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x45, 0x78, 0x70, 0x69, 0x72, 0x79, 0x43,
	0x72, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0xbd, 0x01, 0x0a, 0x1a,
	0x53, 0x65, 0x6e, 0x64, 0x49, 0x6e, 0x73, 0x75, 0x72, 0x61, 0x6e, 0x63, 0x65, 0x50, 0x75, 0x72,
	0x63, 0x68, 0x61, 0x73, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x4e, 0x2e, 0x66, 0x61, 0x72,
	0x6d, 0x2e, 0x6e, 0x75, 0x72, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x63,
	0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f,
	0x77, 0x73, 0x2e, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x67, 0x6f, 0x2e, 0x49, 0x6e, 0x73,
	0x75, 0x72, 0x61, 0x6e, 0x63, 0x65, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x4f, 0x2e, 0x66, 0x61, 0x72,
	0x6d, 0x2e, 0x6e, 0x75, 0x72, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x63,
	0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f,
	0x77, 0x73, 0x2e, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x67, 0x6f, 0x2e, 0x49, 0x6e, 0x73,
	0x75, 0x72, 0x61, 0x6e, 0x63, 0x65, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0xae, 0x01, 0x0a, 0x17,
	0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x43, 0x6f, 0x6d, 0x70,
	0x75, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x48, 0x2e, 0x66, 0x61, 0x72, 0x6d, 0x2e, 0x6e,
	0x75, 0x72, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x74,
	0x72, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x73, 0x2e,
	0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x67, 0x6f, 0x2e, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x43,
	0x6f, 0x6d, 0x70, 0x75, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x49, 0x2e, 0x66, 0x61, 0x72, 0x6d, 0x2e, 0x6e, 0x75, 0x72, 0x74, 0x75, 0x72, 0x65,
	0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x2e,
	0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x73, 0x2e, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61,
	0x6c, 0x67, 0x6f, 0x2e, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x72, 0x0a, 0x2f,
	0x66, 0x61, 0x72, 0x6d, 0x2e, 0x6e, 0x75, 0x72, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x63, 0x6f, 0x72,
	0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x77, 0x6f, 0x72, 0x6b,
	0x66, 0x6c, 0x6f, 0x77, 0x73, 0x2e, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x67, 0x6f, 0x50,
	0x01, 0x5a, 0x3d, 0x63, 0x6f, 0x64, 0x65, 0x2e, 0x6e, 0x75, 0x72, 0x74, 0x75, 0x72, 0x65, 0x2e,
	0x66, 0x61, 0x72, 0x6d, 0x2f, 0x43, 0x6f, 0x72, 0x65, 0x2f, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61,
	0x63, 0x74, 0x73, 0x2f, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x73, 0x2f, 0x47, 0x65,
	0x6e, 0x65, 0x72, 0x61, 0x6c, 0x47, 0x6f, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x73,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_Workflows_GeneralGoWorkflows_general_go_workflows_proto_rawDescOnce sync.Once
	file_Workflows_GeneralGoWorkflows_general_go_workflows_proto_rawDescData = file_Workflows_GeneralGoWorkflows_general_go_workflows_proto_rawDesc
)

func file_Workflows_GeneralGoWorkflows_general_go_workflows_proto_rawDescGZIP() []byte {
	file_Workflows_GeneralGoWorkflows_general_go_workflows_proto_rawDescOnce.Do(func() {
		file_Workflows_GeneralGoWorkflows_general_go_workflows_proto_rawDescData = protoimpl.X.CompressGZIP(file_Workflows_GeneralGoWorkflows_general_go_workflows_proto_rawDescData)
	})
	return file_Workflows_GeneralGoWorkflows_general_go_workflows_proto_rawDescData
}

var file_Workflows_GeneralGoWorkflows_general_go_workflows_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_Workflows_GeneralGoWorkflows_general_go_workflows_proto_msgTypes = make([]protoimpl.MessageInfo, 36)
var file_Workflows_GeneralGoWorkflows_general_go_workflows_proto_goTypes = []interface{}{
	(Status)(0),                                              // 0: farm.nurture.core.contracts.workflows.generalgo.Status
	(*ClearStaleCreatedOrderRequest)(nil),                    // 1: farm.nurture.core.contracts.workflows.generalgo.ClearStaleCreatedOrderRequest
	(*ClearStaleCreatedOrderResponse)(nil),                   // 2: farm.nurture.core.contracts.workflows.generalgo.ClearStaleCreatedOrderResponse
	(*ScoreComputationRequest)(nil),                          // 3: farm.nurture.core.contracts.workflows.generalgo.ScoreComputationRequest
	(*ScoreComputationResponse)(nil),                         // 4: farm.nurture.core.contracts.workflows.generalgo.ScoreComputationResponse
	(*IotComputationRequest)(nil),                            // 5: farm.nurture.core.contracts.workflows.generalgo.IotComputationRequest
	(*IotComputationResponse)(nil),                           // 6: farm.nurture.core.contracts.workflows.generalgo.IotComputationResponse
	(*PostServiceFeedbackPNRequest)(nil),                     // 7: farm.nurture.core.contracts.workflows.generalgo.PostServiceFeedbackPNRequest
	(*PostPusaSprayPopUpRequest)(nil),                        // 8: farm.nurture.core.contracts.workflows.generalgo.PostPusaSprayPopUpRequest
	(*PostServiceFeedbackPNResponse)(nil),                    // 9: farm.nurture.core.contracts.workflows.generalgo.PostServiceFeedbackPNResponse
	(*PostPusaSprayPopUpResponse)(nil),                       // 10: farm.nurture.core.contracts.workflows.generalgo.PostPusaSprayPopUpResponse
	(*ExecuteUserJourneyCampaignRequest)(nil),                // 11: farm.nurture.core.contracts.workflows.generalgo.ExecuteUserJourneyCampaignRequest
	(*ExecuteUserJourneyCampaignResponse)(nil),               // 12: farm.nurture.core.contracts.workflows.generalgo.ExecuteUserJourneyCampaignResponse
	(*ExecuteCampaignRequest)(nil),                           // 13: farm.nurture.core.contracts.workflows.generalgo.ExecuteCampaignRequest
	(*ExecuteCampaignResponse)(nil),                          // 14: farm.nurture.core.contracts.workflows.generalgo.ExecuteCampaignResponse
	(*RefreshUserContentRequest)(nil),                        // 15: farm.nurture.core.contracts.workflows.generalgo.RefreshUserContentRequest
	(*RefreshUserContentResponse)(nil),                       // 16: farm.nurture.core.contracts.workflows.generalgo.RefreshUserContentResponse
	(*PreventiveMaintenanceTriggerRequest)(nil),              // 17: farm.nurture.core.contracts.workflows.generalgo.PreventiveMaintenanceTriggerRequest
	(*PreventiveMaintenanceTriggerResponse)(nil),             // 18: farm.nurture.core.contracts.workflows.generalgo.PreventiveMaintenanceTriggerResponse
	(*UpdateActorsMachinePreventiveMaintenanceRequest)(nil),  // 19: farm.nurture.core.contracts.workflows.generalgo.UpdateActorsMachinePreventiveMaintenanceRequest
	(*UpdateActorsMachinePreventiveMaintenanceResponse)(nil), // 20: farm.nurture.core.contracts.workflows.generalgo.UpdateActorsMachinePreventiveMaintenanceResponse
	(*RescheduleMachinePreventiveMaintenanceRequest)(nil),    // 21: farm.nurture.core.contracts.workflows.generalgo.RescheduleMachinePreventiveMaintenanceRequest
	(*RescheduleMachinePreventiveMaintenanceResponse)(nil),   // 22: farm.nurture.core.contracts.workflows.generalgo.RescheduleMachinePreventiveMaintenanceResponse
	(*HandoverOtpRequest)(nil),                               // 23: farm.nurture.core.contracts.workflows.generalgo.HandoverOtpRequest
	(*HandoverOtpResponse)(nil),                              // 24: farm.nurture.core.contracts.workflows.generalgo.HandoverOtpResponse
	(*Attributes)(nil),                                       // 25: farm.nurture.core.contracts.workflows.generalgo.Attributes
	(*OfferRewardRequest)(nil),                               // 26: farm.nurture.core.contracts.workflows.generalgo.OfferRewardRequest
	(*OfferRewardResponse)(nil),                              // 27: farm.nurture.core.contracts.workflows.generalgo.OfferRewardResponse
	(*DiscountedSprayServiceRequest)(nil),                    // 28: farm.nurture.core.contracts.workflows.generalgo.DiscountedSprayServiceRequest
	(*OfferInsuranceRewardRequest)(nil),                      // 29: farm.nurture.core.contracts.workflows.generalgo.OfferInsuranceRewardRequest
	(*OfferInsuranceRewardResponse)(nil),                     // 30: farm.nurture.core.contracts.workflows.generalgo.OfferInsuranceRewardResponse
	(*CreatePartitionsRequest)(nil),                          // 31: farm.nurture.core.contracts.workflows.generalgo.CreatePartitionsRequest
	(*CreatePartitionsResponse)(nil),                         // 32: farm.nurture.core.contracts.workflows.generalgo.CreatePartitionsResponse
	(*TriggerF2FPointExpiryCronRequest)(nil),                 // 33: farm.nurture.core.contracts.workflows.generalgo.TriggerF2FPointExpiryCronRequest
	(*TriggerF2FPointExpiryCronResponse)(nil),                // 34: farm.nurture.core.contracts.workflows.generalgo.TriggerF2FPointExpiryCronResponse
	(*InsurancePurchaseEventRequest)(nil),                    // 35: farm.nurture.core.contracts.workflows.generalgo.InsurancePurchaseEventRequest
	(*InsurancePurchaseEventResponse)(nil),                   // 36: farm.nurture.core.contracts.workflows.generalgo.InsurancePurchaseEventResponse
	(*GoCommon.RequestHeaders)(nil),                          // 37: farm.nurture.core.contracts.common.RequestHeaders
	(GoCommon.ResponseStatus)(0),                             // 38: farm.nurture.core.contracts.common.ResponseStatus
	(*GoCommon.ActorID)(nil),                                 // 39: farm.nurture.core.contracts.common.ActorID
	(GoCommon.LanguageCode)(0),                               // 40: farm.nurture.core.contracts.common.LanguageCode
	(GoFeedbackService.Namespace)(0),                         // 41: farm.nurture.core.contracts.feedback.Namespace
	(*durationpb.Duration)(nil),                              // 42: google.protobuf.Duration
	(GoCommon.CampaignScheduleType)(0),                       // 43: farm.nurture.core.contracts.common.CampaignScheduleType
	(GoMachineService.PreventiveMaintenanceStatus)(0),        // 44: farm.nurture.core.contracts.ms.PreventiveMaintenanceStatus
	(GoCommon.UserActionType)(0),                             // 45: farm.nurture.core.contracts.common.UserActionType
	(GoCommon.RewardType)(0),                                 // 46: farm.nurture.core.contracts.common.RewardType
	(*timestamppb.Timestamp)(nil),                            // 47: google.protobuf.Timestamp
	(*GoCommon.Location)(nil),                                // 48: farm.nurture.core.contracts.common.Location
	(GoCommon.PaymentMethod)(0),                              // 49: farm.nurture.core.contracts.common.PaymentMethod
	(GoInsuranceService.ServiceType)(0),                      // 50: farm.nurture.core.contracts.InsuranceService.ServiceType
}
var file_Workflows_GeneralGoWorkflows_general_go_workflows_proto_depIdxs = []int32{
	37, // 0: farm.nurture.core.contracts.workflows.generalgo.ClearStaleCreatedOrderRequest.requestHeaders:type_name -> farm.nurture.core.contracts.common.RequestHeaders
	38, // 1: farm.nurture.core.contracts.workflows.generalgo.ClearStaleCreatedOrderResponse.status:type_name -> farm.nurture.core.contracts.common.ResponseStatus
	38, // 2: farm.nurture.core.contracts.workflows.generalgo.ScoreComputationResponse.status:type_name -> farm.nurture.core.contracts.common.ResponseStatus
	38, // 3: farm.nurture.core.contracts.workflows.generalgo.IotComputationResponse.status:type_name -> farm.nurture.core.contracts.common.ResponseStatus
	39, // 4: farm.nurture.core.contracts.workflows.generalgo.PostServiceFeedbackPNRequest.actor:type_name -> farm.nurture.core.contracts.common.ActorID
	40, // 5: farm.nurture.core.contracts.workflows.generalgo.PostServiceFeedbackPNRequest.languageCode:type_name -> farm.nurture.core.contracts.common.LanguageCode
	41, // 6: farm.nurture.core.contracts.workflows.generalgo.PostServiceFeedbackPNRequest.namespace:type_name -> farm.nurture.core.contracts.feedback.Namespace
	39, // 7: farm.nurture.core.contracts.workflows.generalgo.PostPusaSprayPopUpRequest.actor:type_name -> farm.nurture.core.contracts.common.ActorID
	40, // 8: farm.nurture.core.contracts.workflows.generalgo.PostPusaSprayPopUpRequest.languageCode:type_name -> farm.nurture.core.contracts.common.LanguageCode
	41, // 9: farm.nurture.core.contracts.workflows.generalgo.PostPusaSprayPopUpRequest.namespace:type_name -> farm.nurture.core.contracts.feedback.Namespace
	38, // 10: farm.nurture.core.contracts.workflows.generalgo.PostServiceFeedbackPNResponse.status:type_name -> farm.nurture.core.contracts.common.ResponseStatus
	38, // 11: farm.nurture.core.contracts.workflows.generalgo.PostPusaSprayPopUpResponse.status:type_name -> farm.nurture.core.contracts.common.ResponseStatus
	37, // 12: farm.nurture.core.contracts.workflows.generalgo.ExecuteUserJourneyCampaignRequest.requestHeaders:type_name -> farm.nurture.core.contracts.common.RequestHeaders
	42, // 13: farm.nurture.core.contracts.workflows.generalgo.ExecuteUserJourneyCampaignRequest.waitDuration:type_name -> google.protobuf.Duration
	38, // 14: farm.nurture.core.contracts.workflows.generalgo.ExecuteUserJourneyCampaignResponse.status:type_name -> farm.nurture.core.contracts.common.ResponseStatus
	43, // 15: farm.nurture.core.contracts.workflows.generalgo.ExecuteCampaignRequest.campaignScheduleType:type_name -> farm.nurture.core.contracts.common.CampaignScheduleType
	42, // 16: farm.nurture.core.contracts.workflows.generalgo.ExecuteCampaignRequest.inactionDuration:type_name -> google.protobuf.Duration
	38, // 17: farm.nurture.core.contracts.workflows.generalgo.ExecuteCampaignResponse.status:type_name -> farm.nurture.core.contracts.common.ResponseStatus
	39, // 18: farm.nurture.core.contracts.workflows.generalgo.RefreshUserContentRequest.actor:type_name -> farm.nurture.core.contracts.common.ActorID
	40, // 19: farm.nurture.core.contracts.workflows.generalgo.RefreshUserContentRequest.languageCodes:type_name -> farm.nurture.core.contracts.common.LanguageCode
	38, // 20: farm.nurture.core.contracts.workflows.generalgo.RefreshUserContentResponse.status:type_name -> farm.nurture.core.contracts.common.ResponseStatus
	38, // 21: farm.nurture.core.contracts.workflows.generalgo.PreventiveMaintenanceTriggerResponse.status:type_name -> farm.nurture.core.contracts.common.ResponseStatus
	39, // 22: farm.nurture.core.contracts.workflows.generalgo.UpdateActorsMachinePreventiveMaintenanceRequest.actorDetails:type_name -> farm.nurture.core.contracts.common.ActorID
	44, // 23: farm.nurture.core.contracts.workflows.generalgo.UpdateActorsMachinePreventiveMaintenanceRequest.pmStatus:type_name -> farm.nurture.core.contracts.ms.PreventiveMaintenanceStatus
	38, // 24: farm.nurture.core.contracts.workflows.generalgo.UpdateActorsMachinePreventiveMaintenanceResponse.status:type_name -> farm.nurture.core.contracts.common.ResponseStatus
	38, // 25: farm.nurture.core.contracts.workflows.generalgo.RescheduleMachinePreventiveMaintenanceResponse.status:type_name -> farm.nurture.core.contracts.common.ResponseStatus
	39, // 26: farm.nurture.core.contracts.workflows.generalgo.HandoverOtpRequest.actorDetails:type_name -> farm.nurture.core.contracts.common.ActorID
	38, // 27: farm.nurture.core.contracts.workflows.generalgo.HandoverOtpResponse.status:type_name -> farm.nurture.core.contracts.common.ResponseStatus
	39, // 28: farm.nurture.core.contracts.workflows.generalgo.OfferRewardRequest.userDetails:type_name -> farm.nurture.core.contracts.common.ActorID
	45, // 29: farm.nurture.core.contracts.workflows.generalgo.OfferRewardRequest.userActionType:type_name -> farm.nurture.core.contracts.common.UserActionType
	46, // 30: farm.nurture.core.contracts.workflows.generalgo.OfferRewardRequest.rewardType:type_name -> farm.nurture.core.contracts.common.RewardType
	47, // 31: farm.nurture.core.contracts.workflows.generalgo.OfferRewardRequest.allottedTime:type_name -> google.protobuf.Timestamp
	47, // 32: farm.nurture.core.contracts.workflows.generalgo.OfferRewardRequest.validFrom:type_name -> google.protobuf.Timestamp
	47, // 33: farm.nurture.core.contracts.workflows.generalgo.OfferRewardRequest.validTo:type_name -> google.protobuf.Timestamp
	25, // 34: farm.nurture.core.contracts.workflows.generalgo.OfferRewardRequest.attributes:type_name -> farm.nurture.core.contracts.workflows.generalgo.Attributes
	0,  // 35: farm.nurture.core.contracts.workflows.generalgo.OfferRewardRequest.status:type_name -> farm.nurture.core.contracts.workflows.generalgo.Status
	47, // 36: farm.nurture.core.contracts.workflows.generalgo.OfferRewardRequest.createdAt:type_name -> google.protobuf.Timestamp
	47, // 37: farm.nurture.core.contracts.workflows.generalgo.OfferRewardRequest.updatedAt:type_name -> google.protobuf.Timestamp
	38, // 38: farm.nurture.core.contracts.workflows.generalgo.OfferRewardResponse.status:type_name -> farm.nurture.core.contracts.common.ResponseStatus
	39, // 39: farm.nurture.core.contracts.workflows.generalgo.DiscountedSprayServiceRequest.userDetails:type_name -> farm.nurture.core.contracts.common.ActorID
	39, // 40: farm.nurture.core.contracts.workflows.generalgo.OfferInsuranceRewardRequest.userDetails:type_name -> farm.nurture.core.contracts.common.ActorID
	48, // 41: farm.nurture.core.contracts.workflows.generalgo.OfferInsuranceRewardRequest.location:type_name -> farm.nurture.core.contracts.common.Location
	49, // 42: farm.nurture.core.contracts.workflows.generalgo.OfferInsuranceRewardRequest.paymentMethod:type_name -> farm.nurture.core.contracts.common.PaymentMethod
	40, // 43: farm.nurture.core.contracts.workflows.generalgo.OfferInsuranceRewardRequest.languageCode:type_name -> farm.nurture.core.contracts.common.LanguageCode
	25, // 44: farm.nurture.core.contracts.workflows.generalgo.OfferInsuranceRewardRequest.attributes:type_name -> farm.nurture.core.contracts.workflows.generalgo.Attributes
	46, // 45: farm.nurture.core.contracts.workflows.generalgo.OfferInsuranceRewardRequest.rewardType:type_name -> farm.nurture.core.contracts.common.RewardType
	38, // 46: farm.nurture.core.contracts.workflows.generalgo.OfferInsuranceRewardResponse.status:type_name -> farm.nurture.core.contracts.common.ResponseStatus
	38, // 47: farm.nurture.core.contracts.workflows.generalgo.CreatePartitionsResponse.status:type_name -> farm.nurture.core.contracts.common.ResponseStatus
	38, // 48: farm.nurture.core.contracts.workflows.generalgo.TriggerF2FPointExpiryCronResponse.status:type_name -> farm.nurture.core.contracts.common.ResponseStatus
	39, // 49: farm.nurture.core.contracts.workflows.generalgo.InsurancePurchaseEventRequest.actorId:type_name -> farm.nurture.core.contracts.common.ActorID
	50, // 50: farm.nurture.core.contracts.workflows.generalgo.InsurancePurchaseEventRequest.serviceType:type_name -> farm.nurture.core.contracts.InsuranceService.ServiceType
	38, // 51: farm.nurture.core.contracts.workflows.generalgo.InsurancePurchaseEventResponse.status:type_name -> farm.nurture.core.contracts.common.ResponseStatus
	26, // 52: farm.nurture.core.contracts.workflows.generalgo.GeneralGoWorkflows.OfferReward:input_type -> farm.nurture.core.contracts.workflows.generalgo.OfferRewardRequest
	28, // 53: farm.nurture.core.contracts.workflows.generalgo.GeneralGoWorkflows.OfferDiscountedSprayService:input_type -> farm.nurture.core.contracts.workflows.generalgo.DiscountedSprayServiceRequest
	23, // 54: farm.nurture.core.contracts.workflows.generalgo.GeneralGoWorkflows.HandoverOtp:input_type -> farm.nurture.core.contracts.workflows.generalgo.HandoverOtpRequest
	21, // 55: farm.nurture.core.contracts.workflows.generalgo.GeneralGoWorkflows.RescheduleMachinePreventiveMaintenance:input_type -> farm.nurture.core.contracts.workflows.generalgo.RescheduleMachinePreventiveMaintenanceRequest
	19, // 56: farm.nurture.core.contracts.workflows.generalgo.GeneralGoWorkflows.UpdateActorsMachinePreventiveMaintenance:input_type -> farm.nurture.core.contracts.workflows.generalgo.UpdateActorsMachinePreventiveMaintenanceRequest
	17, // 57: farm.nurture.core.contracts.workflows.generalgo.GeneralGoWorkflows.PreventiveMaintenanceTrigger:input_type -> farm.nurture.core.contracts.workflows.generalgo.PreventiveMaintenanceTriggerRequest
	15, // 58: farm.nurture.core.contracts.workflows.generalgo.GeneralGoWorkflows.RefreshUserContent:input_type -> farm.nurture.core.contracts.workflows.generalgo.RefreshUserContentRequest
	13, // 59: farm.nurture.core.contracts.workflows.generalgo.GeneralGoWorkflows.ExecuteCampaign:input_type -> farm.nurture.core.contracts.workflows.generalgo.ExecuteCampaignRequest
	7,  // 60: farm.nurture.core.contracts.workflows.generalgo.GeneralGoWorkflows.PostServiceFeedbackPN:input_type -> farm.nurture.core.contracts.workflows.generalgo.PostServiceFeedbackPNRequest
	8,  // 61: farm.nurture.core.contracts.workflows.generalgo.GeneralGoWorkflows.PostPusaSprayPopUp:input_type -> farm.nurture.core.contracts.workflows.generalgo.PostPusaSprayPopUpRequest
	5,  // 62: farm.nurture.core.contracts.workflows.generalgo.GeneralGoWorkflows.IotComputation:input_type -> farm.nurture.core.contracts.workflows.generalgo.IotComputationRequest
	11, // 63: farm.nurture.core.contracts.workflows.generalgo.GeneralGoWorkflows.ExecuteUserJourneyCampaign:input_type -> farm.nurture.core.contracts.workflows.generalgo.ExecuteUserJourneyCampaignRequest
	29, // 64: farm.nurture.core.contracts.workflows.generalgo.GeneralGoWorkflows.OfferInsuranceRewards:input_type -> farm.nurture.core.contracts.workflows.generalgo.OfferInsuranceRewardRequest
	31, // 65: farm.nurture.core.contracts.workflows.generalgo.GeneralGoWorkflows.CreatePartitions:input_type -> farm.nurture.core.contracts.workflows.generalgo.CreatePartitionsRequest
	33, // 66: farm.nurture.core.contracts.workflows.generalgo.GeneralGoWorkflows.TriggerF2FPointExpiryCron:input_type -> farm.nurture.core.contracts.workflows.generalgo.TriggerF2FPointExpiryCronRequest
	35, // 67: farm.nurture.core.contracts.workflows.generalgo.GeneralGoWorkflows.SendInsurancePurchaseEvent:input_type -> farm.nurture.core.contracts.workflows.generalgo.InsurancePurchaseEventRequest
	3,  // 68: farm.nurture.core.contracts.workflows.generalgo.GeneralGoWorkflows.ExecuteScoreComputation:input_type -> farm.nurture.core.contracts.workflows.generalgo.ScoreComputationRequest
	27, // 69: farm.nurture.core.contracts.workflows.generalgo.GeneralGoWorkflows.OfferReward:output_type -> farm.nurture.core.contracts.workflows.generalgo.OfferRewardResponse
	27, // 70: farm.nurture.core.contracts.workflows.generalgo.GeneralGoWorkflows.OfferDiscountedSprayService:output_type -> farm.nurture.core.contracts.workflows.generalgo.OfferRewardResponse
	24, // 71: farm.nurture.core.contracts.workflows.generalgo.GeneralGoWorkflows.HandoverOtp:output_type -> farm.nurture.core.contracts.workflows.generalgo.HandoverOtpResponse
	22, // 72: farm.nurture.core.contracts.workflows.generalgo.GeneralGoWorkflows.RescheduleMachinePreventiveMaintenance:output_type -> farm.nurture.core.contracts.workflows.generalgo.RescheduleMachinePreventiveMaintenanceResponse
	20, // 73: farm.nurture.core.contracts.workflows.generalgo.GeneralGoWorkflows.UpdateActorsMachinePreventiveMaintenance:output_type -> farm.nurture.core.contracts.workflows.generalgo.UpdateActorsMachinePreventiveMaintenanceResponse
	18, // 74: farm.nurture.core.contracts.workflows.generalgo.GeneralGoWorkflows.PreventiveMaintenanceTrigger:output_type -> farm.nurture.core.contracts.workflows.generalgo.PreventiveMaintenanceTriggerResponse
	16, // 75: farm.nurture.core.contracts.workflows.generalgo.GeneralGoWorkflows.RefreshUserContent:output_type -> farm.nurture.core.contracts.workflows.generalgo.RefreshUserContentResponse
	14, // 76: farm.nurture.core.contracts.workflows.generalgo.GeneralGoWorkflows.ExecuteCampaign:output_type -> farm.nurture.core.contracts.workflows.generalgo.ExecuteCampaignResponse
	9,  // 77: farm.nurture.core.contracts.workflows.generalgo.GeneralGoWorkflows.PostServiceFeedbackPN:output_type -> farm.nurture.core.contracts.workflows.generalgo.PostServiceFeedbackPNResponse
	10, // 78: farm.nurture.core.contracts.workflows.generalgo.GeneralGoWorkflows.PostPusaSprayPopUp:output_type -> farm.nurture.core.contracts.workflows.generalgo.PostPusaSprayPopUpResponse
	6,  // 79: farm.nurture.core.contracts.workflows.generalgo.GeneralGoWorkflows.IotComputation:output_type -> farm.nurture.core.contracts.workflows.generalgo.IotComputationResponse
	12, // 80: farm.nurture.core.contracts.workflows.generalgo.GeneralGoWorkflows.ExecuteUserJourneyCampaign:output_type -> farm.nurture.core.contracts.workflows.generalgo.ExecuteUserJourneyCampaignResponse
	30, // 81: farm.nurture.core.contracts.workflows.generalgo.GeneralGoWorkflows.OfferInsuranceRewards:output_type -> farm.nurture.core.contracts.workflows.generalgo.OfferInsuranceRewardResponse
	32, // 82: farm.nurture.core.contracts.workflows.generalgo.GeneralGoWorkflows.CreatePartitions:output_type -> farm.nurture.core.contracts.workflows.generalgo.CreatePartitionsResponse
	34, // 83: farm.nurture.core.contracts.workflows.generalgo.GeneralGoWorkflows.TriggerF2FPointExpiryCron:output_type -> farm.nurture.core.contracts.workflows.generalgo.TriggerF2FPointExpiryCronResponse
	36, // 84: farm.nurture.core.contracts.workflows.generalgo.GeneralGoWorkflows.SendInsurancePurchaseEvent:output_type -> farm.nurture.core.contracts.workflows.generalgo.InsurancePurchaseEventResponse
	4,  // 85: farm.nurture.core.contracts.workflows.generalgo.GeneralGoWorkflows.ExecuteScoreComputation:output_type -> farm.nurture.core.contracts.workflows.generalgo.ScoreComputationResponse
	69, // [69:86] is the sub-list for method output_type
	52, // [52:69] is the sub-list for method input_type
	52, // [52:52] is the sub-list for extension type_name
	52, // [52:52] is the sub-list for extension extendee
	0,  // [0:52] is the sub-list for field type_name
}

func init() { file_Workflows_GeneralGoWorkflows_general_go_workflows_proto_init() }
func file_Workflows_GeneralGoWorkflows_general_go_workflows_proto_init() {
	if File_Workflows_GeneralGoWorkflows_general_go_workflows_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_Workflows_GeneralGoWorkflows_general_go_workflows_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClearStaleCreatedOrderRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Workflows_GeneralGoWorkflows_general_go_workflows_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClearStaleCreatedOrderResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Workflows_GeneralGoWorkflows_general_go_workflows_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScoreComputationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Workflows_GeneralGoWorkflows_general_go_workflows_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScoreComputationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Workflows_GeneralGoWorkflows_general_go_workflows_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IotComputationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Workflows_GeneralGoWorkflows_general_go_workflows_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IotComputationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Workflows_GeneralGoWorkflows_general_go_workflows_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PostServiceFeedbackPNRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Workflows_GeneralGoWorkflows_general_go_workflows_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PostPusaSprayPopUpRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Workflows_GeneralGoWorkflows_general_go_workflows_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PostServiceFeedbackPNResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Workflows_GeneralGoWorkflows_general_go_workflows_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PostPusaSprayPopUpResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Workflows_GeneralGoWorkflows_general_go_workflows_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExecuteUserJourneyCampaignRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Workflows_GeneralGoWorkflows_general_go_workflows_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExecuteUserJourneyCampaignResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Workflows_GeneralGoWorkflows_general_go_workflows_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExecuteCampaignRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Workflows_GeneralGoWorkflows_general_go_workflows_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExecuteCampaignResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Workflows_GeneralGoWorkflows_general_go_workflows_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RefreshUserContentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Workflows_GeneralGoWorkflows_general_go_workflows_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RefreshUserContentResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Workflows_GeneralGoWorkflows_general_go_workflows_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PreventiveMaintenanceTriggerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Workflows_GeneralGoWorkflows_general_go_workflows_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PreventiveMaintenanceTriggerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Workflows_GeneralGoWorkflows_general_go_workflows_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateActorsMachinePreventiveMaintenanceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Workflows_GeneralGoWorkflows_general_go_workflows_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateActorsMachinePreventiveMaintenanceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Workflows_GeneralGoWorkflows_general_go_workflows_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RescheduleMachinePreventiveMaintenanceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Workflows_GeneralGoWorkflows_general_go_workflows_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RescheduleMachinePreventiveMaintenanceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Workflows_GeneralGoWorkflows_general_go_workflows_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HandoverOtpRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Workflows_GeneralGoWorkflows_general_go_workflows_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HandoverOtpResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Workflows_GeneralGoWorkflows_general_go_workflows_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Attributes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Workflows_GeneralGoWorkflows_general_go_workflows_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OfferRewardRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Workflows_GeneralGoWorkflows_general_go_workflows_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OfferRewardResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Workflows_GeneralGoWorkflows_general_go_workflows_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DiscountedSprayServiceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Workflows_GeneralGoWorkflows_general_go_workflows_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OfferInsuranceRewardRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Workflows_GeneralGoWorkflows_general_go_workflows_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OfferInsuranceRewardResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Workflows_GeneralGoWorkflows_general_go_workflows_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreatePartitionsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Workflows_GeneralGoWorkflows_general_go_workflows_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreatePartitionsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Workflows_GeneralGoWorkflows_general_go_workflows_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TriggerF2FPointExpiryCronRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Workflows_GeneralGoWorkflows_general_go_workflows_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TriggerF2FPointExpiryCronResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Workflows_GeneralGoWorkflows_general_go_workflows_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InsurancePurchaseEventRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Workflows_GeneralGoWorkflows_general_go_workflows_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InsurancePurchaseEventResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_Workflows_GeneralGoWorkflows_general_go_workflows_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   36,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_Workflows_GeneralGoWorkflows_general_go_workflows_proto_goTypes,
		DependencyIndexes: file_Workflows_GeneralGoWorkflows_general_go_workflows_proto_depIdxs,
		EnumInfos:         file_Workflows_GeneralGoWorkflows_general_go_workflows_proto_enumTypes,
		MessageInfos:      file_Workflows_GeneralGoWorkflows_general_go_workflows_proto_msgTypes,
	}.Build()
	File_Workflows_GeneralGoWorkflows_general_go_workflows_proto = out.File
	file_Workflows_GeneralGoWorkflows_general_go_workflows_proto_rawDesc = nil
	file_Workflows_GeneralGoWorkflows_general_go_workflows_proto_goTypes = nil
	file_Workflows_GeneralGoWorkflows_general_go_workflows_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// GeneralGoWorkflowsClient is the client API for GeneralGoWorkflows service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type GeneralGoWorkflowsClient interface {
	OfferReward(ctx context.Context, in *OfferRewardRequest, opts ...grpc.CallOption) (*OfferRewardResponse, error)
	OfferDiscountedSprayService(ctx context.Context, in *DiscountedSprayServiceRequest, opts ...grpc.CallOption) (*OfferRewardResponse, error)
	HandoverOtp(ctx context.Context, in *HandoverOtpRequest, opts ...grpc.CallOption) (*HandoverOtpResponse, error)
	RescheduleMachinePreventiveMaintenance(ctx context.Context, in *RescheduleMachinePreventiveMaintenanceRequest, opts ...grpc.CallOption) (*RescheduleMachinePreventiveMaintenanceResponse, error)
	UpdateActorsMachinePreventiveMaintenance(ctx context.Context, in *UpdateActorsMachinePreventiveMaintenanceRequest, opts ...grpc.CallOption) (*UpdateActorsMachinePreventiveMaintenanceResponse, error)
	PreventiveMaintenanceTrigger(ctx context.Context, in *PreventiveMaintenanceTriggerRequest, opts ...grpc.CallOption) (*PreventiveMaintenanceTriggerResponse, error)
	RefreshUserContent(ctx context.Context, in *RefreshUserContentRequest, opts ...grpc.CallOption) (*RefreshUserContentResponse, error)
	ExecuteCampaign(ctx context.Context, in *ExecuteCampaignRequest, opts ...grpc.CallOption) (*ExecuteCampaignResponse, error)
	PostServiceFeedbackPN(ctx context.Context, in *PostServiceFeedbackPNRequest, opts ...grpc.CallOption) (*PostServiceFeedbackPNResponse, error)
	PostPusaSprayPopUp(ctx context.Context, in *PostPusaSprayPopUpRequest, opts ...grpc.CallOption) (*PostPusaSprayPopUpResponse, error)
	IotComputation(ctx context.Context, in *IotComputationRequest, opts ...grpc.CallOption) (*IotComputationResponse, error)
	ExecuteUserJourneyCampaign(ctx context.Context, in *ExecuteUserJourneyCampaignRequest, opts ...grpc.CallOption) (*ExecuteUserJourneyCampaignResponse, error)
	OfferInsuranceRewards(ctx context.Context, in *OfferInsuranceRewardRequest, opts ...grpc.CallOption) (*OfferInsuranceRewardResponse, error)
	CreatePartitions(ctx context.Context, in *CreatePartitionsRequest, opts ...grpc.CallOption) (*CreatePartitionsResponse, error)
	TriggerF2FPointExpiryCron(ctx context.Context, in *TriggerF2FPointExpiryCronRequest, opts ...grpc.CallOption) (*TriggerF2FPointExpiryCronResponse, error)
	SendInsurancePurchaseEvent(ctx context.Context, in *InsurancePurchaseEventRequest, opts ...grpc.CallOption) (*InsurancePurchaseEventResponse, error)
	ExecuteScoreComputation(ctx context.Context, in *ScoreComputationRequest, opts ...grpc.CallOption) (*ScoreComputationResponse, error)
}

type generalGoWorkflowsClient struct {
	cc grpc.ClientConnInterface
}

func NewGeneralGoWorkflowsClient(cc grpc.ClientConnInterface) GeneralGoWorkflowsClient {
	return &generalGoWorkflowsClient{cc}
}

func (c *generalGoWorkflowsClient) OfferReward(ctx context.Context, in *OfferRewardRequest, opts ...grpc.CallOption) (*OfferRewardResponse, error) {
	out := new(OfferRewardResponse)
	err := c.cc.Invoke(ctx, "/farm.nurture.core.contracts.workflows.generalgo.GeneralGoWorkflows/OfferReward", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *generalGoWorkflowsClient) OfferDiscountedSprayService(ctx context.Context, in *DiscountedSprayServiceRequest, opts ...grpc.CallOption) (*OfferRewardResponse, error) {
	out := new(OfferRewardResponse)
	err := c.cc.Invoke(ctx, "/farm.nurture.core.contracts.workflows.generalgo.GeneralGoWorkflows/OfferDiscountedSprayService", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *generalGoWorkflowsClient) HandoverOtp(ctx context.Context, in *HandoverOtpRequest, opts ...grpc.CallOption) (*HandoverOtpResponse, error) {
	out := new(HandoverOtpResponse)
	err := c.cc.Invoke(ctx, "/farm.nurture.core.contracts.workflows.generalgo.GeneralGoWorkflows/HandoverOtp", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *generalGoWorkflowsClient) RescheduleMachinePreventiveMaintenance(ctx context.Context, in *RescheduleMachinePreventiveMaintenanceRequest, opts ...grpc.CallOption) (*RescheduleMachinePreventiveMaintenanceResponse, error) {
	out := new(RescheduleMachinePreventiveMaintenanceResponse)
	err := c.cc.Invoke(ctx, "/farm.nurture.core.contracts.workflows.generalgo.GeneralGoWorkflows/RescheduleMachinePreventiveMaintenance", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *generalGoWorkflowsClient) UpdateActorsMachinePreventiveMaintenance(ctx context.Context, in *UpdateActorsMachinePreventiveMaintenanceRequest, opts ...grpc.CallOption) (*UpdateActorsMachinePreventiveMaintenanceResponse, error) {
	out := new(UpdateActorsMachinePreventiveMaintenanceResponse)
	err := c.cc.Invoke(ctx, "/farm.nurture.core.contracts.workflows.generalgo.GeneralGoWorkflows/UpdateActorsMachinePreventiveMaintenance", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *generalGoWorkflowsClient) PreventiveMaintenanceTrigger(ctx context.Context, in *PreventiveMaintenanceTriggerRequest, opts ...grpc.CallOption) (*PreventiveMaintenanceTriggerResponse, error) {
	out := new(PreventiveMaintenanceTriggerResponse)
	err := c.cc.Invoke(ctx, "/farm.nurture.core.contracts.workflows.generalgo.GeneralGoWorkflows/PreventiveMaintenanceTrigger", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *generalGoWorkflowsClient) RefreshUserContent(ctx context.Context, in *RefreshUserContentRequest, opts ...grpc.CallOption) (*RefreshUserContentResponse, error) {
	out := new(RefreshUserContentResponse)
	err := c.cc.Invoke(ctx, "/farm.nurture.core.contracts.workflows.generalgo.GeneralGoWorkflows/RefreshUserContent", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *generalGoWorkflowsClient) ExecuteCampaign(ctx context.Context, in *ExecuteCampaignRequest, opts ...grpc.CallOption) (*ExecuteCampaignResponse, error) {
	out := new(ExecuteCampaignResponse)
	err := c.cc.Invoke(ctx, "/farm.nurture.core.contracts.workflows.generalgo.GeneralGoWorkflows/ExecuteCampaign", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *generalGoWorkflowsClient) PostServiceFeedbackPN(ctx context.Context, in *PostServiceFeedbackPNRequest, opts ...grpc.CallOption) (*PostServiceFeedbackPNResponse, error) {
	out := new(PostServiceFeedbackPNResponse)
	err := c.cc.Invoke(ctx, "/farm.nurture.core.contracts.workflows.generalgo.GeneralGoWorkflows/PostServiceFeedbackPN", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *generalGoWorkflowsClient) PostPusaSprayPopUp(ctx context.Context, in *PostPusaSprayPopUpRequest, opts ...grpc.CallOption) (*PostPusaSprayPopUpResponse, error) {
	out := new(PostPusaSprayPopUpResponse)
	err := c.cc.Invoke(ctx, "/farm.nurture.core.contracts.workflows.generalgo.GeneralGoWorkflows/PostPusaSprayPopUp", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *generalGoWorkflowsClient) IotComputation(ctx context.Context, in *IotComputationRequest, opts ...grpc.CallOption) (*IotComputationResponse, error) {
	out := new(IotComputationResponse)
	err := c.cc.Invoke(ctx, "/farm.nurture.core.contracts.workflows.generalgo.GeneralGoWorkflows/IotComputation", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *generalGoWorkflowsClient) ExecuteUserJourneyCampaign(ctx context.Context, in *ExecuteUserJourneyCampaignRequest, opts ...grpc.CallOption) (*ExecuteUserJourneyCampaignResponse, error) {
	out := new(ExecuteUserJourneyCampaignResponse)
	err := c.cc.Invoke(ctx, "/farm.nurture.core.contracts.workflows.generalgo.GeneralGoWorkflows/ExecuteUserJourneyCampaign", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *generalGoWorkflowsClient) OfferInsuranceRewards(ctx context.Context, in *OfferInsuranceRewardRequest, opts ...grpc.CallOption) (*OfferInsuranceRewardResponse, error) {
	out := new(OfferInsuranceRewardResponse)
	err := c.cc.Invoke(ctx, "/farm.nurture.core.contracts.workflows.generalgo.GeneralGoWorkflows/OfferInsuranceRewards", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *generalGoWorkflowsClient) CreatePartitions(ctx context.Context, in *CreatePartitionsRequest, opts ...grpc.CallOption) (*CreatePartitionsResponse, error) {
	out := new(CreatePartitionsResponse)
	err := c.cc.Invoke(ctx, "/farm.nurture.core.contracts.workflows.generalgo.GeneralGoWorkflows/CreatePartitions", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *generalGoWorkflowsClient) TriggerF2FPointExpiryCron(ctx context.Context, in *TriggerF2FPointExpiryCronRequest, opts ...grpc.CallOption) (*TriggerF2FPointExpiryCronResponse, error) {
	out := new(TriggerF2FPointExpiryCronResponse)
	err := c.cc.Invoke(ctx, "/farm.nurture.core.contracts.workflows.generalgo.GeneralGoWorkflows/TriggerF2FPointExpiryCron", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *generalGoWorkflowsClient) SendInsurancePurchaseEvent(ctx context.Context, in *InsurancePurchaseEventRequest, opts ...grpc.CallOption) (*InsurancePurchaseEventResponse, error) {
	out := new(InsurancePurchaseEventResponse)
	err := c.cc.Invoke(ctx, "/farm.nurture.core.contracts.workflows.generalgo.GeneralGoWorkflows/SendInsurancePurchaseEvent", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *generalGoWorkflowsClient) ExecuteScoreComputation(ctx context.Context, in *ScoreComputationRequest, opts ...grpc.CallOption) (*ScoreComputationResponse, error) {
	out := new(ScoreComputationResponse)
	err := c.cc.Invoke(ctx, "/farm.nurture.core.contracts.workflows.generalgo.GeneralGoWorkflows/ExecuteScoreComputation", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// GeneralGoWorkflowsServer is the server API for GeneralGoWorkflows service.
type GeneralGoWorkflowsServer interface {
	OfferReward(context.Context, *OfferRewardRequest) (*OfferRewardResponse, error)
	OfferDiscountedSprayService(context.Context, *DiscountedSprayServiceRequest) (*OfferRewardResponse, error)
	HandoverOtp(context.Context, *HandoverOtpRequest) (*HandoverOtpResponse, error)
	RescheduleMachinePreventiveMaintenance(context.Context, *RescheduleMachinePreventiveMaintenanceRequest) (*RescheduleMachinePreventiveMaintenanceResponse, error)
	UpdateActorsMachinePreventiveMaintenance(context.Context, *UpdateActorsMachinePreventiveMaintenanceRequest) (*UpdateActorsMachinePreventiveMaintenanceResponse, error)
	PreventiveMaintenanceTrigger(context.Context, *PreventiveMaintenanceTriggerRequest) (*PreventiveMaintenanceTriggerResponse, error)
	RefreshUserContent(context.Context, *RefreshUserContentRequest) (*RefreshUserContentResponse, error)
	ExecuteCampaign(context.Context, *ExecuteCampaignRequest) (*ExecuteCampaignResponse, error)
	PostServiceFeedbackPN(context.Context, *PostServiceFeedbackPNRequest) (*PostServiceFeedbackPNResponse, error)
	PostPusaSprayPopUp(context.Context, *PostPusaSprayPopUpRequest) (*PostPusaSprayPopUpResponse, error)
	IotComputation(context.Context, *IotComputationRequest) (*IotComputationResponse, error)
	ExecuteUserJourneyCampaign(context.Context, *ExecuteUserJourneyCampaignRequest) (*ExecuteUserJourneyCampaignResponse, error)
	OfferInsuranceRewards(context.Context, *OfferInsuranceRewardRequest) (*OfferInsuranceRewardResponse, error)
	CreatePartitions(context.Context, *CreatePartitionsRequest) (*CreatePartitionsResponse, error)
	TriggerF2FPointExpiryCron(context.Context, *TriggerF2FPointExpiryCronRequest) (*TriggerF2FPointExpiryCronResponse, error)
	SendInsurancePurchaseEvent(context.Context, *InsurancePurchaseEventRequest) (*InsurancePurchaseEventResponse, error)
	ExecuteScoreComputation(context.Context, *ScoreComputationRequest) (*ScoreComputationResponse, error)
}

// UnimplementedGeneralGoWorkflowsServer can be embedded to have forward compatible implementations.
type UnimplementedGeneralGoWorkflowsServer struct {
}

func (*UnimplementedGeneralGoWorkflowsServer) OfferReward(context.Context, *OfferRewardRequest) (*OfferRewardResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method OfferReward not implemented")
}
func (*UnimplementedGeneralGoWorkflowsServer) OfferDiscountedSprayService(context.Context, *DiscountedSprayServiceRequest) (*OfferRewardResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method OfferDiscountedSprayService not implemented")
}
func (*UnimplementedGeneralGoWorkflowsServer) HandoverOtp(context.Context, *HandoverOtpRequest) (*HandoverOtpResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method HandoverOtp not implemented")
}
func (*UnimplementedGeneralGoWorkflowsServer) RescheduleMachinePreventiveMaintenance(context.Context, *RescheduleMachinePreventiveMaintenanceRequest) (*RescheduleMachinePreventiveMaintenanceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RescheduleMachinePreventiveMaintenance not implemented")
}
func (*UnimplementedGeneralGoWorkflowsServer) UpdateActorsMachinePreventiveMaintenance(context.Context, *UpdateActorsMachinePreventiveMaintenanceRequest) (*UpdateActorsMachinePreventiveMaintenanceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateActorsMachinePreventiveMaintenance not implemented")
}
func (*UnimplementedGeneralGoWorkflowsServer) PreventiveMaintenanceTrigger(context.Context, *PreventiveMaintenanceTriggerRequest) (*PreventiveMaintenanceTriggerResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PreventiveMaintenanceTrigger not implemented")
}
func (*UnimplementedGeneralGoWorkflowsServer) RefreshUserContent(context.Context, *RefreshUserContentRequest) (*RefreshUserContentResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RefreshUserContent not implemented")
}
func (*UnimplementedGeneralGoWorkflowsServer) ExecuteCampaign(context.Context, *ExecuteCampaignRequest) (*ExecuteCampaignResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ExecuteCampaign not implemented")
}
func (*UnimplementedGeneralGoWorkflowsServer) PostServiceFeedbackPN(context.Context, *PostServiceFeedbackPNRequest) (*PostServiceFeedbackPNResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PostServiceFeedbackPN not implemented")
}
func (*UnimplementedGeneralGoWorkflowsServer) PostPusaSprayPopUp(context.Context, *PostPusaSprayPopUpRequest) (*PostPusaSprayPopUpResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PostPusaSprayPopUp not implemented")
}
func (*UnimplementedGeneralGoWorkflowsServer) IotComputation(context.Context, *IotComputationRequest) (*IotComputationResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method IotComputation not implemented")
}
func (*UnimplementedGeneralGoWorkflowsServer) ExecuteUserJourneyCampaign(context.Context, *ExecuteUserJourneyCampaignRequest) (*ExecuteUserJourneyCampaignResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ExecuteUserJourneyCampaign not implemented")
}
func (*UnimplementedGeneralGoWorkflowsServer) OfferInsuranceRewards(context.Context, *OfferInsuranceRewardRequest) (*OfferInsuranceRewardResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method OfferInsuranceRewards not implemented")
}
func (*UnimplementedGeneralGoWorkflowsServer) CreatePartitions(context.Context, *CreatePartitionsRequest) (*CreatePartitionsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreatePartitions not implemented")
}
func (*UnimplementedGeneralGoWorkflowsServer) TriggerF2FPointExpiryCron(context.Context, *TriggerF2FPointExpiryCronRequest) (*TriggerF2FPointExpiryCronResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method TriggerF2FPointExpiryCron not implemented")
}
func (*UnimplementedGeneralGoWorkflowsServer) SendInsurancePurchaseEvent(context.Context, *InsurancePurchaseEventRequest) (*InsurancePurchaseEventResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SendInsurancePurchaseEvent not implemented")
}
func (*UnimplementedGeneralGoWorkflowsServer) ExecuteScoreComputation(context.Context, *ScoreComputationRequest) (*ScoreComputationResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ExecuteScoreComputation not implemented")
}

func RegisterGeneralGoWorkflowsServer(s *grpc.Server, srv GeneralGoWorkflowsServer) {
	s.RegisterService(&_GeneralGoWorkflows_serviceDesc, srv)
}

func _GeneralGoWorkflows_OfferReward_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(OfferRewardRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GeneralGoWorkflowsServer).OfferReward(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/farm.nurture.core.contracts.workflows.generalgo.GeneralGoWorkflows/OfferReward",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GeneralGoWorkflowsServer).OfferReward(ctx, req.(*OfferRewardRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GeneralGoWorkflows_OfferDiscountedSprayService_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DiscountedSprayServiceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GeneralGoWorkflowsServer).OfferDiscountedSprayService(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/farm.nurture.core.contracts.workflows.generalgo.GeneralGoWorkflows/OfferDiscountedSprayService",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GeneralGoWorkflowsServer).OfferDiscountedSprayService(ctx, req.(*DiscountedSprayServiceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GeneralGoWorkflows_HandoverOtp_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(HandoverOtpRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GeneralGoWorkflowsServer).HandoverOtp(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/farm.nurture.core.contracts.workflows.generalgo.GeneralGoWorkflows/HandoverOtp",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GeneralGoWorkflowsServer).HandoverOtp(ctx, req.(*HandoverOtpRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GeneralGoWorkflows_RescheduleMachinePreventiveMaintenance_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RescheduleMachinePreventiveMaintenanceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GeneralGoWorkflowsServer).RescheduleMachinePreventiveMaintenance(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/farm.nurture.core.contracts.workflows.generalgo.GeneralGoWorkflows/RescheduleMachinePreventiveMaintenance",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GeneralGoWorkflowsServer).RescheduleMachinePreventiveMaintenance(ctx, req.(*RescheduleMachinePreventiveMaintenanceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GeneralGoWorkflows_UpdateActorsMachinePreventiveMaintenance_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateActorsMachinePreventiveMaintenanceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GeneralGoWorkflowsServer).UpdateActorsMachinePreventiveMaintenance(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/farm.nurture.core.contracts.workflows.generalgo.GeneralGoWorkflows/UpdateActorsMachinePreventiveMaintenance",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GeneralGoWorkflowsServer).UpdateActorsMachinePreventiveMaintenance(ctx, req.(*UpdateActorsMachinePreventiveMaintenanceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GeneralGoWorkflows_PreventiveMaintenanceTrigger_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PreventiveMaintenanceTriggerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GeneralGoWorkflowsServer).PreventiveMaintenanceTrigger(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/farm.nurture.core.contracts.workflows.generalgo.GeneralGoWorkflows/PreventiveMaintenanceTrigger",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GeneralGoWorkflowsServer).PreventiveMaintenanceTrigger(ctx, req.(*PreventiveMaintenanceTriggerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GeneralGoWorkflows_RefreshUserContent_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RefreshUserContentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GeneralGoWorkflowsServer).RefreshUserContent(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/farm.nurture.core.contracts.workflows.generalgo.GeneralGoWorkflows/RefreshUserContent",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GeneralGoWorkflowsServer).RefreshUserContent(ctx, req.(*RefreshUserContentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GeneralGoWorkflows_ExecuteCampaign_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ExecuteCampaignRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GeneralGoWorkflowsServer).ExecuteCampaign(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/farm.nurture.core.contracts.workflows.generalgo.GeneralGoWorkflows/ExecuteCampaign",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GeneralGoWorkflowsServer).ExecuteCampaign(ctx, req.(*ExecuteCampaignRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GeneralGoWorkflows_PostServiceFeedbackPN_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PostServiceFeedbackPNRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GeneralGoWorkflowsServer).PostServiceFeedbackPN(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/farm.nurture.core.contracts.workflows.generalgo.GeneralGoWorkflows/PostServiceFeedbackPN",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GeneralGoWorkflowsServer).PostServiceFeedbackPN(ctx, req.(*PostServiceFeedbackPNRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GeneralGoWorkflows_PostPusaSprayPopUp_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PostPusaSprayPopUpRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GeneralGoWorkflowsServer).PostPusaSprayPopUp(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/farm.nurture.core.contracts.workflows.generalgo.GeneralGoWorkflows/PostPusaSprayPopUp",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GeneralGoWorkflowsServer).PostPusaSprayPopUp(ctx, req.(*PostPusaSprayPopUpRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GeneralGoWorkflows_IotComputation_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(IotComputationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GeneralGoWorkflowsServer).IotComputation(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/farm.nurture.core.contracts.workflows.generalgo.GeneralGoWorkflows/IotComputation",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GeneralGoWorkflowsServer).IotComputation(ctx, req.(*IotComputationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GeneralGoWorkflows_ExecuteUserJourneyCampaign_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ExecuteUserJourneyCampaignRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GeneralGoWorkflowsServer).ExecuteUserJourneyCampaign(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/farm.nurture.core.contracts.workflows.generalgo.GeneralGoWorkflows/ExecuteUserJourneyCampaign",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GeneralGoWorkflowsServer).ExecuteUserJourneyCampaign(ctx, req.(*ExecuteUserJourneyCampaignRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GeneralGoWorkflows_OfferInsuranceRewards_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(OfferInsuranceRewardRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GeneralGoWorkflowsServer).OfferInsuranceRewards(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/farm.nurture.core.contracts.workflows.generalgo.GeneralGoWorkflows/OfferInsuranceRewards",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GeneralGoWorkflowsServer).OfferInsuranceRewards(ctx, req.(*OfferInsuranceRewardRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GeneralGoWorkflows_CreatePartitions_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreatePartitionsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GeneralGoWorkflowsServer).CreatePartitions(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/farm.nurture.core.contracts.workflows.generalgo.GeneralGoWorkflows/CreatePartitions",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GeneralGoWorkflowsServer).CreatePartitions(ctx, req.(*CreatePartitionsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GeneralGoWorkflows_TriggerF2FPointExpiryCron_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TriggerF2FPointExpiryCronRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GeneralGoWorkflowsServer).TriggerF2FPointExpiryCron(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/farm.nurture.core.contracts.workflows.generalgo.GeneralGoWorkflows/TriggerF2FPointExpiryCron",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GeneralGoWorkflowsServer).TriggerF2FPointExpiryCron(ctx, req.(*TriggerF2FPointExpiryCronRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GeneralGoWorkflows_SendInsurancePurchaseEvent_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(InsurancePurchaseEventRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GeneralGoWorkflowsServer).SendInsurancePurchaseEvent(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/farm.nurture.core.contracts.workflows.generalgo.GeneralGoWorkflows/SendInsurancePurchaseEvent",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GeneralGoWorkflowsServer).SendInsurancePurchaseEvent(ctx, req.(*InsurancePurchaseEventRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GeneralGoWorkflows_ExecuteScoreComputation_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ScoreComputationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GeneralGoWorkflowsServer).ExecuteScoreComputation(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/farm.nurture.core.contracts.workflows.generalgo.GeneralGoWorkflows/ExecuteScoreComputation",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GeneralGoWorkflowsServer).ExecuteScoreComputation(ctx, req.(*ScoreComputationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _GeneralGoWorkflows_serviceDesc = grpc.ServiceDesc{
	ServiceName: "farm.nurture.core.contracts.workflows.generalgo.GeneralGoWorkflows",
	HandlerType: (*GeneralGoWorkflowsServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "OfferReward",
			Handler:    _GeneralGoWorkflows_OfferReward_Handler,
		},
		{
			MethodName: "OfferDiscountedSprayService",
			Handler:    _GeneralGoWorkflows_OfferDiscountedSprayService_Handler,
		},
		{
			MethodName: "HandoverOtp",
			Handler:    _GeneralGoWorkflows_HandoverOtp_Handler,
		},
		{
			MethodName: "RescheduleMachinePreventiveMaintenance",
			Handler:    _GeneralGoWorkflows_RescheduleMachinePreventiveMaintenance_Handler,
		},
		{
			MethodName: "UpdateActorsMachinePreventiveMaintenance",
			Handler:    _GeneralGoWorkflows_UpdateActorsMachinePreventiveMaintenance_Handler,
		},
		{
			MethodName: "PreventiveMaintenanceTrigger",
			Handler:    _GeneralGoWorkflows_PreventiveMaintenanceTrigger_Handler,
		},
		{
			MethodName: "RefreshUserContent",
			Handler:    _GeneralGoWorkflows_RefreshUserContent_Handler,
		},
		{
			MethodName: "ExecuteCampaign",
			Handler:    _GeneralGoWorkflows_ExecuteCampaign_Handler,
		},
		{
			MethodName: "PostServiceFeedbackPN",
			Handler:    _GeneralGoWorkflows_PostServiceFeedbackPN_Handler,
		},
		{
			MethodName: "PostPusaSprayPopUp",
			Handler:    _GeneralGoWorkflows_PostPusaSprayPopUp_Handler,
		},
		{
			MethodName: "IotComputation",
			Handler:    _GeneralGoWorkflows_IotComputation_Handler,
		},
		{
			MethodName: "ExecuteUserJourneyCampaign",
			Handler:    _GeneralGoWorkflows_ExecuteUserJourneyCampaign_Handler,
		},
		{
			MethodName: "OfferInsuranceRewards",
			Handler:    _GeneralGoWorkflows_OfferInsuranceRewards_Handler,
		},
		{
			MethodName: "CreatePartitions",
			Handler:    _GeneralGoWorkflows_CreatePartitions_Handler,
		},
		{
			MethodName: "TriggerF2FPointExpiryCron",
			Handler:    _GeneralGoWorkflows_TriggerF2FPointExpiryCron_Handler,
		},
		{
			MethodName: "SendInsurancePurchaseEvent",
			Handler:    _GeneralGoWorkflows_SendInsurancePurchaseEvent_Handler,
		},
		{
			MethodName: "ExecuteScoreComputation",
			Handler:    _GeneralGoWorkflows_ExecuteScoreComputation_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "Workflows/GeneralGoWorkflows/general_go_workflows.proto",
}
