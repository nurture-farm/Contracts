// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: LocationService/location_service.proto
#ifndef GRPC_LocationService_2flocation_5fservice_2eproto__INCLUDED
#define GRPC_LocationService_2flocation_5fservice_2eproto__INCLUDED

#include "LocationService/location_service.pb.h"

#include <functional>
#include <grpcpp/impl/codegen/async_generic_service.h>
#include <grpcpp/impl/codegen/async_stream.h>
#include <grpcpp/impl/codegen/async_unary_call.h>
#include <grpcpp/impl/codegen/client_callback.h>
#include <grpcpp/impl/codegen/client_context.h>
#include <grpcpp/impl/codegen/completion_queue.h>
#include <grpcpp/impl/codegen/message_allocator.h>
#include <grpcpp/impl/codegen/method_handler.h>
#include <grpcpp/impl/codegen/proto_utils.h>
#include <grpcpp/impl/codegen/rpc_method.h>
#include <grpcpp/impl/codegen/server_callback.h>
#include <grpcpp/impl/codegen/server_callback_handlers.h>
#include <grpcpp/impl/codegen/server_context.h>
#include <grpcpp/impl/codegen/service_type.h>
#include <grpcpp/impl/codegen/status.h>
#include <grpcpp/impl/codegen/stub_options.h>
#include <grpcpp/impl/codegen/sync_stream.h>

namespace farm {
namespace nurture {
namespace location {
namespace service {
namespace proto {

class LocationService final {
 public:
  static constexpr char const* service_full_name() {
    return "farm.nurture.location.service.proto.LocationService";
  }
  class StubInterface {
   public:
    virtual ~StubInterface() {}
    virtual ::grpc::Status ExecuteInsertLocation(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::InsertLocationRequest& request, ::farm::nurture::location::service::proto::InsertLocationResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::farm::nurture::location::service::proto::InsertLocationResponse>> AsyncExecuteInsertLocation(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::InsertLocationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::farm::nurture::location::service::proto::InsertLocationResponse>>(AsyncExecuteInsertLocationRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::farm::nurture::location::service::proto::InsertLocationResponse>> PrepareAsyncExecuteInsertLocation(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::InsertLocationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::farm::nurture::location::service::proto::InsertLocationResponse>>(PrepareAsyncExecuteInsertLocationRaw(context, request, cq));
    }
    virtual ::grpc::Status ExecuteInsertLocationBulk(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::BulkInsertLocationRequest& request, ::farm::nurture::location::service::proto::BulkInsertLocationResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::farm::nurture::location::service::proto::BulkInsertLocationResponse>> AsyncExecuteInsertLocationBulk(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::BulkInsertLocationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::farm::nurture::location::service::proto::BulkInsertLocationResponse>>(AsyncExecuteInsertLocationBulkRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::farm::nurture::location::service::proto::BulkInsertLocationResponse>> PrepareAsyncExecuteInsertLocationBulk(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::BulkInsertLocationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::farm::nurture::location::service::proto::BulkInsertLocationResponse>>(PrepareAsyncExecuteInsertLocationBulkRaw(context, request, cq));
    }
    virtual ::grpc::Status ExecuteInsertLocationS2Cell(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::InsertLocationS2CellRequest& request, ::farm::nurture::location::service::proto::InsertLocationS2CellResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::farm::nurture::location::service::proto::InsertLocationS2CellResponse>> AsyncExecuteInsertLocationS2Cell(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::InsertLocationS2CellRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::farm::nurture::location::service::proto::InsertLocationS2CellResponse>>(AsyncExecuteInsertLocationS2CellRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::farm::nurture::location::service::proto::InsertLocationS2CellResponse>> PrepareAsyncExecuteInsertLocationS2Cell(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::InsertLocationS2CellRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::farm::nurture::location::service::proto::InsertLocationS2CellResponse>>(PrepareAsyncExecuteInsertLocationS2CellRaw(context, request, cq));
    }
    virtual ::grpc::Status ExecuteInsertLocationS2CellBulk(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::BulkInsertLocationS2CellRequest& request, ::farm::nurture::location::service::proto::BulkInsertLocationS2CellResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::farm::nurture::location::service::proto::BulkInsertLocationS2CellResponse>> AsyncExecuteInsertLocationS2CellBulk(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::BulkInsertLocationS2CellRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::farm::nurture::location::service::proto::BulkInsertLocationS2CellResponse>>(AsyncExecuteInsertLocationS2CellBulkRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::farm::nurture::location::service::proto::BulkInsertLocationS2CellResponse>> PrepareAsyncExecuteInsertLocationS2CellBulk(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::BulkInsertLocationS2CellRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::farm::nurture::location::service::proto::BulkInsertLocationS2CellResponse>>(PrepareAsyncExecuteInsertLocationS2CellBulkRaw(context, request, cq));
    }
    virtual ::grpc::Status ExecuteInsertConfig(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::InsertConfigRequest& request, ::farm::nurture::location::service::proto::InsertConfigResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::farm::nurture::location::service::proto::InsertConfigResponse>> AsyncExecuteInsertConfig(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::InsertConfigRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::farm::nurture::location::service::proto::InsertConfigResponse>>(AsyncExecuteInsertConfigRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::farm::nurture::location::service::proto::InsertConfigResponse>> PrepareAsyncExecuteInsertConfig(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::InsertConfigRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::farm::nurture::location::service::proto::InsertConfigResponse>>(PrepareAsyncExecuteInsertConfigRaw(context, request, cq));
    }
    virtual ::grpc::Status ExecuteInsertConfigBulk(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::BulkInsertConfigRequest& request, ::farm::nurture::location::service::proto::BulkInsertConfigResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::farm::nurture::location::service::proto::BulkInsertConfigResponse>> AsyncExecuteInsertConfigBulk(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::BulkInsertConfigRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::farm::nurture::location::service::proto::BulkInsertConfigResponse>>(AsyncExecuteInsertConfigBulkRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::farm::nurture::location::service::proto::BulkInsertConfigResponse>> PrepareAsyncExecuteInsertConfigBulk(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::BulkInsertConfigRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::farm::nurture::location::service::proto::BulkInsertConfigResponse>>(PrepareAsyncExecuteInsertConfigBulkRaw(context, request, cq));
    }
    virtual ::grpc::Status ExecuteFetchLocationById(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::FetchLocationByIdRequest& request, ::farm::nurture::location::service::proto::Location* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::farm::nurture::location::service::proto::Location>> AsyncExecuteFetchLocationById(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::FetchLocationByIdRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::farm::nurture::location::service::proto::Location>>(AsyncExecuteFetchLocationByIdRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::farm::nurture::location::service::proto::Location>> PrepareAsyncExecuteFetchLocationById(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::FetchLocationByIdRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::farm::nurture::location::service::proto::Location>>(PrepareAsyncExecuteFetchLocationByIdRaw(context, request, cq));
    }
    virtual ::grpc::Status ExecuteFetchLocationByCodeAndNamespace(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::FetchLocationByCodeAndNamespaceRequest& request, ::farm::nurture::location::service::proto::Location* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::farm::nurture::location::service::proto::Location>> AsyncExecuteFetchLocationByCodeAndNamespace(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::FetchLocationByCodeAndNamespaceRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::farm::nurture::location::service::proto::Location>>(AsyncExecuteFetchLocationByCodeAndNamespaceRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::farm::nurture::location::service::proto::Location>> PrepareAsyncExecuteFetchLocationByCodeAndNamespace(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::FetchLocationByCodeAndNamespaceRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::farm::nurture::location::service::proto::Location>>(PrepareAsyncExecuteFetchLocationByCodeAndNamespaceRaw(context, request, cq));
    }
    virtual ::grpc::Status ExecuteFetchS2CellById(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::FetchS2CellByIdRequest& request, ::farm::nurture::location::service::proto::S2Cell* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::farm::nurture::location::service::proto::S2Cell>> AsyncExecuteFetchS2CellById(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::FetchS2CellByIdRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::farm::nurture::location::service::proto::S2Cell>>(AsyncExecuteFetchS2CellByIdRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::farm::nurture::location::service::proto::S2Cell>> PrepareAsyncExecuteFetchS2CellById(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::FetchS2CellByIdRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::farm::nurture::location::service::proto::S2Cell>>(PrepareAsyncExecuteFetchS2CellByIdRaw(context, request, cq));
    }
    virtual ::grpc::Status ExecuteFetchS2CellByLocation(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::FetchS2CellByLocationRequest& request, ::farm::nurture::location::service::proto::S2Cell* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::farm::nurture::location::service::proto::S2Cell>> AsyncExecuteFetchS2CellByLocation(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::FetchS2CellByLocationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::farm::nurture::location::service::proto::S2Cell>>(AsyncExecuteFetchS2CellByLocationRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::farm::nurture::location::service::proto::S2Cell>> PrepareAsyncExecuteFetchS2CellByLocation(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::FetchS2CellByLocationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::farm::nurture::location::service::proto::S2Cell>>(PrepareAsyncExecuteFetchS2CellByLocationRaw(context, request, cq));
    }
    virtual ::grpc::Status ExecuteFetchS2CellByLocationId(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::FetchS2CellByLocationIdRequest& request, ::farm::nurture::location::service::proto::LocationS2Cells* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::farm::nurture::location::service::proto::LocationS2Cells>> AsyncExecuteFetchS2CellByLocationId(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::FetchS2CellByLocationIdRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::farm::nurture::location::service::proto::LocationS2Cells>>(AsyncExecuteFetchS2CellByLocationIdRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::farm::nurture::location::service::proto::LocationS2Cells>> PrepareAsyncExecuteFetchS2CellByLocationId(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::FetchS2CellByLocationIdRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::farm::nurture::location::service::proto::LocationS2Cells>>(PrepareAsyncExecuteFetchS2CellByLocationIdRaw(context, request, cq));
    }
    virtual ::grpc::Status ExecuteUpdateLocationById(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::UpdateLocationByIdRequest& request, ::farm::nurture::location::service::proto::UpdateLocationByIdResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::farm::nurture::location::service::proto::UpdateLocationByIdResponse>> AsyncExecuteUpdateLocationById(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::UpdateLocationByIdRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::farm::nurture::location::service::proto::UpdateLocationByIdResponse>>(AsyncExecuteUpdateLocationByIdRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::farm::nurture::location::service::proto::UpdateLocationByIdResponse>> PrepareAsyncExecuteUpdateLocationById(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::UpdateLocationByIdRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::farm::nurture::location::service::proto::UpdateLocationByIdResponse>>(PrepareAsyncExecuteUpdateLocationByIdRaw(context, request, cq));
    }
    virtual ::grpc::Status ExecuteUpdateLocationByIdBulk(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::BulkUpdateLocationByIdRequest& request, ::farm::nurture::location::service::proto::BulkUpdateLocationByIdResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::farm::nurture::location::service::proto::BulkUpdateLocationByIdResponse>> AsyncExecuteUpdateLocationByIdBulk(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::BulkUpdateLocationByIdRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::farm::nurture::location::service::proto::BulkUpdateLocationByIdResponse>>(AsyncExecuteUpdateLocationByIdBulkRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::farm::nurture::location::service::proto::BulkUpdateLocationByIdResponse>> PrepareAsyncExecuteUpdateLocationByIdBulk(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::BulkUpdateLocationByIdRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::farm::nurture::location::service::proto::BulkUpdateLocationByIdResponse>>(PrepareAsyncExecuteUpdateLocationByIdBulkRaw(context, request, cq));
    }
    virtual ::grpc::Status ExecuteUpdateLocationLabelById(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::UpdateLocationLabelByIdRequest& request, ::farm::nurture::location::service::proto::UpdateLocationLabelByIdResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::farm::nurture::location::service::proto::UpdateLocationLabelByIdResponse>> AsyncExecuteUpdateLocationLabelById(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::UpdateLocationLabelByIdRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::farm::nurture::location::service::proto::UpdateLocationLabelByIdResponse>>(AsyncExecuteUpdateLocationLabelByIdRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::farm::nurture::location::service::proto::UpdateLocationLabelByIdResponse>> PrepareAsyncExecuteUpdateLocationLabelById(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::UpdateLocationLabelByIdRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::farm::nurture::location::service::proto::UpdateLocationLabelByIdResponse>>(PrepareAsyncExecuteUpdateLocationLabelByIdRaw(context, request, cq));
    }
    virtual ::grpc::Status ExecuteUpdateLocationLabelByIdBulk(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::BulkUpdateLocationLabelByIdRequest& request, ::farm::nurture::location::service::proto::BulkUpdateLocationLabelByIdResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::farm::nurture::location::service::proto::BulkUpdateLocationLabelByIdResponse>> AsyncExecuteUpdateLocationLabelByIdBulk(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::BulkUpdateLocationLabelByIdRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::farm::nurture::location::service::proto::BulkUpdateLocationLabelByIdResponse>>(AsyncExecuteUpdateLocationLabelByIdBulkRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::farm::nurture::location::service::proto::BulkUpdateLocationLabelByIdResponse>> PrepareAsyncExecuteUpdateLocationLabelByIdBulk(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::BulkUpdateLocationLabelByIdRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::farm::nurture::location::service::proto::BulkUpdateLocationLabelByIdResponse>>(PrepareAsyncExecuteUpdateLocationLabelByIdBulkRaw(context, request, cq));
    }
    virtual ::grpc::Status ExecuteUpdateDeleteS2CellByLocation(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::UpdateDeleteS2CellByLocationRequest& request, ::farm::nurture::location::service::proto::UpdateDeleteS2CellByLocationResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::farm::nurture::location::service::proto::UpdateDeleteS2CellByLocationResponse>> AsyncExecuteUpdateDeleteS2CellByLocation(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::UpdateDeleteS2CellByLocationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::farm::nurture::location::service::proto::UpdateDeleteS2CellByLocationResponse>>(AsyncExecuteUpdateDeleteS2CellByLocationRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::farm::nurture::location::service::proto::UpdateDeleteS2CellByLocationResponse>> PrepareAsyncExecuteUpdateDeleteS2CellByLocation(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::UpdateDeleteS2CellByLocationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::farm::nurture::location::service::proto::UpdateDeleteS2CellByLocationResponse>>(PrepareAsyncExecuteUpdateDeleteS2CellByLocationRaw(context, request, cq));
    }
    virtual ::grpc::Status ExecuteUpdateDeleteS2CellByLocationBulk(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::BulkUpdateDeleteS2CellByLocationRequest& request, ::farm::nurture::location::service::proto::BulkUpdateDeleteS2CellByLocationResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::farm::nurture::location::service::proto::BulkUpdateDeleteS2CellByLocationResponse>> AsyncExecuteUpdateDeleteS2CellByLocationBulk(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::BulkUpdateDeleteS2CellByLocationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::farm::nurture::location::service::proto::BulkUpdateDeleteS2CellByLocationResponse>>(AsyncExecuteUpdateDeleteS2CellByLocationBulkRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::farm::nurture::location::service::proto::BulkUpdateDeleteS2CellByLocationResponse>> PrepareAsyncExecuteUpdateDeleteS2CellByLocationBulk(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::BulkUpdateDeleteS2CellByLocationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::farm::nurture::location::service::proto::BulkUpdateDeleteS2CellByLocationResponse>>(PrepareAsyncExecuteUpdateDeleteS2CellByLocationBulkRaw(context, request, cq));
    }
    virtual ::grpc::Status ExecuteFetchConfigById(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::FetchConfigByIdRequest& request, ::farm::nurture::location::service::proto::Config* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::farm::nurture::location::service::proto::Config>> AsyncExecuteFetchConfigById(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::FetchConfigByIdRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::farm::nurture::location::service::proto::Config>>(AsyncExecuteFetchConfigByIdRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::farm::nurture::location::service::proto::Config>> PrepareAsyncExecuteFetchConfigById(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::FetchConfigByIdRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::farm::nurture::location::service::proto::Config>>(PrepareAsyncExecuteFetchConfigByIdRaw(context, request, cq));
    }
    virtual ::grpc::Status ExecuteAddLocation(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::AddLocationRequest& request, ::farm::nurture::location::service::proto::AddLocationResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::farm::nurture::location::service::proto::AddLocationResponse>> AsyncExecuteAddLocation(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::AddLocationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::farm::nurture::location::service::proto::AddLocationResponse>>(AsyncExecuteAddLocationRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::farm::nurture::location::service::proto::AddLocationResponse>> PrepareAsyncExecuteAddLocation(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::AddLocationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::farm::nurture::location::service::proto::AddLocationResponse>>(PrepareAsyncExecuteAddLocationRaw(context, request, cq));
    }
    virtual ::grpc::Status ExecuteAddLocationBulk(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::BulkAddLocationRequest& request, ::farm::nurture::location::service::proto::BulkAddLocationResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::farm::nurture::location::service::proto::BulkAddLocationResponse>> AsyncExecuteAddLocationBulk(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::BulkAddLocationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::farm::nurture::location::service::proto::BulkAddLocationResponse>>(AsyncExecuteAddLocationBulkRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::farm::nurture::location::service::proto::BulkAddLocationResponse>> PrepareAsyncExecuteAddLocationBulk(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::BulkAddLocationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::farm::nurture::location::service::proto::BulkAddLocationResponse>>(PrepareAsyncExecuteAddLocationBulkRaw(context, request, cq));
    }
    virtual ::grpc::Status ExecuteUpdateLocation(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::UpdateLocationRequest& request, ::farm::nurture::location::service::proto::UpdateLocationResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::farm::nurture::location::service::proto::UpdateLocationResponse>> AsyncExecuteUpdateLocation(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::UpdateLocationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::farm::nurture::location::service::proto::UpdateLocationResponse>>(AsyncExecuteUpdateLocationRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::farm::nurture::location::service::proto::UpdateLocationResponse>> PrepareAsyncExecuteUpdateLocation(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::UpdateLocationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::farm::nurture::location::service::proto::UpdateLocationResponse>>(PrepareAsyncExecuteUpdateLocationRaw(context, request, cq));
    }
    virtual ::grpc::Status ExecuteUpdateLocationBulk(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::BulkUpdateLocationRequest& request, ::farm::nurture::location::service::proto::BulkUpdateLocationResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::farm::nurture::location::service::proto::BulkUpdateLocationResponse>> AsyncExecuteUpdateLocationBulk(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::BulkUpdateLocationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::farm::nurture::location::service::proto::BulkUpdateLocationResponse>>(AsyncExecuteUpdateLocationBulkRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::farm::nurture::location::service::proto::BulkUpdateLocationResponse>> PrepareAsyncExecuteUpdateLocationBulk(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::BulkUpdateLocationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::farm::nurture::location::service::proto::BulkUpdateLocationResponse>>(PrepareAsyncExecuteUpdateLocationBulkRaw(context, request, cq));
    }
    virtual ::grpc::Status ExecuteGetLocationsWithBoundary(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::GetLocationsWithBoundaryRequest& request, ::farm::nurture::location::service::proto::GetLocationsWithBoundaryResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::farm::nurture::location::service::proto::GetLocationsWithBoundaryResponse>> AsyncExecuteGetLocationsWithBoundary(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::GetLocationsWithBoundaryRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::farm::nurture::location::service::proto::GetLocationsWithBoundaryResponse>>(AsyncExecuteGetLocationsWithBoundaryRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::farm::nurture::location::service::proto::GetLocationsWithBoundaryResponse>> PrepareAsyncExecuteGetLocationsWithBoundary(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::GetLocationsWithBoundaryRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::farm::nurture::location::service::proto::GetLocationsWithBoundaryResponse>>(PrepareAsyncExecuteGetLocationsWithBoundaryRaw(context, request, cq));
    }
    virtual ::grpc::Status ExecuteGetLocations(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::GetLocationsRequest& request, ::farm::nurture::location::service::proto::GetLocationsResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::farm::nurture::location::service::proto::GetLocationsResponse>> AsyncExecuteGetLocations(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::GetLocationsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::farm::nurture::location::service::proto::GetLocationsResponse>>(AsyncExecuteGetLocationsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::farm::nurture::location::service::proto::GetLocationsResponse>> PrepareAsyncExecuteGetLocations(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::GetLocationsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::farm::nurture::location::service::proto::GetLocationsResponse>>(PrepareAsyncExecuteGetLocationsRaw(context, request, cq));
    }
    virtual ::grpc::Status ExecuteGetChildGeographies(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::GetChildGeographiesRequest& request, ::farm::nurture::location::service::proto::GetChildGeographiesResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::farm::nurture::location::service::proto::GetChildGeographiesResponse>> AsyncExecuteGetChildGeographies(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::GetChildGeographiesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::farm::nurture::location::service::proto::GetChildGeographiesResponse>>(AsyncExecuteGetChildGeographiesRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::farm::nurture::location::service::proto::GetChildGeographiesResponse>> PrepareAsyncExecuteGetChildGeographies(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::GetChildGeographiesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::farm::nurture::location::service::proto::GetChildGeographiesResponse>>(PrepareAsyncExecuteGetChildGeographiesRaw(context, request, cq));
    }
    virtual ::grpc::Status ExecuteInsertLocationWithoutBoundary(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::InsertLocationWithoutBoundaryRequest& request, ::farm::nurture::location::service::proto::InsertLocationWithoutBoundaryResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::farm::nurture::location::service::proto::InsertLocationWithoutBoundaryResponse>> AsyncExecuteInsertLocationWithoutBoundary(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::InsertLocationWithoutBoundaryRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::farm::nurture::location::service::proto::InsertLocationWithoutBoundaryResponse>>(AsyncExecuteInsertLocationWithoutBoundaryRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::farm::nurture::location::service::proto::InsertLocationWithoutBoundaryResponse>> PrepareAsyncExecuteInsertLocationWithoutBoundary(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::InsertLocationWithoutBoundaryRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::farm::nurture::location::service::proto::InsertLocationWithoutBoundaryResponse>>(PrepareAsyncExecuteInsertLocationWithoutBoundaryRaw(context, request, cq));
    }
    virtual ::grpc::Status ExecuteInsertLocationWithoutBoundaryBulk(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::BulkInsertLocationWithoutBoundaryRequest& request, ::farm::nurture::location::service::proto::BulkInsertLocationWithoutBoundaryResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::farm::nurture::location::service::proto::BulkInsertLocationWithoutBoundaryResponse>> AsyncExecuteInsertLocationWithoutBoundaryBulk(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::BulkInsertLocationWithoutBoundaryRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::farm::nurture::location::service::proto::BulkInsertLocationWithoutBoundaryResponse>>(AsyncExecuteInsertLocationWithoutBoundaryBulkRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::farm::nurture::location::service::proto::BulkInsertLocationWithoutBoundaryResponse>> PrepareAsyncExecuteInsertLocationWithoutBoundaryBulk(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::BulkInsertLocationWithoutBoundaryRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::farm::nurture::location::service::proto::BulkInsertLocationWithoutBoundaryResponse>>(PrepareAsyncExecuteInsertLocationWithoutBoundaryBulkRaw(context, request, cq));
    }
    virtual ::grpc::Status ExecuteUpdateLocationWithoutBoundaryById(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::UpdateLocationWithoutBoundaryByIdRequest& request, ::farm::nurture::location::service::proto::UpdateLocationWithoutBoundaryByIdResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::farm::nurture::location::service::proto::UpdateLocationWithoutBoundaryByIdResponse>> AsyncExecuteUpdateLocationWithoutBoundaryById(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::UpdateLocationWithoutBoundaryByIdRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::farm::nurture::location::service::proto::UpdateLocationWithoutBoundaryByIdResponse>>(AsyncExecuteUpdateLocationWithoutBoundaryByIdRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::farm::nurture::location::service::proto::UpdateLocationWithoutBoundaryByIdResponse>> PrepareAsyncExecuteUpdateLocationWithoutBoundaryById(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::UpdateLocationWithoutBoundaryByIdRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::farm::nurture::location::service::proto::UpdateLocationWithoutBoundaryByIdResponse>>(PrepareAsyncExecuteUpdateLocationWithoutBoundaryByIdRaw(context, request, cq));
    }
    virtual ::grpc::Status ExecuteUpdateLocationWithoutBoundaryByIdBulk(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::BulkUpdateLocationWithoutBoundaryByIdRequest& request, ::farm::nurture::location::service::proto::BulkUpdateLocationWithoutBoundaryByIdResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::farm::nurture::location::service::proto::BulkUpdateLocationWithoutBoundaryByIdResponse>> AsyncExecuteUpdateLocationWithoutBoundaryByIdBulk(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::BulkUpdateLocationWithoutBoundaryByIdRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::farm::nurture::location::service::proto::BulkUpdateLocationWithoutBoundaryByIdResponse>>(AsyncExecuteUpdateLocationWithoutBoundaryByIdBulkRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::farm::nurture::location::service::proto::BulkUpdateLocationWithoutBoundaryByIdResponse>> PrepareAsyncExecuteUpdateLocationWithoutBoundaryByIdBulk(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::BulkUpdateLocationWithoutBoundaryByIdRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::farm::nurture::location::service::proto::BulkUpdateLocationWithoutBoundaryByIdResponse>>(PrepareAsyncExecuteUpdateLocationWithoutBoundaryByIdBulkRaw(context, request, cq));
    }
    virtual ::grpc::Status ExecuteDeleteLocationById(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::DeleteLocationByIdRequest& request, ::farm::nurture::location::service::proto::DeleteLocationByIdResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::farm::nurture::location::service::proto::DeleteLocationByIdResponse>> AsyncExecuteDeleteLocationById(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::DeleteLocationByIdRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::farm::nurture::location::service::proto::DeleteLocationByIdResponse>>(AsyncExecuteDeleteLocationByIdRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::farm::nurture::location::service::proto::DeleteLocationByIdResponse>> PrepareAsyncExecuteDeleteLocationById(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::DeleteLocationByIdRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::farm::nurture::location::service::proto::DeleteLocationByIdResponse>>(PrepareAsyncExecuteDeleteLocationByIdRaw(context, request, cq));
    }
    virtual ::grpc::Status ExecuteDeleteLocationByIdBulk(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::BulkDeleteLocationByIdRequest& request, ::farm::nurture::location::service::proto::BulkDeleteLocationByIdResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::farm::nurture::location::service::proto::BulkDeleteLocationByIdResponse>> AsyncExecuteDeleteLocationByIdBulk(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::BulkDeleteLocationByIdRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::farm::nurture::location::service::proto::BulkDeleteLocationByIdResponse>>(AsyncExecuteDeleteLocationByIdBulkRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::farm::nurture::location::service::proto::BulkDeleteLocationByIdResponse>> PrepareAsyncExecuteDeleteLocationByIdBulk(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::BulkDeleteLocationByIdRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::farm::nurture::location::service::proto::BulkDeleteLocationByIdResponse>>(PrepareAsyncExecuteDeleteLocationByIdBulkRaw(context, request, cq));
    }
    virtual ::grpc::Status Execute(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::MultiRequests& request, ::farm::nurture::location::service::proto::MultiResponses* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::farm::nurture::location::service::proto::MultiResponses>> AsyncExecute(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::MultiRequests& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::farm::nurture::location::service::proto::MultiResponses>>(AsyncExecuteRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::farm::nurture::location::service::proto::MultiResponses>> PrepareAsyncExecute(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::MultiRequests& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::farm::nurture::location::service::proto::MultiResponses>>(PrepareAsyncExecuteRaw(context, request, cq));
    }
    class async_interface {
     public:
      virtual ~async_interface() {}
      virtual void ExecuteInsertLocation(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::InsertLocationRequest* request, ::farm::nurture::location::service::proto::InsertLocationResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void ExecuteInsertLocation(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::InsertLocationRequest* request, ::farm::nurture::location::service::proto::InsertLocationResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void ExecuteInsertLocationBulk(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::BulkInsertLocationRequest* request, ::farm::nurture::location::service::proto::BulkInsertLocationResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void ExecuteInsertLocationBulk(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::BulkInsertLocationRequest* request, ::farm::nurture::location::service::proto::BulkInsertLocationResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void ExecuteInsertLocationS2Cell(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::InsertLocationS2CellRequest* request, ::farm::nurture::location::service::proto::InsertLocationS2CellResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void ExecuteInsertLocationS2Cell(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::InsertLocationS2CellRequest* request, ::farm::nurture::location::service::proto::InsertLocationS2CellResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void ExecuteInsertLocationS2CellBulk(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::BulkInsertLocationS2CellRequest* request, ::farm::nurture::location::service::proto::BulkInsertLocationS2CellResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void ExecuteInsertLocationS2CellBulk(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::BulkInsertLocationS2CellRequest* request, ::farm::nurture::location::service::proto::BulkInsertLocationS2CellResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void ExecuteInsertConfig(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::InsertConfigRequest* request, ::farm::nurture::location::service::proto::InsertConfigResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void ExecuteInsertConfig(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::InsertConfigRequest* request, ::farm::nurture::location::service::proto::InsertConfigResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void ExecuteInsertConfigBulk(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::BulkInsertConfigRequest* request, ::farm::nurture::location::service::proto::BulkInsertConfigResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void ExecuteInsertConfigBulk(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::BulkInsertConfigRequest* request, ::farm::nurture::location::service::proto::BulkInsertConfigResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void ExecuteFetchLocationById(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::FetchLocationByIdRequest* request, ::farm::nurture::location::service::proto::Location* response, std::function<void(::grpc::Status)>) = 0;
      virtual void ExecuteFetchLocationById(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::FetchLocationByIdRequest* request, ::farm::nurture::location::service::proto::Location* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void ExecuteFetchLocationByCodeAndNamespace(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::FetchLocationByCodeAndNamespaceRequest* request, ::farm::nurture::location::service::proto::Location* response, std::function<void(::grpc::Status)>) = 0;
      virtual void ExecuteFetchLocationByCodeAndNamespace(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::FetchLocationByCodeAndNamespaceRequest* request, ::farm::nurture::location::service::proto::Location* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void ExecuteFetchS2CellById(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::FetchS2CellByIdRequest* request, ::farm::nurture::location::service::proto::S2Cell* response, std::function<void(::grpc::Status)>) = 0;
      virtual void ExecuteFetchS2CellById(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::FetchS2CellByIdRequest* request, ::farm::nurture::location::service::proto::S2Cell* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void ExecuteFetchS2CellByLocation(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::FetchS2CellByLocationRequest* request, ::farm::nurture::location::service::proto::S2Cell* response, std::function<void(::grpc::Status)>) = 0;
      virtual void ExecuteFetchS2CellByLocation(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::FetchS2CellByLocationRequest* request, ::farm::nurture::location::service::proto::S2Cell* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void ExecuteFetchS2CellByLocationId(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::FetchS2CellByLocationIdRequest* request, ::farm::nurture::location::service::proto::LocationS2Cells* response, std::function<void(::grpc::Status)>) = 0;
      virtual void ExecuteFetchS2CellByLocationId(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::FetchS2CellByLocationIdRequest* request, ::farm::nurture::location::service::proto::LocationS2Cells* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void ExecuteUpdateLocationById(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::UpdateLocationByIdRequest* request, ::farm::nurture::location::service::proto::UpdateLocationByIdResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void ExecuteUpdateLocationById(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::UpdateLocationByIdRequest* request, ::farm::nurture::location::service::proto::UpdateLocationByIdResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void ExecuteUpdateLocationByIdBulk(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::BulkUpdateLocationByIdRequest* request, ::farm::nurture::location::service::proto::BulkUpdateLocationByIdResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void ExecuteUpdateLocationByIdBulk(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::BulkUpdateLocationByIdRequest* request, ::farm::nurture::location::service::proto::BulkUpdateLocationByIdResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void ExecuteUpdateLocationLabelById(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::UpdateLocationLabelByIdRequest* request, ::farm::nurture::location::service::proto::UpdateLocationLabelByIdResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void ExecuteUpdateLocationLabelById(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::UpdateLocationLabelByIdRequest* request, ::farm::nurture::location::service::proto::UpdateLocationLabelByIdResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void ExecuteUpdateLocationLabelByIdBulk(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::BulkUpdateLocationLabelByIdRequest* request, ::farm::nurture::location::service::proto::BulkUpdateLocationLabelByIdResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void ExecuteUpdateLocationLabelByIdBulk(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::BulkUpdateLocationLabelByIdRequest* request, ::farm::nurture::location::service::proto::BulkUpdateLocationLabelByIdResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void ExecuteUpdateDeleteS2CellByLocation(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::UpdateDeleteS2CellByLocationRequest* request, ::farm::nurture::location::service::proto::UpdateDeleteS2CellByLocationResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void ExecuteUpdateDeleteS2CellByLocation(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::UpdateDeleteS2CellByLocationRequest* request, ::farm::nurture::location::service::proto::UpdateDeleteS2CellByLocationResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void ExecuteUpdateDeleteS2CellByLocationBulk(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::BulkUpdateDeleteS2CellByLocationRequest* request, ::farm::nurture::location::service::proto::BulkUpdateDeleteS2CellByLocationResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void ExecuteUpdateDeleteS2CellByLocationBulk(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::BulkUpdateDeleteS2CellByLocationRequest* request, ::farm::nurture::location::service::proto::BulkUpdateDeleteS2CellByLocationResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void ExecuteFetchConfigById(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::FetchConfigByIdRequest* request, ::farm::nurture::location::service::proto::Config* response, std::function<void(::grpc::Status)>) = 0;
      virtual void ExecuteFetchConfigById(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::FetchConfigByIdRequest* request, ::farm::nurture::location::service::proto::Config* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void ExecuteAddLocation(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::AddLocationRequest* request, ::farm::nurture::location::service::proto::AddLocationResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void ExecuteAddLocation(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::AddLocationRequest* request, ::farm::nurture::location::service::proto::AddLocationResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void ExecuteAddLocationBulk(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::BulkAddLocationRequest* request, ::farm::nurture::location::service::proto::BulkAddLocationResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void ExecuteAddLocationBulk(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::BulkAddLocationRequest* request, ::farm::nurture::location::service::proto::BulkAddLocationResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void ExecuteUpdateLocation(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::UpdateLocationRequest* request, ::farm::nurture::location::service::proto::UpdateLocationResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void ExecuteUpdateLocation(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::UpdateLocationRequest* request, ::farm::nurture::location::service::proto::UpdateLocationResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void ExecuteUpdateLocationBulk(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::BulkUpdateLocationRequest* request, ::farm::nurture::location::service::proto::BulkUpdateLocationResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void ExecuteUpdateLocationBulk(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::BulkUpdateLocationRequest* request, ::farm::nurture::location::service::proto::BulkUpdateLocationResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void ExecuteGetLocationsWithBoundary(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::GetLocationsWithBoundaryRequest* request, ::farm::nurture::location::service::proto::GetLocationsWithBoundaryResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void ExecuteGetLocationsWithBoundary(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::GetLocationsWithBoundaryRequest* request, ::farm::nurture::location::service::proto::GetLocationsWithBoundaryResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void ExecuteGetLocations(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::GetLocationsRequest* request, ::farm::nurture::location::service::proto::GetLocationsResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void ExecuteGetLocations(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::GetLocationsRequest* request, ::farm::nurture::location::service::proto::GetLocationsResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void ExecuteGetChildGeographies(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::GetChildGeographiesRequest* request, ::farm::nurture::location::service::proto::GetChildGeographiesResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void ExecuteGetChildGeographies(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::GetChildGeographiesRequest* request, ::farm::nurture::location::service::proto::GetChildGeographiesResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void ExecuteInsertLocationWithoutBoundary(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::InsertLocationWithoutBoundaryRequest* request, ::farm::nurture::location::service::proto::InsertLocationWithoutBoundaryResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void ExecuteInsertLocationWithoutBoundary(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::InsertLocationWithoutBoundaryRequest* request, ::farm::nurture::location::service::proto::InsertLocationWithoutBoundaryResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void ExecuteInsertLocationWithoutBoundaryBulk(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::BulkInsertLocationWithoutBoundaryRequest* request, ::farm::nurture::location::service::proto::BulkInsertLocationWithoutBoundaryResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void ExecuteInsertLocationWithoutBoundaryBulk(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::BulkInsertLocationWithoutBoundaryRequest* request, ::farm::nurture::location::service::proto::BulkInsertLocationWithoutBoundaryResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void ExecuteUpdateLocationWithoutBoundaryById(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::UpdateLocationWithoutBoundaryByIdRequest* request, ::farm::nurture::location::service::proto::UpdateLocationWithoutBoundaryByIdResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void ExecuteUpdateLocationWithoutBoundaryById(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::UpdateLocationWithoutBoundaryByIdRequest* request, ::farm::nurture::location::service::proto::UpdateLocationWithoutBoundaryByIdResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void ExecuteUpdateLocationWithoutBoundaryByIdBulk(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::BulkUpdateLocationWithoutBoundaryByIdRequest* request, ::farm::nurture::location::service::proto::BulkUpdateLocationWithoutBoundaryByIdResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void ExecuteUpdateLocationWithoutBoundaryByIdBulk(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::BulkUpdateLocationWithoutBoundaryByIdRequest* request, ::farm::nurture::location::service::proto::BulkUpdateLocationWithoutBoundaryByIdResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void ExecuteDeleteLocationById(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::DeleteLocationByIdRequest* request, ::farm::nurture::location::service::proto::DeleteLocationByIdResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void ExecuteDeleteLocationById(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::DeleteLocationByIdRequest* request, ::farm::nurture::location::service::proto::DeleteLocationByIdResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void ExecuteDeleteLocationByIdBulk(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::BulkDeleteLocationByIdRequest* request, ::farm::nurture::location::service::proto::BulkDeleteLocationByIdResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void ExecuteDeleteLocationByIdBulk(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::BulkDeleteLocationByIdRequest* request, ::farm::nurture::location::service::proto::BulkDeleteLocationByIdResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void Execute(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::MultiRequests* request, ::farm::nurture::location::service::proto::MultiResponses* response, std::function<void(::grpc::Status)>) = 0;
      virtual void Execute(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::MultiRequests* request, ::farm::nurture::location::service::proto::MultiResponses* response, ::grpc::ClientUnaryReactor* reactor) = 0;
    };
    typedef class async_interface experimental_async_interface;
    virtual class async_interface* async() { return nullptr; }
    class async_interface* experimental_async() { return async(); }
   private:
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::farm::nurture::location::service::proto::InsertLocationResponse>* AsyncExecuteInsertLocationRaw(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::InsertLocationRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::farm::nurture::location::service::proto::InsertLocationResponse>* PrepareAsyncExecuteInsertLocationRaw(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::InsertLocationRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::farm::nurture::location::service::proto::BulkInsertLocationResponse>* AsyncExecuteInsertLocationBulkRaw(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::BulkInsertLocationRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::farm::nurture::location::service::proto::BulkInsertLocationResponse>* PrepareAsyncExecuteInsertLocationBulkRaw(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::BulkInsertLocationRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::farm::nurture::location::service::proto::InsertLocationS2CellResponse>* AsyncExecuteInsertLocationS2CellRaw(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::InsertLocationS2CellRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::farm::nurture::location::service::proto::InsertLocationS2CellResponse>* PrepareAsyncExecuteInsertLocationS2CellRaw(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::InsertLocationS2CellRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::farm::nurture::location::service::proto::BulkInsertLocationS2CellResponse>* AsyncExecuteInsertLocationS2CellBulkRaw(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::BulkInsertLocationS2CellRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::farm::nurture::location::service::proto::BulkInsertLocationS2CellResponse>* PrepareAsyncExecuteInsertLocationS2CellBulkRaw(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::BulkInsertLocationS2CellRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::farm::nurture::location::service::proto::InsertConfigResponse>* AsyncExecuteInsertConfigRaw(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::InsertConfigRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::farm::nurture::location::service::proto::InsertConfigResponse>* PrepareAsyncExecuteInsertConfigRaw(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::InsertConfigRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::farm::nurture::location::service::proto::BulkInsertConfigResponse>* AsyncExecuteInsertConfigBulkRaw(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::BulkInsertConfigRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::farm::nurture::location::service::proto::BulkInsertConfigResponse>* PrepareAsyncExecuteInsertConfigBulkRaw(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::BulkInsertConfigRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::farm::nurture::location::service::proto::Location>* AsyncExecuteFetchLocationByIdRaw(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::FetchLocationByIdRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::farm::nurture::location::service::proto::Location>* PrepareAsyncExecuteFetchLocationByIdRaw(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::FetchLocationByIdRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::farm::nurture::location::service::proto::Location>* AsyncExecuteFetchLocationByCodeAndNamespaceRaw(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::FetchLocationByCodeAndNamespaceRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::farm::nurture::location::service::proto::Location>* PrepareAsyncExecuteFetchLocationByCodeAndNamespaceRaw(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::FetchLocationByCodeAndNamespaceRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::farm::nurture::location::service::proto::S2Cell>* AsyncExecuteFetchS2CellByIdRaw(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::FetchS2CellByIdRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::farm::nurture::location::service::proto::S2Cell>* PrepareAsyncExecuteFetchS2CellByIdRaw(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::FetchS2CellByIdRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::farm::nurture::location::service::proto::S2Cell>* AsyncExecuteFetchS2CellByLocationRaw(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::FetchS2CellByLocationRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::farm::nurture::location::service::proto::S2Cell>* PrepareAsyncExecuteFetchS2CellByLocationRaw(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::FetchS2CellByLocationRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::farm::nurture::location::service::proto::LocationS2Cells>* AsyncExecuteFetchS2CellByLocationIdRaw(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::FetchS2CellByLocationIdRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::farm::nurture::location::service::proto::LocationS2Cells>* PrepareAsyncExecuteFetchS2CellByLocationIdRaw(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::FetchS2CellByLocationIdRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::farm::nurture::location::service::proto::UpdateLocationByIdResponse>* AsyncExecuteUpdateLocationByIdRaw(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::UpdateLocationByIdRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::farm::nurture::location::service::proto::UpdateLocationByIdResponse>* PrepareAsyncExecuteUpdateLocationByIdRaw(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::UpdateLocationByIdRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::farm::nurture::location::service::proto::BulkUpdateLocationByIdResponse>* AsyncExecuteUpdateLocationByIdBulkRaw(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::BulkUpdateLocationByIdRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::farm::nurture::location::service::proto::BulkUpdateLocationByIdResponse>* PrepareAsyncExecuteUpdateLocationByIdBulkRaw(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::BulkUpdateLocationByIdRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::farm::nurture::location::service::proto::UpdateLocationLabelByIdResponse>* AsyncExecuteUpdateLocationLabelByIdRaw(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::UpdateLocationLabelByIdRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::farm::nurture::location::service::proto::UpdateLocationLabelByIdResponse>* PrepareAsyncExecuteUpdateLocationLabelByIdRaw(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::UpdateLocationLabelByIdRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::farm::nurture::location::service::proto::BulkUpdateLocationLabelByIdResponse>* AsyncExecuteUpdateLocationLabelByIdBulkRaw(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::BulkUpdateLocationLabelByIdRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::farm::nurture::location::service::proto::BulkUpdateLocationLabelByIdResponse>* PrepareAsyncExecuteUpdateLocationLabelByIdBulkRaw(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::BulkUpdateLocationLabelByIdRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::farm::nurture::location::service::proto::UpdateDeleteS2CellByLocationResponse>* AsyncExecuteUpdateDeleteS2CellByLocationRaw(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::UpdateDeleteS2CellByLocationRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::farm::nurture::location::service::proto::UpdateDeleteS2CellByLocationResponse>* PrepareAsyncExecuteUpdateDeleteS2CellByLocationRaw(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::UpdateDeleteS2CellByLocationRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::farm::nurture::location::service::proto::BulkUpdateDeleteS2CellByLocationResponse>* AsyncExecuteUpdateDeleteS2CellByLocationBulkRaw(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::BulkUpdateDeleteS2CellByLocationRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::farm::nurture::location::service::proto::BulkUpdateDeleteS2CellByLocationResponse>* PrepareAsyncExecuteUpdateDeleteS2CellByLocationBulkRaw(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::BulkUpdateDeleteS2CellByLocationRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::farm::nurture::location::service::proto::Config>* AsyncExecuteFetchConfigByIdRaw(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::FetchConfigByIdRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::farm::nurture::location::service::proto::Config>* PrepareAsyncExecuteFetchConfigByIdRaw(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::FetchConfigByIdRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::farm::nurture::location::service::proto::AddLocationResponse>* AsyncExecuteAddLocationRaw(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::AddLocationRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::farm::nurture::location::service::proto::AddLocationResponse>* PrepareAsyncExecuteAddLocationRaw(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::AddLocationRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::farm::nurture::location::service::proto::BulkAddLocationResponse>* AsyncExecuteAddLocationBulkRaw(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::BulkAddLocationRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::farm::nurture::location::service::proto::BulkAddLocationResponse>* PrepareAsyncExecuteAddLocationBulkRaw(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::BulkAddLocationRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::farm::nurture::location::service::proto::UpdateLocationResponse>* AsyncExecuteUpdateLocationRaw(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::UpdateLocationRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::farm::nurture::location::service::proto::UpdateLocationResponse>* PrepareAsyncExecuteUpdateLocationRaw(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::UpdateLocationRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::farm::nurture::location::service::proto::BulkUpdateLocationResponse>* AsyncExecuteUpdateLocationBulkRaw(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::BulkUpdateLocationRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::farm::nurture::location::service::proto::BulkUpdateLocationResponse>* PrepareAsyncExecuteUpdateLocationBulkRaw(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::BulkUpdateLocationRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::farm::nurture::location::service::proto::GetLocationsWithBoundaryResponse>* AsyncExecuteGetLocationsWithBoundaryRaw(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::GetLocationsWithBoundaryRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::farm::nurture::location::service::proto::GetLocationsWithBoundaryResponse>* PrepareAsyncExecuteGetLocationsWithBoundaryRaw(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::GetLocationsWithBoundaryRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::farm::nurture::location::service::proto::GetLocationsResponse>* AsyncExecuteGetLocationsRaw(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::GetLocationsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::farm::nurture::location::service::proto::GetLocationsResponse>* PrepareAsyncExecuteGetLocationsRaw(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::GetLocationsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::farm::nurture::location::service::proto::GetChildGeographiesResponse>* AsyncExecuteGetChildGeographiesRaw(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::GetChildGeographiesRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::farm::nurture::location::service::proto::GetChildGeographiesResponse>* PrepareAsyncExecuteGetChildGeographiesRaw(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::GetChildGeographiesRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::farm::nurture::location::service::proto::InsertLocationWithoutBoundaryResponse>* AsyncExecuteInsertLocationWithoutBoundaryRaw(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::InsertLocationWithoutBoundaryRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::farm::nurture::location::service::proto::InsertLocationWithoutBoundaryResponse>* PrepareAsyncExecuteInsertLocationWithoutBoundaryRaw(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::InsertLocationWithoutBoundaryRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::farm::nurture::location::service::proto::BulkInsertLocationWithoutBoundaryResponse>* AsyncExecuteInsertLocationWithoutBoundaryBulkRaw(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::BulkInsertLocationWithoutBoundaryRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::farm::nurture::location::service::proto::BulkInsertLocationWithoutBoundaryResponse>* PrepareAsyncExecuteInsertLocationWithoutBoundaryBulkRaw(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::BulkInsertLocationWithoutBoundaryRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::farm::nurture::location::service::proto::UpdateLocationWithoutBoundaryByIdResponse>* AsyncExecuteUpdateLocationWithoutBoundaryByIdRaw(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::UpdateLocationWithoutBoundaryByIdRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::farm::nurture::location::service::proto::UpdateLocationWithoutBoundaryByIdResponse>* PrepareAsyncExecuteUpdateLocationWithoutBoundaryByIdRaw(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::UpdateLocationWithoutBoundaryByIdRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::farm::nurture::location::service::proto::BulkUpdateLocationWithoutBoundaryByIdResponse>* AsyncExecuteUpdateLocationWithoutBoundaryByIdBulkRaw(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::BulkUpdateLocationWithoutBoundaryByIdRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::farm::nurture::location::service::proto::BulkUpdateLocationWithoutBoundaryByIdResponse>* PrepareAsyncExecuteUpdateLocationWithoutBoundaryByIdBulkRaw(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::BulkUpdateLocationWithoutBoundaryByIdRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::farm::nurture::location::service::proto::DeleteLocationByIdResponse>* AsyncExecuteDeleteLocationByIdRaw(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::DeleteLocationByIdRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::farm::nurture::location::service::proto::DeleteLocationByIdResponse>* PrepareAsyncExecuteDeleteLocationByIdRaw(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::DeleteLocationByIdRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::farm::nurture::location::service::proto::BulkDeleteLocationByIdResponse>* AsyncExecuteDeleteLocationByIdBulkRaw(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::BulkDeleteLocationByIdRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::farm::nurture::location::service::proto::BulkDeleteLocationByIdResponse>* PrepareAsyncExecuteDeleteLocationByIdBulkRaw(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::BulkDeleteLocationByIdRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::farm::nurture::location::service::proto::MultiResponses>* AsyncExecuteRaw(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::MultiRequests& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::farm::nurture::location::service::proto::MultiResponses>* PrepareAsyncExecuteRaw(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::MultiRequests& request, ::grpc::CompletionQueue* cq) = 0;
  };
  class Stub final : public StubInterface {
   public:
    Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());
    ::grpc::Status ExecuteInsertLocation(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::InsertLocationRequest& request, ::farm::nurture::location::service::proto::InsertLocationResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::farm::nurture::location::service::proto::InsertLocationResponse>> AsyncExecuteInsertLocation(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::InsertLocationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::farm::nurture::location::service::proto::InsertLocationResponse>>(AsyncExecuteInsertLocationRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::farm::nurture::location::service::proto::InsertLocationResponse>> PrepareAsyncExecuteInsertLocation(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::InsertLocationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::farm::nurture::location::service::proto::InsertLocationResponse>>(PrepareAsyncExecuteInsertLocationRaw(context, request, cq));
    }
    ::grpc::Status ExecuteInsertLocationBulk(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::BulkInsertLocationRequest& request, ::farm::nurture::location::service::proto::BulkInsertLocationResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::farm::nurture::location::service::proto::BulkInsertLocationResponse>> AsyncExecuteInsertLocationBulk(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::BulkInsertLocationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::farm::nurture::location::service::proto::BulkInsertLocationResponse>>(AsyncExecuteInsertLocationBulkRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::farm::nurture::location::service::proto::BulkInsertLocationResponse>> PrepareAsyncExecuteInsertLocationBulk(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::BulkInsertLocationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::farm::nurture::location::service::proto::BulkInsertLocationResponse>>(PrepareAsyncExecuteInsertLocationBulkRaw(context, request, cq));
    }
    ::grpc::Status ExecuteInsertLocationS2Cell(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::InsertLocationS2CellRequest& request, ::farm::nurture::location::service::proto::InsertLocationS2CellResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::farm::nurture::location::service::proto::InsertLocationS2CellResponse>> AsyncExecuteInsertLocationS2Cell(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::InsertLocationS2CellRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::farm::nurture::location::service::proto::InsertLocationS2CellResponse>>(AsyncExecuteInsertLocationS2CellRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::farm::nurture::location::service::proto::InsertLocationS2CellResponse>> PrepareAsyncExecuteInsertLocationS2Cell(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::InsertLocationS2CellRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::farm::nurture::location::service::proto::InsertLocationS2CellResponse>>(PrepareAsyncExecuteInsertLocationS2CellRaw(context, request, cq));
    }
    ::grpc::Status ExecuteInsertLocationS2CellBulk(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::BulkInsertLocationS2CellRequest& request, ::farm::nurture::location::service::proto::BulkInsertLocationS2CellResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::farm::nurture::location::service::proto::BulkInsertLocationS2CellResponse>> AsyncExecuteInsertLocationS2CellBulk(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::BulkInsertLocationS2CellRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::farm::nurture::location::service::proto::BulkInsertLocationS2CellResponse>>(AsyncExecuteInsertLocationS2CellBulkRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::farm::nurture::location::service::proto::BulkInsertLocationS2CellResponse>> PrepareAsyncExecuteInsertLocationS2CellBulk(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::BulkInsertLocationS2CellRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::farm::nurture::location::service::proto::BulkInsertLocationS2CellResponse>>(PrepareAsyncExecuteInsertLocationS2CellBulkRaw(context, request, cq));
    }
    ::grpc::Status ExecuteInsertConfig(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::InsertConfigRequest& request, ::farm::nurture::location::service::proto::InsertConfigResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::farm::nurture::location::service::proto::InsertConfigResponse>> AsyncExecuteInsertConfig(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::InsertConfigRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::farm::nurture::location::service::proto::InsertConfigResponse>>(AsyncExecuteInsertConfigRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::farm::nurture::location::service::proto::InsertConfigResponse>> PrepareAsyncExecuteInsertConfig(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::InsertConfigRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::farm::nurture::location::service::proto::InsertConfigResponse>>(PrepareAsyncExecuteInsertConfigRaw(context, request, cq));
    }
    ::grpc::Status ExecuteInsertConfigBulk(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::BulkInsertConfigRequest& request, ::farm::nurture::location::service::proto::BulkInsertConfigResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::farm::nurture::location::service::proto::BulkInsertConfigResponse>> AsyncExecuteInsertConfigBulk(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::BulkInsertConfigRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::farm::nurture::location::service::proto::BulkInsertConfigResponse>>(AsyncExecuteInsertConfigBulkRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::farm::nurture::location::service::proto::BulkInsertConfigResponse>> PrepareAsyncExecuteInsertConfigBulk(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::BulkInsertConfigRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::farm::nurture::location::service::proto::BulkInsertConfigResponse>>(PrepareAsyncExecuteInsertConfigBulkRaw(context, request, cq));
    }
    ::grpc::Status ExecuteFetchLocationById(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::FetchLocationByIdRequest& request, ::farm::nurture::location::service::proto::Location* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::farm::nurture::location::service::proto::Location>> AsyncExecuteFetchLocationById(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::FetchLocationByIdRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::farm::nurture::location::service::proto::Location>>(AsyncExecuteFetchLocationByIdRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::farm::nurture::location::service::proto::Location>> PrepareAsyncExecuteFetchLocationById(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::FetchLocationByIdRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::farm::nurture::location::service::proto::Location>>(PrepareAsyncExecuteFetchLocationByIdRaw(context, request, cq));
    }
    ::grpc::Status ExecuteFetchLocationByCodeAndNamespace(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::FetchLocationByCodeAndNamespaceRequest& request, ::farm::nurture::location::service::proto::Location* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::farm::nurture::location::service::proto::Location>> AsyncExecuteFetchLocationByCodeAndNamespace(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::FetchLocationByCodeAndNamespaceRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::farm::nurture::location::service::proto::Location>>(AsyncExecuteFetchLocationByCodeAndNamespaceRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::farm::nurture::location::service::proto::Location>> PrepareAsyncExecuteFetchLocationByCodeAndNamespace(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::FetchLocationByCodeAndNamespaceRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::farm::nurture::location::service::proto::Location>>(PrepareAsyncExecuteFetchLocationByCodeAndNamespaceRaw(context, request, cq));
    }
    ::grpc::Status ExecuteFetchS2CellById(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::FetchS2CellByIdRequest& request, ::farm::nurture::location::service::proto::S2Cell* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::farm::nurture::location::service::proto::S2Cell>> AsyncExecuteFetchS2CellById(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::FetchS2CellByIdRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::farm::nurture::location::service::proto::S2Cell>>(AsyncExecuteFetchS2CellByIdRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::farm::nurture::location::service::proto::S2Cell>> PrepareAsyncExecuteFetchS2CellById(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::FetchS2CellByIdRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::farm::nurture::location::service::proto::S2Cell>>(PrepareAsyncExecuteFetchS2CellByIdRaw(context, request, cq));
    }
    ::grpc::Status ExecuteFetchS2CellByLocation(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::FetchS2CellByLocationRequest& request, ::farm::nurture::location::service::proto::S2Cell* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::farm::nurture::location::service::proto::S2Cell>> AsyncExecuteFetchS2CellByLocation(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::FetchS2CellByLocationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::farm::nurture::location::service::proto::S2Cell>>(AsyncExecuteFetchS2CellByLocationRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::farm::nurture::location::service::proto::S2Cell>> PrepareAsyncExecuteFetchS2CellByLocation(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::FetchS2CellByLocationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::farm::nurture::location::service::proto::S2Cell>>(PrepareAsyncExecuteFetchS2CellByLocationRaw(context, request, cq));
    }
    ::grpc::Status ExecuteFetchS2CellByLocationId(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::FetchS2CellByLocationIdRequest& request, ::farm::nurture::location::service::proto::LocationS2Cells* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::farm::nurture::location::service::proto::LocationS2Cells>> AsyncExecuteFetchS2CellByLocationId(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::FetchS2CellByLocationIdRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::farm::nurture::location::service::proto::LocationS2Cells>>(AsyncExecuteFetchS2CellByLocationIdRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::farm::nurture::location::service::proto::LocationS2Cells>> PrepareAsyncExecuteFetchS2CellByLocationId(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::FetchS2CellByLocationIdRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::farm::nurture::location::service::proto::LocationS2Cells>>(PrepareAsyncExecuteFetchS2CellByLocationIdRaw(context, request, cq));
    }
    ::grpc::Status ExecuteUpdateLocationById(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::UpdateLocationByIdRequest& request, ::farm::nurture::location::service::proto::UpdateLocationByIdResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::farm::nurture::location::service::proto::UpdateLocationByIdResponse>> AsyncExecuteUpdateLocationById(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::UpdateLocationByIdRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::farm::nurture::location::service::proto::UpdateLocationByIdResponse>>(AsyncExecuteUpdateLocationByIdRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::farm::nurture::location::service::proto::UpdateLocationByIdResponse>> PrepareAsyncExecuteUpdateLocationById(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::UpdateLocationByIdRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::farm::nurture::location::service::proto::UpdateLocationByIdResponse>>(PrepareAsyncExecuteUpdateLocationByIdRaw(context, request, cq));
    }
    ::grpc::Status ExecuteUpdateLocationByIdBulk(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::BulkUpdateLocationByIdRequest& request, ::farm::nurture::location::service::proto::BulkUpdateLocationByIdResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::farm::nurture::location::service::proto::BulkUpdateLocationByIdResponse>> AsyncExecuteUpdateLocationByIdBulk(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::BulkUpdateLocationByIdRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::farm::nurture::location::service::proto::BulkUpdateLocationByIdResponse>>(AsyncExecuteUpdateLocationByIdBulkRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::farm::nurture::location::service::proto::BulkUpdateLocationByIdResponse>> PrepareAsyncExecuteUpdateLocationByIdBulk(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::BulkUpdateLocationByIdRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::farm::nurture::location::service::proto::BulkUpdateLocationByIdResponse>>(PrepareAsyncExecuteUpdateLocationByIdBulkRaw(context, request, cq));
    }
    ::grpc::Status ExecuteUpdateLocationLabelById(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::UpdateLocationLabelByIdRequest& request, ::farm::nurture::location::service::proto::UpdateLocationLabelByIdResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::farm::nurture::location::service::proto::UpdateLocationLabelByIdResponse>> AsyncExecuteUpdateLocationLabelById(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::UpdateLocationLabelByIdRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::farm::nurture::location::service::proto::UpdateLocationLabelByIdResponse>>(AsyncExecuteUpdateLocationLabelByIdRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::farm::nurture::location::service::proto::UpdateLocationLabelByIdResponse>> PrepareAsyncExecuteUpdateLocationLabelById(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::UpdateLocationLabelByIdRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::farm::nurture::location::service::proto::UpdateLocationLabelByIdResponse>>(PrepareAsyncExecuteUpdateLocationLabelByIdRaw(context, request, cq));
    }
    ::grpc::Status ExecuteUpdateLocationLabelByIdBulk(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::BulkUpdateLocationLabelByIdRequest& request, ::farm::nurture::location::service::proto::BulkUpdateLocationLabelByIdResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::farm::nurture::location::service::proto::BulkUpdateLocationLabelByIdResponse>> AsyncExecuteUpdateLocationLabelByIdBulk(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::BulkUpdateLocationLabelByIdRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::farm::nurture::location::service::proto::BulkUpdateLocationLabelByIdResponse>>(AsyncExecuteUpdateLocationLabelByIdBulkRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::farm::nurture::location::service::proto::BulkUpdateLocationLabelByIdResponse>> PrepareAsyncExecuteUpdateLocationLabelByIdBulk(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::BulkUpdateLocationLabelByIdRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::farm::nurture::location::service::proto::BulkUpdateLocationLabelByIdResponse>>(PrepareAsyncExecuteUpdateLocationLabelByIdBulkRaw(context, request, cq));
    }
    ::grpc::Status ExecuteUpdateDeleteS2CellByLocation(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::UpdateDeleteS2CellByLocationRequest& request, ::farm::nurture::location::service::proto::UpdateDeleteS2CellByLocationResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::farm::nurture::location::service::proto::UpdateDeleteS2CellByLocationResponse>> AsyncExecuteUpdateDeleteS2CellByLocation(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::UpdateDeleteS2CellByLocationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::farm::nurture::location::service::proto::UpdateDeleteS2CellByLocationResponse>>(AsyncExecuteUpdateDeleteS2CellByLocationRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::farm::nurture::location::service::proto::UpdateDeleteS2CellByLocationResponse>> PrepareAsyncExecuteUpdateDeleteS2CellByLocation(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::UpdateDeleteS2CellByLocationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::farm::nurture::location::service::proto::UpdateDeleteS2CellByLocationResponse>>(PrepareAsyncExecuteUpdateDeleteS2CellByLocationRaw(context, request, cq));
    }
    ::grpc::Status ExecuteUpdateDeleteS2CellByLocationBulk(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::BulkUpdateDeleteS2CellByLocationRequest& request, ::farm::nurture::location::service::proto::BulkUpdateDeleteS2CellByLocationResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::farm::nurture::location::service::proto::BulkUpdateDeleteS2CellByLocationResponse>> AsyncExecuteUpdateDeleteS2CellByLocationBulk(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::BulkUpdateDeleteS2CellByLocationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::farm::nurture::location::service::proto::BulkUpdateDeleteS2CellByLocationResponse>>(AsyncExecuteUpdateDeleteS2CellByLocationBulkRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::farm::nurture::location::service::proto::BulkUpdateDeleteS2CellByLocationResponse>> PrepareAsyncExecuteUpdateDeleteS2CellByLocationBulk(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::BulkUpdateDeleteS2CellByLocationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::farm::nurture::location::service::proto::BulkUpdateDeleteS2CellByLocationResponse>>(PrepareAsyncExecuteUpdateDeleteS2CellByLocationBulkRaw(context, request, cq));
    }
    ::grpc::Status ExecuteFetchConfigById(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::FetchConfigByIdRequest& request, ::farm::nurture::location::service::proto::Config* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::farm::nurture::location::service::proto::Config>> AsyncExecuteFetchConfigById(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::FetchConfigByIdRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::farm::nurture::location::service::proto::Config>>(AsyncExecuteFetchConfigByIdRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::farm::nurture::location::service::proto::Config>> PrepareAsyncExecuteFetchConfigById(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::FetchConfigByIdRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::farm::nurture::location::service::proto::Config>>(PrepareAsyncExecuteFetchConfigByIdRaw(context, request, cq));
    }
    ::grpc::Status ExecuteAddLocation(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::AddLocationRequest& request, ::farm::nurture::location::service::proto::AddLocationResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::farm::nurture::location::service::proto::AddLocationResponse>> AsyncExecuteAddLocation(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::AddLocationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::farm::nurture::location::service::proto::AddLocationResponse>>(AsyncExecuteAddLocationRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::farm::nurture::location::service::proto::AddLocationResponse>> PrepareAsyncExecuteAddLocation(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::AddLocationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::farm::nurture::location::service::proto::AddLocationResponse>>(PrepareAsyncExecuteAddLocationRaw(context, request, cq));
    }
    ::grpc::Status ExecuteAddLocationBulk(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::BulkAddLocationRequest& request, ::farm::nurture::location::service::proto::BulkAddLocationResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::farm::nurture::location::service::proto::BulkAddLocationResponse>> AsyncExecuteAddLocationBulk(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::BulkAddLocationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::farm::nurture::location::service::proto::BulkAddLocationResponse>>(AsyncExecuteAddLocationBulkRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::farm::nurture::location::service::proto::BulkAddLocationResponse>> PrepareAsyncExecuteAddLocationBulk(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::BulkAddLocationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::farm::nurture::location::service::proto::BulkAddLocationResponse>>(PrepareAsyncExecuteAddLocationBulkRaw(context, request, cq));
    }
    ::grpc::Status ExecuteUpdateLocation(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::UpdateLocationRequest& request, ::farm::nurture::location::service::proto::UpdateLocationResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::farm::nurture::location::service::proto::UpdateLocationResponse>> AsyncExecuteUpdateLocation(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::UpdateLocationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::farm::nurture::location::service::proto::UpdateLocationResponse>>(AsyncExecuteUpdateLocationRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::farm::nurture::location::service::proto::UpdateLocationResponse>> PrepareAsyncExecuteUpdateLocation(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::UpdateLocationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::farm::nurture::location::service::proto::UpdateLocationResponse>>(PrepareAsyncExecuteUpdateLocationRaw(context, request, cq));
    }
    ::grpc::Status ExecuteUpdateLocationBulk(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::BulkUpdateLocationRequest& request, ::farm::nurture::location::service::proto::BulkUpdateLocationResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::farm::nurture::location::service::proto::BulkUpdateLocationResponse>> AsyncExecuteUpdateLocationBulk(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::BulkUpdateLocationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::farm::nurture::location::service::proto::BulkUpdateLocationResponse>>(AsyncExecuteUpdateLocationBulkRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::farm::nurture::location::service::proto::BulkUpdateLocationResponse>> PrepareAsyncExecuteUpdateLocationBulk(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::BulkUpdateLocationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::farm::nurture::location::service::proto::BulkUpdateLocationResponse>>(PrepareAsyncExecuteUpdateLocationBulkRaw(context, request, cq));
    }
    ::grpc::Status ExecuteGetLocationsWithBoundary(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::GetLocationsWithBoundaryRequest& request, ::farm::nurture::location::service::proto::GetLocationsWithBoundaryResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::farm::nurture::location::service::proto::GetLocationsWithBoundaryResponse>> AsyncExecuteGetLocationsWithBoundary(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::GetLocationsWithBoundaryRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::farm::nurture::location::service::proto::GetLocationsWithBoundaryResponse>>(AsyncExecuteGetLocationsWithBoundaryRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::farm::nurture::location::service::proto::GetLocationsWithBoundaryResponse>> PrepareAsyncExecuteGetLocationsWithBoundary(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::GetLocationsWithBoundaryRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::farm::nurture::location::service::proto::GetLocationsWithBoundaryResponse>>(PrepareAsyncExecuteGetLocationsWithBoundaryRaw(context, request, cq));
    }
    ::grpc::Status ExecuteGetLocations(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::GetLocationsRequest& request, ::farm::nurture::location::service::proto::GetLocationsResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::farm::nurture::location::service::proto::GetLocationsResponse>> AsyncExecuteGetLocations(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::GetLocationsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::farm::nurture::location::service::proto::GetLocationsResponse>>(AsyncExecuteGetLocationsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::farm::nurture::location::service::proto::GetLocationsResponse>> PrepareAsyncExecuteGetLocations(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::GetLocationsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::farm::nurture::location::service::proto::GetLocationsResponse>>(PrepareAsyncExecuteGetLocationsRaw(context, request, cq));
    }
    ::grpc::Status ExecuteGetChildGeographies(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::GetChildGeographiesRequest& request, ::farm::nurture::location::service::proto::GetChildGeographiesResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::farm::nurture::location::service::proto::GetChildGeographiesResponse>> AsyncExecuteGetChildGeographies(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::GetChildGeographiesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::farm::nurture::location::service::proto::GetChildGeographiesResponse>>(AsyncExecuteGetChildGeographiesRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::farm::nurture::location::service::proto::GetChildGeographiesResponse>> PrepareAsyncExecuteGetChildGeographies(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::GetChildGeographiesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::farm::nurture::location::service::proto::GetChildGeographiesResponse>>(PrepareAsyncExecuteGetChildGeographiesRaw(context, request, cq));
    }
    ::grpc::Status ExecuteInsertLocationWithoutBoundary(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::InsertLocationWithoutBoundaryRequest& request, ::farm::nurture::location::service::proto::InsertLocationWithoutBoundaryResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::farm::nurture::location::service::proto::InsertLocationWithoutBoundaryResponse>> AsyncExecuteInsertLocationWithoutBoundary(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::InsertLocationWithoutBoundaryRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::farm::nurture::location::service::proto::InsertLocationWithoutBoundaryResponse>>(AsyncExecuteInsertLocationWithoutBoundaryRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::farm::nurture::location::service::proto::InsertLocationWithoutBoundaryResponse>> PrepareAsyncExecuteInsertLocationWithoutBoundary(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::InsertLocationWithoutBoundaryRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::farm::nurture::location::service::proto::InsertLocationWithoutBoundaryResponse>>(PrepareAsyncExecuteInsertLocationWithoutBoundaryRaw(context, request, cq));
    }
    ::grpc::Status ExecuteInsertLocationWithoutBoundaryBulk(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::BulkInsertLocationWithoutBoundaryRequest& request, ::farm::nurture::location::service::proto::BulkInsertLocationWithoutBoundaryResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::farm::nurture::location::service::proto::BulkInsertLocationWithoutBoundaryResponse>> AsyncExecuteInsertLocationWithoutBoundaryBulk(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::BulkInsertLocationWithoutBoundaryRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::farm::nurture::location::service::proto::BulkInsertLocationWithoutBoundaryResponse>>(AsyncExecuteInsertLocationWithoutBoundaryBulkRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::farm::nurture::location::service::proto::BulkInsertLocationWithoutBoundaryResponse>> PrepareAsyncExecuteInsertLocationWithoutBoundaryBulk(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::BulkInsertLocationWithoutBoundaryRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::farm::nurture::location::service::proto::BulkInsertLocationWithoutBoundaryResponse>>(PrepareAsyncExecuteInsertLocationWithoutBoundaryBulkRaw(context, request, cq));
    }
    ::grpc::Status ExecuteUpdateLocationWithoutBoundaryById(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::UpdateLocationWithoutBoundaryByIdRequest& request, ::farm::nurture::location::service::proto::UpdateLocationWithoutBoundaryByIdResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::farm::nurture::location::service::proto::UpdateLocationWithoutBoundaryByIdResponse>> AsyncExecuteUpdateLocationWithoutBoundaryById(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::UpdateLocationWithoutBoundaryByIdRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::farm::nurture::location::service::proto::UpdateLocationWithoutBoundaryByIdResponse>>(AsyncExecuteUpdateLocationWithoutBoundaryByIdRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::farm::nurture::location::service::proto::UpdateLocationWithoutBoundaryByIdResponse>> PrepareAsyncExecuteUpdateLocationWithoutBoundaryById(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::UpdateLocationWithoutBoundaryByIdRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::farm::nurture::location::service::proto::UpdateLocationWithoutBoundaryByIdResponse>>(PrepareAsyncExecuteUpdateLocationWithoutBoundaryByIdRaw(context, request, cq));
    }
    ::grpc::Status ExecuteUpdateLocationWithoutBoundaryByIdBulk(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::BulkUpdateLocationWithoutBoundaryByIdRequest& request, ::farm::nurture::location::service::proto::BulkUpdateLocationWithoutBoundaryByIdResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::farm::nurture::location::service::proto::BulkUpdateLocationWithoutBoundaryByIdResponse>> AsyncExecuteUpdateLocationWithoutBoundaryByIdBulk(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::BulkUpdateLocationWithoutBoundaryByIdRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::farm::nurture::location::service::proto::BulkUpdateLocationWithoutBoundaryByIdResponse>>(AsyncExecuteUpdateLocationWithoutBoundaryByIdBulkRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::farm::nurture::location::service::proto::BulkUpdateLocationWithoutBoundaryByIdResponse>> PrepareAsyncExecuteUpdateLocationWithoutBoundaryByIdBulk(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::BulkUpdateLocationWithoutBoundaryByIdRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::farm::nurture::location::service::proto::BulkUpdateLocationWithoutBoundaryByIdResponse>>(PrepareAsyncExecuteUpdateLocationWithoutBoundaryByIdBulkRaw(context, request, cq));
    }
    ::grpc::Status ExecuteDeleteLocationById(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::DeleteLocationByIdRequest& request, ::farm::nurture::location::service::proto::DeleteLocationByIdResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::farm::nurture::location::service::proto::DeleteLocationByIdResponse>> AsyncExecuteDeleteLocationById(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::DeleteLocationByIdRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::farm::nurture::location::service::proto::DeleteLocationByIdResponse>>(AsyncExecuteDeleteLocationByIdRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::farm::nurture::location::service::proto::DeleteLocationByIdResponse>> PrepareAsyncExecuteDeleteLocationById(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::DeleteLocationByIdRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::farm::nurture::location::service::proto::DeleteLocationByIdResponse>>(PrepareAsyncExecuteDeleteLocationByIdRaw(context, request, cq));
    }
    ::grpc::Status ExecuteDeleteLocationByIdBulk(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::BulkDeleteLocationByIdRequest& request, ::farm::nurture::location::service::proto::BulkDeleteLocationByIdResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::farm::nurture::location::service::proto::BulkDeleteLocationByIdResponse>> AsyncExecuteDeleteLocationByIdBulk(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::BulkDeleteLocationByIdRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::farm::nurture::location::service::proto::BulkDeleteLocationByIdResponse>>(AsyncExecuteDeleteLocationByIdBulkRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::farm::nurture::location::service::proto::BulkDeleteLocationByIdResponse>> PrepareAsyncExecuteDeleteLocationByIdBulk(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::BulkDeleteLocationByIdRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::farm::nurture::location::service::proto::BulkDeleteLocationByIdResponse>>(PrepareAsyncExecuteDeleteLocationByIdBulkRaw(context, request, cq));
    }
    ::grpc::Status Execute(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::MultiRequests& request, ::farm::nurture::location::service::proto::MultiResponses* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::farm::nurture::location::service::proto::MultiResponses>> AsyncExecute(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::MultiRequests& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::farm::nurture::location::service::proto::MultiResponses>>(AsyncExecuteRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::farm::nurture::location::service::proto::MultiResponses>> PrepareAsyncExecute(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::MultiRequests& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::farm::nurture::location::service::proto::MultiResponses>>(PrepareAsyncExecuteRaw(context, request, cq));
    }
    class async final :
      public StubInterface::async_interface {
     public:
      void ExecuteInsertLocation(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::InsertLocationRequest* request, ::farm::nurture::location::service::proto::InsertLocationResponse* response, std::function<void(::grpc::Status)>) override;
      void ExecuteInsertLocation(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::InsertLocationRequest* request, ::farm::nurture::location::service::proto::InsertLocationResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void ExecuteInsertLocationBulk(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::BulkInsertLocationRequest* request, ::farm::nurture::location::service::proto::BulkInsertLocationResponse* response, std::function<void(::grpc::Status)>) override;
      void ExecuteInsertLocationBulk(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::BulkInsertLocationRequest* request, ::farm::nurture::location::service::proto::BulkInsertLocationResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void ExecuteInsertLocationS2Cell(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::InsertLocationS2CellRequest* request, ::farm::nurture::location::service::proto::InsertLocationS2CellResponse* response, std::function<void(::grpc::Status)>) override;
      void ExecuteInsertLocationS2Cell(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::InsertLocationS2CellRequest* request, ::farm::nurture::location::service::proto::InsertLocationS2CellResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void ExecuteInsertLocationS2CellBulk(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::BulkInsertLocationS2CellRequest* request, ::farm::nurture::location::service::proto::BulkInsertLocationS2CellResponse* response, std::function<void(::grpc::Status)>) override;
      void ExecuteInsertLocationS2CellBulk(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::BulkInsertLocationS2CellRequest* request, ::farm::nurture::location::service::proto::BulkInsertLocationS2CellResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void ExecuteInsertConfig(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::InsertConfigRequest* request, ::farm::nurture::location::service::proto::InsertConfigResponse* response, std::function<void(::grpc::Status)>) override;
      void ExecuteInsertConfig(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::InsertConfigRequest* request, ::farm::nurture::location::service::proto::InsertConfigResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void ExecuteInsertConfigBulk(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::BulkInsertConfigRequest* request, ::farm::nurture::location::service::proto::BulkInsertConfigResponse* response, std::function<void(::grpc::Status)>) override;
      void ExecuteInsertConfigBulk(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::BulkInsertConfigRequest* request, ::farm::nurture::location::service::proto::BulkInsertConfigResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void ExecuteFetchLocationById(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::FetchLocationByIdRequest* request, ::farm::nurture::location::service::proto::Location* response, std::function<void(::grpc::Status)>) override;
      void ExecuteFetchLocationById(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::FetchLocationByIdRequest* request, ::farm::nurture::location::service::proto::Location* response, ::grpc::ClientUnaryReactor* reactor) override;
      void ExecuteFetchLocationByCodeAndNamespace(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::FetchLocationByCodeAndNamespaceRequest* request, ::farm::nurture::location::service::proto::Location* response, std::function<void(::grpc::Status)>) override;
      void ExecuteFetchLocationByCodeAndNamespace(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::FetchLocationByCodeAndNamespaceRequest* request, ::farm::nurture::location::service::proto::Location* response, ::grpc::ClientUnaryReactor* reactor) override;
      void ExecuteFetchS2CellById(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::FetchS2CellByIdRequest* request, ::farm::nurture::location::service::proto::S2Cell* response, std::function<void(::grpc::Status)>) override;
      void ExecuteFetchS2CellById(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::FetchS2CellByIdRequest* request, ::farm::nurture::location::service::proto::S2Cell* response, ::grpc::ClientUnaryReactor* reactor) override;
      void ExecuteFetchS2CellByLocation(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::FetchS2CellByLocationRequest* request, ::farm::nurture::location::service::proto::S2Cell* response, std::function<void(::grpc::Status)>) override;
      void ExecuteFetchS2CellByLocation(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::FetchS2CellByLocationRequest* request, ::farm::nurture::location::service::proto::S2Cell* response, ::grpc::ClientUnaryReactor* reactor) override;
      void ExecuteFetchS2CellByLocationId(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::FetchS2CellByLocationIdRequest* request, ::farm::nurture::location::service::proto::LocationS2Cells* response, std::function<void(::grpc::Status)>) override;
      void ExecuteFetchS2CellByLocationId(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::FetchS2CellByLocationIdRequest* request, ::farm::nurture::location::service::proto::LocationS2Cells* response, ::grpc::ClientUnaryReactor* reactor) override;
      void ExecuteUpdateLocationById(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::UpdateLocationByIdRequest* request, ::farm::nurture::location::service::proto::UpdateLocationByIdResponse* response, std::function<void(::grpc::Status)>) override;
      void ExecuteUpdateLocationById(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::UpdateLocationByIdRequest* request, ::farm::nurture::location::service::proto::UpdateLocationByIdResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void ExecuteUpdateLocationByIdBulk(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::BulkUpdateLocationByIdRequest* request, ::farm::nurture::location::service::proto::BulkUpdateLocationByIdResponse* response, std::function<void(::grpc::Status)>) override;
      void ExecuteUpdateLocationByIdBulk(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::BulkUpdateLocationByIdRequest* request, ::farm::nurture::location::service::proto::BulkUpdateLocationByIdResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void ExecuteUpdateLocationLabelById(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::UpdateLocationLabelByIdRequest* request, ::farm::nurture::location::service::proto::UpdateLocationLabelByIdResponse* response, std::function<void(::grpc::Status)>) override;
      void ExecuteUpdateLocationLabelById(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::UpdateLocationLabelByIdRequest* request, ::farm::nurture::location::service::proto::UpdateLocationLabelByIdResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void ExecuteUpdateLocationLabelByIdBulk(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::BulkUpdateLocationLabelByIdRequest* request, ::farm::nurture::location::service::proto::BulkUpdateLocationLabelByIdResponse* response, std::function<void(::grpc::Status)>) override;
      void ExecuteUpdateLocationLabelByIdBulk(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::BulkUpdateLocationLabelByIdRequest* request, ::farm::nurture::location::service::proto::BulkUpdateLocationLabelByIdResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void ExecuteUpdateDeleteS2CellByLocation(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::UpdateDeleteS2CellByLocationRequest* request, ::farm::nurture::location::service::proto::UpdateDeleteS2CellByLocationResponse* response, std::function<void(::grpc::Status)>) override;
      void ExecuteUpdateDeleteS2CellByLocation(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::UpdateDeleteS2CellByLocationRequest* request, ::farm::nurture::location::service::proto::UpdateDeleteS2CellByLocationResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void ExecuteUpdateDeleteS2CellByLocationBulk(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::BulkUpdateDeleteS2CellByLocationRequest* request, ::farm::nurture::location::service::proto::BulkUpdateDeleteS2CellByLocationResponse* response, std::function<void(::grpc::Status)>) override;
      void ExecuteUpdateDeleteS2CellByLocationBulk(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::BulkUpdateDeleteS2CellByLocationRequest* request, ::farm::nurture::location::service::proto::BulkUpdateDeleteS2CellByLocationResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void ExecuteFetchConfigById(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::FetchConfigByIdRequest* request, ::farm::nurture::location::service::proto::Config* response, std::function<void(::grpc::Status)>) override;
      void ExecuteFetchConfigById(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::FetchConfigByIdRequest* request, ::farm::nurture::location::service::proto::Config* response, ::grpc::ClientUnaryReactor* reactor) override;
      void ExecuteAddLocation(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::AddLocationRequest* request, ::farm::nurture::location::service::proto::AddLocationResponse* response, std::function<void(::grpc::Status)>) override;
      void ExecuteAddLocation(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::AddLocationRequest* request, ::farm::nurture::location::service::proto::AddLocationResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void ExecuteAddLocationBulk(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::BulkAddLocationRequest* request, ::farm::nurture::location::service::proto::BulkAddLocationResponse* response, std::function<void(::grpc::Status)>) override;
      void ExecuteAddLocationBulk(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::BulkAddLocationRequest* request, ::farm::nurture::location::service::proto::BulkAddLocationResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void ExecuteUpdateLocation(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::UpdateLocationRequest* request, ::farm::nurture::location::service::proto::UpdateLocationResponse* response, std::function<void(::grpc::Status)>) override;
      void ExecuteUpdateLocation(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::UpdateLocationRequest* request, ::farm::nurture::location::service::proto::UpdateLocationResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void ExecuteUpdateLocationBulk(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::BulkUpdateLocationRequest* request, ::farm::nurture::location::service::proto::BulkUpdateLocationResponse* response, std::function<void(::grpc::Status)>) override;
      void ExecuteUpdateLocationBulk(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::BulkUpdateLocationRequest* request, ::farm::nurture::location::service::proto::BulkUpdateLocationResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void ExecuteGetLocationsWithBoundary(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::GetLocationsWithBoundaryRequest* request, ::farm::nurture::location::service::proto::GetLocationsWithBoundaryResponse* response, std::function<void(::grpc::Status)>) override;
      void ExecuteGetLocationsWithBoundary(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::GetLocationsWithBoundaryRequest* request, ::farm::nurture::location::service::proto::GetLocationsWithBoundaryResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void ExecuteGetLocations(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::GetLocationsRequest* request, ::farm::nurture::location::service::proto::GetLocationsResponse* response, std::function<void(::grpc::Status)>) override;
      void ExecuteGetLocations(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::GetLocationsRequest* request, ::farm::nurture::location::service::proto::GetLocationsResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void ExecuteGetChildGeographies(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::GetChildGeographiesRequest* request, ::farm::nurture::location::service::proto::GetChildGeographiesResponse* response, std::function<void(::grpc::Status)>) override;
      void ExecuteGetChildGeographies(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::GetChildGeographiesRequest* request, ::farm::nurture::location::service::proto::GetChildGeographiesResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void ExecuteInsertLocationWithoutBoundary(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::InsertLocationWithoutBoundaryRequest* request, ::farm::nurture::location::service::proto::InsertLocationWithoutBoundaryResponse* response, std::function<void(::grpc::Status)>) override;
      void ExecuteInsertLocationWithoutBoundary(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::InsertLocationWithoutBoundaryRequest* request, ::farm::nurture::location::service::proto::InsertLocationWithoutBoundaryResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void ExecuteInsertLocationWithoutBoundaryBulk(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::BulkInsertLocationWithoutBoundaryRequest* request, ::farm::nurture::location::service::proto::BulkInsertLocationWithoutBoundaryResponse* response, std::function<void(::grpc::Status)>) override;
      void ExecuteInsertLocationWithoutBoundaryBulk(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::BulkInsertLocationWithoutBoundaryRequest* request, ::farm::nurture::location::service::proto::BulkInsertLocationWithoutBoundaryResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void ExecuteUpdateLocationWithoutBoundaryById(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::UpdateLocationWithoutBoundaryByIdRequest* request, ::farm::nurture::location::service::proto::UpdateLocationWithoutBoundaryByIdResponse* response, std::function<void(::grpc::Status)>) override;
      void ExecuteUpdateLocationWithoutBoundaryById(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::UpdateLocationWithoutBoundaryByIdRequest* request, ::farm::nurture::location::service::proto::UpdateLocationWithoutBoundaryByIdResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void ExecuteUpdateLocationWithoutBoundaryByIdBulk(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::BulkUpdateLocationWithoutBoundaryByIdRequest* request, ::farm::nurture::location::service::proto::BulkUpdateLocationWithoutBoundaryByIdResponse* response, std::function<void(::grpc::Status)>) override;
      void ExecuteUpdateLocationWithoutBoundaryByIdBulk(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::BulkUpdateLocationWithoutBoundaryByIdRequest* request, ::farm::nurture::location::service::proto::BulkUpdateLocationWithoutBoundaryByIdResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void ExecuteDeleteLocationById(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::DeleteLocationByIdRequest* request, ::farm::nurture::location::service::proto::DeleteLocationByIdResponse* response, std::function<void(::grpc::Status)>) override;
      void ExecuteDeleteLocationById(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::DeleteLocationByIdRequest* request, ::farm::nurture::location::service::proto::DeleteLocationByIdResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void ExecuteDeleteLocationByIdBulk(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::BulkDeleteLocationByIdRequest* request, ::farm::nurture::location::service::proto::BulkDeleteLocationByIdResponse* response, std::function<void(::grpc::Status)>) override;
      void ExecuteDeleteLocationByIdBulk(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::BulkDeleteLocationByIdRequest* request, ::farm::nurture::location::service::proto::BulkDeleteLocationByIdResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void Execute(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::MultiRequests* request, ::farm::nurture::location::service::proto::MultiResponses* response, std::function<void(::grpc::Status)>) override;
      void Execute(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::MultiRequests* request, ::farm::nurture::location::service::proto::MultiResponses* response, ::grpc::ClientUnaryReactor* reactor) override;
     private:
      friend class Stub;
      explicit async(Stub* stub): stub_(stub) { }
      Stub* stub() { return stub_; }
      Stub* stub_;
    };
    class async* async() override { return &async_stub_; }

   private:
    std::shared_ptr< ::grpc::ChannelInterface> channel_;
    class async async_stub_{this};
    ::grpc::ClientAsyncResponseReader< ::farm::nurture::location::service::proto::InsertLocationResponse>* AsyncExecuteInsertLocationRaw(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::InsertLocationRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::farm::nurture::location::service::proto::InsertLocationResponse>* PrepareAsyncExecuteInsertLocationRaw(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::InsertLocationRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::farm::nurture::location::service::proto::BulkInsertLocationResponse>* AsyncExecuteInsertLocationBulkRaw(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::BulkInsertLocationRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::farm::nurture::location::service::proto::BulkInsertLocationResponse>* PrepareAsyncExecuteInsertLocationBulkRaw(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::BulkInsertLocationRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::farm::nurture::location::service::proto::InsertLocationS2CellResponse>* AsyncExecuteInsertLocationS2CellRaw(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::InsertLocationS2CellRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::farm::nurture::location::service::proto::InsertLocationS2CellResponse>* PrepareAsyncExecuteInsertLocationS2CellRaw(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::InsertLocationS2CellRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::farm::nurture::location::service::proto::BulkInsertLocationS2CellResponse>* AsyncExecuteInsertLocationS2CellBulkRaw(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::BulkInsertLocationS2CellRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::farm::nurture::location::service::proto::BulkInsertLocationS2CellResponse>* PrepareAsyncExecuteInsertLocationS2CellBulkRaw(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::BulkInsertLocationS2CellRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::farm::nurture::location::service::proto::InsertConfigResponse>* AsyncExecuteInsertConfigRaw(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::InsertConfigRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::farm::nurture::location::service::proto::InsertConfigResponse>* PrepareAsyncExecuteInsertConfigRaw(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::InsertConfigRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::farm::nurture::location::service::proto::BulkInsertConfigResponse>* AsyncExecuteInsertConfigBulkRaw(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::BulkInsertConfigRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::farm::nurture::location::service::proto::BulkInsertConfigResponse>* PrepareAsyncExecuteInsertConfigBulkRaw(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::BulkInsertConfigRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::farm::nurture::location::service::proto::Location>* AsyncExecuteFetchLocationByIdRaw(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::FetchLocationByIdRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::farm::nurture::location::service::proto::Location>* PrepareAsyncExecuteFetchLocationByIdRaw(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::FetchLocationByIdRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::farm::nurture::location::service::proto::Location>* AsyncExecuteFetchLocationByCodeAndNamespaceRaw(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::FetchLocationByCodeAndNamespaceRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::farm::nurture::location::service::proto::Location>* PrepareAsyncExecuteFetchLocationByCodeAndNamespaceRaw(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::FetchLocationByCodeAndNamespaceRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::farm::nurture::location::service::proto::S2Cell>* AsyncExecuteFetchS2CellByIdRaw(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::FetchS2CellByIdRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::farm::nurture::location::service::proto::S2Cell>* PrepareAsyncExecuteFetchS2CellByIdRaw(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::FetchS2CellByIdRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::farm::nurture::location::service::proto::S2Cell>* AsyncExecuteFetchS2CellByLocationRaw(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::FetchS2CellByLocationRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::farm::nurture::location::service::proto::S2Cell>* PrepareAsyncExecuteFetchS2CellByLocationRaw(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::FetchS2CellByLocationRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::farm::nurture::location::service::proto::LocationS2Cells>* AsyncExecuteFetchS2CellByLocationIdRaw(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::FetchS2CellByLocationIdRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::farm::nurture::location::service::proto::LocationS2Cells>* PrepareAsyncExecuteFetchS2CellByLocationIdRaw(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::FetchS2CellByLocationIdRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::farm::nurture::location::service::proto::UpdateLocationByIdResponse>* AsyncExecuteUpdateLocationByIdRaw(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::UpdateLocationByIdRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::farm::nurture::location::service::proto::UpdateLocationByIdResponse>* PrepareAsyncExecuteUpdateLocationByIdRaw(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::UpdateLocationByIdRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::farm::nurture::location::service::proto::BulkUpdateLocationByIdResponse>* AsyncExecuteUpdateLocationByIdBulkRaw(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::BulkUpdateLocationByIdRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::farm::nurture::location::service::proto::BulkUpdateLocationByIdResponse>* PrepareAsyncExecuteUpdateLocationByIdBulkRaw(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::BulkUpdateLocationByIdRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::farm::nurture::location::service::proto::UpdateLocationLabelByIdResponse>* AsyncExecuteUpdateLocationLabelByIdRaw(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::UpdateLocationLabelByIdRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::farm::nurture::location::service::proto::UpdateLocationLabelByIdResponse>* PrepareAsyncExecuteUpdateLocationLabelByIdRaw(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::UpdateLocationLabelByIdRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::farm::nurture::location::service::proto::BulkUpdateLocationLabelByIdResponse>* AsyncExecuteUpdateLocationLabelByIdBulkRaw(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::BulkUpdateLocationLabelByIdRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::farm::nurture::location::service::proto::BulkUpdateLocationLabelByIdResponse>* PrepareAsyncExecuteUpdateLocationLabelByIdBulkRaw(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::BulkUpdateLocationLabelByIdRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::farm::nurture::location::service::proto::UpdateDeleteS2CellByLocationResponse>* AsyncExecuteUpdateDeleteS2CellByLocationRaw(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::UpdateDeleteS2CellByLocationRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::farm::nurture::location::service::proto::UpdateDeleteS2CellByLocationResponse>* PrepareAsyncExecuteUpdateDeleteS2CellByLocationRaw(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::UpdateDeleteS2CellByLocationRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::farm::nurture::location::service::proto::BulkUpdateDeleteS2CellByLocationResponse>* AsyncExecuteUpdateDeleteS2CellByLocationBulkRaw(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::BulkUpdateDeleteS2CellByLocationRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::farm::nurture::location::service::proto::BulkUpdateDeleteS2CellByLocationResponse>* PrepareAsyncExecuteUpdateDeleteS2CellByLocationBulkRaw(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::BulkUpdateDeleteS2CellByLocationRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::farm::nurture::location::service::proto::Config>* AsyncExecuteFetchConfigByIdRaw(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::FetchConfigByIdRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::farm::nurture::location::service::proto::Config>* PrepareAsyncExecuteFetchConfigByIdRaw(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::FetchConfigByIdRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::farm::nurture::location::service::proto::AddLocationResponse>* AsyncExecuteAddLocationRaw(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::AddLocationRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::farm::nurture::location::service::proto::AddLocationResponse>* PrepareAsyncExecuteAddLocationRaw(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::AddLocationRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::farm::nurture::location::service::proto::BulkAddLocationResponse>* AsyncExecuteAddLocationBulkRaw(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::BulkAddLocationRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::farm::nurture::location::service::proto::BulkAddLocationResponse>* PrepareAsyncExecuteAddLocationBulkRaw(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::BulkAddLocationRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::farm::nurture::location::service::proto::UpdateLocationResponse>* AsyncExecuteUpdateLocationRaw(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::UpdateLocationRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::farm::nurture::location::service::proto::UpdateLocationResponse>* PrepareAsyncExecuteUpdateLocationRaw(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::UpdateLocationRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::farm::nurture::location::service::proto::BulkUpdateLocationResponse>* AsyncExecuteUpdateLocationBulkRaw(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::BulkUpdateLocationRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::farm::nurture::location::service::proto::BulkUpdateLocationResponse>* PrepareAsyncExecuteUpdateLocationBulkRaw(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::BulkUpdateLocationRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::farm::nurture::location::service::proto::GetLocationsWithBoundaryResponse>* AsyncExecuteGetLocationsWithBoundaryRaw(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::GetLocationsWithBoundaryRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::farm::nurture::location::service::proto::GetLocationsWithBoundaryResponse>* PrepareAsyncExecuteGetLocationsWithBoundaryRaw(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::GetLocationsWithBoundaryRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::farm::nurture::location::service::proto::GetLocationsResponse>* AsyncExecuteGetLocationsRaw(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::GetLocationsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::farm::nurture::location::service::proto::GetLocationsResponse>* PrepareAsyncExecuteGetLocationsRaw(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::GetLocationsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::farm::nurture::location::service::proto::GetChildGeographiesResponse>* AsyncExecuteGetChildGeographiesRaw(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::GetChildGeographiesRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::farm::nurture::location::service::proto::GetChildGeographiesResponse>* PrepareAsyncExecuteGetChildGeographiesRaw(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::GetChildGeographiesRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::farm::nurture::location::service::proto::InsertLocationWithoutBoundaryResponse>* AsyncExecuteInsertLocationWithoutBoundaryRaw(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::InsertLocationWithoutBoundaryRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::farm::nurture::location::service::proto::InsertLocationWithoutBoundaryResponse>* PrepareAsyncExecuteInsertLocationWithoutBoundaryRaw(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::InsertLocationWithoutBoundaryRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::farm::nurture::location::service::proto::BulkInsertLocationWithoutBoundaryResponse>* AsyncExecuteInsertLocationWithoutBoundaryBulkRaw(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::BulkInsertLocationWithoutBoundaryRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::farm::nurture::location::service::proto::BulkInsertLocationWithoutBoundaryResponse>* PrepareAsyncExecuteInsertLocationWithoutBoundaryBulkRaw(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::BulkInsertLocationWithoutBoundaryRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::farm::nurture::location::service::proto::UpdateLocationWithoutBoundaryByIdResponse>* AsyncExecuteUpdateLocationWithoutBoundaryByIdRaw(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::UpdateLocationWithoutBoundaryByIdRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::farm::nurture::location::service::proto::UpdateLocationWithoutBoundaryByIdResponse>* PrepareAsyncExecuteUpdateLocationWithoutBoundaryByIdRaw(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::UpdateLocationWithoutBoundaryByIdRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::farm::nurture::location::service::proto::BulkUpdateLocationWithoutBoundaryByIdResponse>* AsyncExecuteUpdateLocationWithoutBoundaryByIdBulkRaw(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::BulkUpdateLocationWithoutBoundaryByIdRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::farm::nurture::location::service::proto::BulkUpdateLocationWithoutBoundaryByIdResponse>* PrepareAsyncExecuteUpdateLocationWithoutBoundaryByIdBulkRaw(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::BulkUpdateLocationWithoutBoundaryByIdRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::farm::nurture::location::service::proto::DeleteLocationByIdResponse>* AsyncExecuteDeleteLocationByIdRaw(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::DeleteLocationByIdRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::farm::nurture::location::service::proto::DeleteLocationByIdResponse>* PrepareAsyncExecuteDeleteLocationByIdRaw(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::DeleteLocationByIdRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::farm::nurture::location::service::proto::BulkDeleteLocationByIdResponse>* AsyncExecuteDeleteLocationByIdBulkRaw(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::BulkDeleteLocationByIdRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::farm::nurture::location::service::proto::BulkDeleteLocationByIdResponse>* PrepareAsyncExecuteDeleteLocationByIdBulkRaw(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::BulkDeleteLocationByIdRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::farm::nurture::location::service::proto::MultiResponses>* AsyncExecuteRaw(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::MultiRequests& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::farm::nurture::location::service::proto::MultiResponses>* PrepareAsyncExecuteRaw(::grpc::ClientContext* context, const ::farm::nurture::location::service::proto::MultiRequests& request, ::grpc::CompletionQueue* cq) override;
    const ::grpc::internal::RpcMethod rpcmethod_ExecuteInsertLocation_;
    const ::grpc::internal::RpcMethod rpcmethod_ExecuteInsertLocationBulk_;
    const ::grpc::internal::RpcMethod rpcmethod_ExecuteInsertLocationS2Cell_;
    const ::grpc::internal::RpcMethod rpcmethod_ExecuteInsertLocationS2CellBulk_;
    const ::grpc::internal::RpcMethod rpcmethod_ExecuteInsertConfig_;
    const ::grpc::internal::RpcMethod rpcmethod_ExecuteInsertConfigBulk_;
    const ::grpc::internal::RpcMethod rpcmethod_ExecuteFetchLocationById_;
    const ::grpc::internal::RpcMethod rpcmethod_ExecuteFetchLocationByCodeAndNamespace_;
    const ::grpc::internal::RpcMethod rpcmethod_ExecuteFetchS2CellById_;
    const ::grpc::internal::RpcMethod rpcmethod_ExecuteFetchS2CellByLocation_;
    const ::grpc::internal::RpcMethod rpcmethod_ExecuteFetchS2CellByLocationId_;
    const ::grpc::internal::RpcMethod rpcmethod_ExecuteUpdateLocationById_;
    const ::grpc::internal::RpcMethod rpcmethod_ExecuteUpdateLocationByIdBulk_;
    const ::grpc::internal::RpcMethod rpcmethod_ExecuteUpdateLocationLabelById_;
    const ::grpc::internal::RpcMethod rpcmethod_ExecuteUpdateLocationLabelByIdBulk_;
    const ::grpc::internal::RpcMethod rpcmethod_ExecuteUpdateDeleteS2CellByLocation_;
    const ::grpc::internal::RpcMethod rpcmethod_ExecuteUpdateDeleteS2CellByLocationBulk_;
    const ::grpc::internal::RpcMethod rpcmethod_ExecuteFetchConfigById_;
    const ::grpc::internal::RpcMethod rpcmethod_ExecuteAddLocation_;
    const ::grpc::internal::RpcMethod rpcmethod_ExecuteAddLocationBulk_;
    const ::grpc::internal::RpcMethod rpcmethod_ExecuteUpdateLocation_;
    const ::grpc::internal::RpcMethod rpcmethod_ExecuteUpdateLocationBulk_;
    const ::grpc::internal::RpcMethod rpcmethod_ExecuteGetLocationsWithBoundary_;
    const ::grpc::internal::RpcMethod rpcmethod_ExecuteGetLocations_;
    const ::grpc::internal::RpcMethod rpcmethod_ExecuteGetChildGeographies_;
    const ::grpc::internal::RpcMethod rpcmethod_ExecuteInsertLocationWithoutBoundary_;
    const ::grpc::internal::RpcMethod rpcmethod_ExecuteInsertLocationWithoutBoundaryBulk_;
    const ::grpc::internal::RpcMethod rpcmethod_ExecuteUpdateLocationWithoutBoundaryById_;
    const ::grpc::internal::RpcMethod rpcmethod_ExecuteUpdateLocationWithoutBoundaryByIdBulk_;
    const ::grpc::internal::RpcMethod rpcmethod_ExecuteDeleteLocationById_;
    const ::grpc::internal::RpcMethod rpcmethod_ExecuteDeleteLocationByIdBulk_;
    const ::grpc::internal::RpcMethod rpcmethod_Execute_;
  };
  static std::unique_ptr<Stub> NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());

  class Service : public ::grpc::Service {
   public:
    Service();
    virtual ~Service();
    virtual ::grpc::Status ExecuteInsertLocation(::grpc::ServerContext* context, const ::farm::nurture::location::service::proto::InsertLocationRequest* request, ::farm::nurture::location::service::proto::InsertLocationResponse* response);
    virtual ::grpc::Status ExecuteInsertLocationBulk(::grpc::ServerContext* context, const ::farm::nurture::location::service::proto::BulkInsertLocationRequest* request, ::farm::nurture::location::service::proto::BulkInsertLocationResponse* response);
    virtual ::grpc::Status ExecuteInsertLocationS2Cell(::grpc::ServerContext* context, const ::farm::nurture::location::service::proto::InsertLocationS2CellRequest* request, ::farm::nurture::location::service::proto::InsertLocationS2CellResponse* response);
    virtual ::grpc::Status ExecuteInsertLocationS2CellBulk(::grpc::ServerContext* context, const ::farm::nurture::location::service::proto::BulkInsertLocationS2CellRequest* request, ::farm::nurture::location::service::proto::BulkInsertLocationS2CellResponse* response);
    virtual ::grpc::Status ExecuteInsertConfig(::grpc::ServerContext* context, const ::farm::nurture::location::service::proto::InsertConfigRequest* request, ::farm::nurture::location::service::proto::InsertConfigResponse* response);
    virtual ::grpc::Status ExecuteInsertConfigBulk(::grpc::ServerContext* context, const ::farm::nurture::location::service::proto::BulkInsertConfigRequest* request, ::farm::nurture::location::service::proto::BulkInsertConfigResponse* response);
    virtual ::grpc::Status ExecuteFetchLocationById(::grpc::ServerContext* context, const ::farm::nurture::location::service::proto::FetchLocationByIdRequest* request, ::farm::nurture::location::service::proto::Location* response);
    virtual ::grpc::Status ExecuteFetchLocationByCodeAndNamespace(::grpc::ServerContext* context, const ::farm::nurture::location::service::proto::FetchLocationByCodeAndNamespaceRequest* request, ::farm::nurture::location::service::proto::Location* response);
    virtual ::grpc::Status ExecuteFetchS2CellById(::grpc::ServerContext* context, const ::farm::nurture::location::service::proto::FetchS2CellByIdRequest* request, ::farm::nurture::location::service::proto::S2Cell* response);
    virtual ::grpc::Status ExecuteFetchS2CellByLocation(::grpc::ServerContext* context, const ::farm::nurture::location::service::proto::FetchS2CellByLocationRequest* request, ::farm::nurture::location::service::proto::S2Cell* response);
    virtual ::grpc::Status ExecuteFetchS2CellByLocationId(::grpc::ServerContext* context, const ::farm::nurture::location::service::proto::FetchS2CellByLocationIdRequest* request, ::farm::nurture::location::service::proto::LocationS2Cells* response);
    virtual ::grpc::Status ExecuteUpdateLocationById(::grpc::ServerContext* context, const ::farm::nurture::location::service::proto::UpdateLocationByIdRequest* request, ::farm::nurture::location::service::proto::UpdateLocationByIdResponse* response);
    virtual ::grpc::Status ExecuteUpdateLocationByIdBulk(::grpc::ServerContext* context, const ::farm::nurture::location::service::proto::BulkUpdateLocationByIdRequest* request, ::farm::nurture::location::service::proto::BulkUpdateLocationByIdResponse* response);
    virtual ::grpc::Status ExecuteUpdateLocationLabelById(::grpc::ServerContext* context, const ::farm::nurture::location::service::proto::UpdateLocationLabelByIdRequest* request, ::farm::nurture::location::service::proto::UpdateLocationLabelByIdResponse* response);
    virtual ::grpc::Status ExecuteUpdateLocationLabelByIdBulk(::grpc::ServerContext* context, const ::farm::nurture::location::service::proto::BulkUpdateLocationLabelByIdRequest* request, ::farm::nurture::location::service::proto::BulkUpdateLocationLabelByIdResponse* response);
    virtual ::grpc::Status ExecuteUpdateDeleteS2CellByLocation(::grpc::ServerContext* context, const ::farm::nurture::location::service::proto::UpdateDeleteS2CellByLocationRequest* request, ::farm::nurture::location::service::proto::UpdateDeleteS2CellByLocationResponse* response);
    virtual ::grpc::Status ExecuteUpdateDeleteS2CellByLocationBulk(::grpc::ServerContext* context, const ::farm::nurture::location::service::proto::BulkUpdateDeleteS2CellByLocationRequest* request, ::farm::nurture::location::service::proto::BulkUpdateDeleteS2CellByLocationResponse* response);
    virtual ::grpc::Status ExecuteFetchConfigById(::grpc::ServerContext* context, const ::farm::nurture::location::service::proto::FetchConfigByIdRequest* request, ::farm::nurture::location::service::proto::Config* response);
    virtual ::grpc::Status ExecuteAddLocation(::grpc::ServerContext* context, const ::farm::nurture::location::service::proto::AddLocationRequest* request, ::farm::nurture::location::service::proto::AddLocationResponse* response);
    virtual ::grpc::Status ExecuteAddLocationBulk(::grpc::ServerContext* context, const ::farm::nurture::location::service::proto::BulkAddLocationRequest* request, ::farm::nurture::location::service::proto::BulkAddLocationResponse* response);
    virtual ::grpc::Status ExecuteUpdateLocation(::grpc::ServerContext* context, const ::farm::nurture::location::service::proto::UpdateLocationRequest* request, ::farm::nurture::location::service::proto::UpdateLocationResponse* response);
    virtual ::grpc::Status ExecuteUpdateLocationBulk(::grpc::ServerContext* context, const ::farm::nurture::location::service::proto::BulkUpdateLocationRequest* request, ::farm::nurture::location::service::proto::BulkUpdateLocationResponse* response);
    virtual ::grpc::Status ExecuteGetLocationsWithBoundary(::grpc::ServerContext* context, const ::farm::nurture::location::service::proto::GetLocationsWithBoundaryRequest* request, ::farm::nurture::location::service::proto::GetLocationsWithBoundaryResponse* response);
    virtual ::grpc::Status ExecuteGetLocations(::grpc::ServerContext* context, const ::farm::nurture::location::service::proto::GetLocationsRequest* request, ::farm::nurture::location::service::proto::GetLocationsResponse* response);
    virtual ::grpc::Status ExecuteGetChildGeographies(::grpc::ServerContext* context, const ::farm::nurture::location::service::proto::GetChildGeographiesRequest* request, ::farm::nurture::location::service::proto::GetChildGeographiesResponse* response);
    virtual ::grpc::Status ExecuteInsertLocationWithoutBoundary(::grpc::ServerContext* context, const ::farm::nurture::location::service::proto::InsertLocationWithoutBoundaryRequest* request, ::farm::nurture::location::service::proto::InsertLocationWithoutBoundaryResponse* response);
    virtual ::grpc::Status ExecuteInsertLocationWithoutBoundaryBulk(::grpc::ServerContext* context, const ::farm::nurture::location::service::proto::BulkInsertLocationWithoutBoundaryRequest* request, ::farm::nurture::location::service::proto::BulkInsertLocationWithoutBoundaryResponse* response);
    virtual ::grpc::Status ExecuteUpdateLocationWithoutBoundaryById(::grpc::ServerContext* context, const ::farm::nurture::location::service::proto::UpdateLocationWithoutBoundaryByIdRequest* request, ::farm::nurture::location::service::proto::UpdateLocationWithoutBoundaryByIdResponse* response);
    virtual ::grpc::Status ExecuteUpdateLocationWithoutBoundaryByIdBulk(::grpc::ServerContext* context, const ::farm::nurture::location::service::proto::BulkUpdateLocationWithoutBoundaryByIdRequest* request, ::farm::nurture::location::service::proto::BulkUpdateLocationWithoutBoundaryByIdResponse* response);
    virtual ::grpc::Status ExecuteDeleteLocationById(::grpc::ServerContext* context, const ::farm::nurture::location::service::proto::DeleteLocationByIdRequest* request, ::farm::nurture::location::service::proto::DeleteLocationByIdResponse* response);
    virtual ::grpc::Status ExecuteDeleteLocationByIdBulk(::grpc::ServerContext* context, const ::farm::nurture::location::service::proto::BulkDeleteLocationByIdRequest* request, ::farm::nurture::location::service::proto::BulkDeleteLocationByIdResponse* response);
    virtual ::grpc::Status Execute(::grpc::ServerContext* context, const ::farm::nurture::location::service::proto::MultiRequests* request, ::farm::nurture::location::service::proto::MultiResponses* response);
  };
  template <class BaseClass>
  class WithAsyncMethod_ExecuteInsertLocation : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_ExecuteInsertLocation() {
      ::grpc::Service::MarkMethodAsync(0);
    }
    ~WithAsyncMethod_ExecuteInsertLocation() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ExecuteInsertLocation(::grpc::ServerContext* /*context*/, const ::farm::nurture::location::service::proto::InsertLocationRequest* /*request*/, ::farm::nurture::location::service::proto::InsertLocationResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestExecuteInsertLocation(::grpc::ServerContext* context, ::farm::nurture::location::service::proto::InsertLocationRequest* request, ::grpc::ServerAsyncResponseWriter< ::farm::nurture::location::service::proto::InsertLocationResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ExecuteInsertLocationBulk : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_ExecuteInsertLocationBulk() {
      ::grpc::Service::MarkMethodAsync(1);
    }
    ~WithAsyncMethod_ExecuteInsertLocationBulk() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ExecuteInsertLocationBulk(::grpc::ServerContext* /*context*/, const ::farm::nurture::location::service::proto::BulkInsertLocationRequest* /*request*/, ::farm::nurture::location::service::proto::BulkInsertLocationResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestExecuteInsertLocationBulk(::grpc::ServerContext* context, ::farm::nurture::location::service::proto::BulkInsertLocationRequest* request, ::grpc::ServerAsyncResponseWriter< ::farm::nurture::location::service::proto::BulkInsertLocationResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ExecuteInsertLocationS2Cell : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_ExecuteInsertLocationS2Cell() {
      ::grpc::Service::MarkMethodAsync(2);
    }
    ~WithAsyncMethod_ExecuteInsertLocationS2Cell() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ExecuteInsertLocationS2Cell(::grpc::ServerContext* /*context*/, const ::farm::nurture::location::service::proto::InsertLocationS2CellRequest* /*request*/, ::farm::nurture::location::service::proto::InsertLocationS2CellResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestExecuteInsertLocationS2Cell(::grpc::ServerContext* context, ::farm::nurture::location::service::proto::InsertLocationS2CellRequest* request, ::grpc::ServerAsyncResponseWriter< ::farm::nurture::location::service::proto::InsertLocationS2CellResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ExecuteInsertLocationS2CellBulk : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_ExecuteInsertLocationS2CellBulk() {
      ::grpc::Service::MarkMethodAsync(3);
    }
    ~WithAsyncMethod_ExecuteInsertLocationS2CellBulk() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ExecuteInsertLocationS2CellBulk(::grpc::ServerContext* /*context*/, const ::farm::nurture::location::service::proto::BulkInsertLocationS2CellRequest* /*request*/, ::farm::nurture::location::service::proto::BulkInsertLocationS2CellResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestExecuteInsertLocationS2CellBulk(::grpc::ServerContext* context, ::farm::nurture::location::service::proto::BulkInsertLocationS2CellRequest* request, ::grpc::ServerAsyncResponseWriter< ::farm::nurture::location::service::proto::BulkInsertLocationS2CellResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ExecuteInsertConfig : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_ExecuteInsertConfig() {
      ::grpc::Service::MarkMethodAsync(4);
    }
    ~WithAsyncMethod_ExecuteInsertConfig() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ExecuteInsertConfig(::grpc::ServerContext* /*context*/, const ::farm::nurture::location::service::proto::InsertConfigRequest* /*request*/, ::farm::nurture::location::service::proto::InsertConfigResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestExecuteInsertConfig(::grpc::ServerContext* context, ::farm::nurture::location::service::proto::InsertConfigRequest* request, ::grpc::ServerAsyncResponseWriter< ::farm::nurture::location::service::proto::InsertConfigResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ExecuteInsertConfigBulk : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_ExecuteInsertConfigBulk() {
      ::grpc::Service::MarkMethodAsync(5);
    }
    ~WithAsyncMethod_ExecuteInsertConfigBulk() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ExecuteInsertConfigBulk(::grpc::ServerContext* /*context*/, const ::farm::nurture::location::service::proto::BulkInsertConfigRequest* /*request*/, ::farm::nurture::location::service::proto::BulkInsertConfigResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestExecuteInsertConfigBulk(::grpc::ServerContext* context, ::farm::nurture::location::service::proto::BulkInsertConfigRequest* request, ::grpc::ServerAsyncResponseWriter< ::farm::nurture::location::service::proto::BulkInsertConfigResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(5, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ExecuteFetchLocationById : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_ExecuteFetchLocationById() {
      ::grpc::Service::MarkMethodAsync(6);
    }
    ~WithAsyncMethod_ExecuteFetchLocationById() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ExecuteFetchLocationById(::grpc::ServerContext* /*context*/, const ::farm::nurture::location::service::proto::FetchLocationByIdRequest* /*request*/, ::farm::nurture::location::service::proto::Location* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestExecuteFetchLocationById(::grpc::ServerContext* context, ::farm::nurture::location::service::proto::FetchLocationByIdRequest* request, ::grpc::ServerAsyncResponseWriter< ::farm::nurture::location::service::proto::Location>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(6, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ExecuteFetchLocationByCodeAndNamespace : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_ExecuteFetchLocationByCodeAndNamespace() {
      ::grpc::Service::MarkMethodAsync(7);
    }
    ~WithAsyncMethod_ExecuteFetchLocationByCodeAndNamespace() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ExecuteFetchLocationByCodeAndNamespace(::grpc::ServerContext* /*context*/, const ::farm::nurture::location::service::proto::FetchLocationByCodeAndNamespaceRequest* /*request*/, ::farm::nurture::location::service::proto::Location* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestExecuteFetchLocationByCodeAndNamespace(::grpc::ServerContext* context, ::farm::nurture::location::service::proto::FetchLocationByCodeAndNamespaceRequest* request, ::grpc::ServerAsyncResponseWriter< ::farm::nurture::location::service::proto::Location>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(7, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ExecuteFetchS2CellById : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_ExecuteFetchS2CellById() {
      ::grpc::Service::MarkMethodAsync(8);
    }
    ~WithAsyncMethod_ExecuteFetchS2CellById() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ExecuteFetchS2CellById(::grpc::ServerContext* /*context*/, const ::farm::nurture::location::service::proto::FetchS2CellByIdRequest* /*request*/, ::farm::nurture::location::service::proto::S2Cell* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestExecuteFetchS2CellById(::grpc::ServerContext* context, ::farm::nurture::location::service::proto::FetchS2CellByIdRequest* request, ::grpc::ServerAsyncResponseWriter< ::farm::nurture::location::service::proto::S2Cell>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(8, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ExecuteFetchS2CellByLocation : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_ExecuteFetchS2CellByLocation() {
      ::grpc::Service::MarkMethodAsync(9);
    }
    ~WithAsyncMethod_ExecuteFetchS2CellByLocation() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ExecuteFetchS2CellByLocation(::grpc::ServerContext* /*context*/, const ::farm::nurture::location::service::proto::FetchS2CellByLocationRequest* /*request*/, ::farm::nurture::location::service::proto::S2Cell* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestExecuteFetchS2CellByLocation(::grpc::ServerContext* context, ::farm::nurture::location::service::proto::FetchS2CellByLocationRequest* request, ::grpc::ServerAsyncResponseWriter< ::farm::nurture::location::service::proto::S2Cell>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(9, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ExecuteFetchS2CellByLocationId : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_ExecuteFetchS2CellByLocationId() {
      ::grpc::Service::MarkMethodAsync(10);
    }
    ~WithAsyncMethod_ExecuteFetchS2CellByLocationId() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ExecuteFetchS2CellByLocationId(::grpc::ServerContext* /*context*/, const ::farm::nurture::location::service::proto::FetchS2CellByLocationIdRequest* /*request*/, ::farm::nurture::location::service::proto::LocationS2Cells* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestExecuteFetchS2CellByLocationId(::grpc::ServerContext* context, ::farm::nurture::location::service::proto::FetchS2CellByLocationIdRequest* request, ::grpc::ServerAsyncResponseWriter< ::farm::nurture::location::service::proto::LocationS2Cells>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(10, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ExecuteUpdateLocationById : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_ExecuteUpdateLocationById() {
      ::grpc::Service::MarkMethodAsync(11);
    }
    ~WithAsyncMethod_ExecuteUpdateLocationById() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ExecuteUpdateLocationById(::grpc::ServerContext* /*context*/, const ::farm::nurture::location::service::proto::UpdateLocationByIdRequest* /*request*/, ::farm::nurture::location::service::proto::UpdateLocationByIdResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestExecuteUpdateLocationById(::grpc::ServerContext* context, ::farm::nurture::location::service::proto::UpdateLocationByIdRequest* request, ::grpc::ServerAsyncResponseWriter< ::farm::nurture::location::service::proto::UpdateLocationByIdResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(11, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ExecuteUpdateLocationByIdBulk : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_ExecuteUpdateLocationByIdBulk() {
      ::grpc::Service::MarkMethodAsync(12);
    }
    ~WithAsyncMethod_ExecuteUpdateLocationByIdBulk() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ExecuteUpdateLocationByIdBulk(::grpc::ServerContext* /*context*/, const ::farm::nurture::location::service::proto::BulkUpdateLocationByIdRequest* /*request*/, ::farm::nurture::location::service::proto::BulkUpdateLocationByIdResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestExecuteUpdateLocationByIdBulk(::grpc::ServerContext* context, ::farm::nurture::location::service::proto::BulkUpdateLocationByIdRequest* request, ::grpc::ServerAsyncResponseWriter< ::farm::nurture::location::service::proto::BulkUpdateLocationByIdResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(12, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ExecuteUpdateLocationLabelById : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_ExecuteUpdateLocationLabelById() {
      ::grpc::Service::MarkMethodAsync(13);
    }
    ~WithAsyncMethod_ExecuteUpdateLocationLabelById() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ExecuteUpdateLocationLabelById(::grpc::ServerContext* /*context*/, const ::farm::nurture::location::service::proto::UpdateLocationLabelByIdRequest* /*request*/, ::farm::nurture::location::service::proto::UpdateLocationLabelByIdResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestExecuteUpdateLocationLabelById(::grpc::ServerContext* context, ::farm::nurture::location::service::proto::UpdateLocationLabelByIdRequest* request, ::grpc::ServerAsyncResponseWriter< ::farm::nurture::location::service::proto::UpdateLocationLabelByIdResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(13, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ExecuteUpdateLocationLabelByIdBulk : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_ExecuteUpdateLocationLabelByIdBulk() {
      ::grpc::Service::MarkMethodAsync(14);
    }
    ~WithAsyncMethod_ExecuteUpdateLocationLabelByIdBulk() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ExecuteUpdateLocationLabelByIdBulk(::grpc::ServerContext* /*context*/, const ::farm::nurture::location::service::proto::BulkUpdateLocationLabelByIdRequest* /*request*/, ::farm::nurture::location::service::proto::BulkUpdateLocationLabelByIdResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestExecuteUpdateLocationLabelByIdBulk(::grpc::ServerContext* context, ::farm::nurture::location::service::proto::BulkUpdateLocationLabelByIdRequest* request, ::grpc::ServerAsyncResponseWriter< ::farm::nurture::location::service::proto::BulkUpdateLocationLabelByIdResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(14, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ExecuteUpdateDeleteS2CellByLocation : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_ExecuteUpdateDeleteS2CellByLocation() {
      ::grpc::Service::MarkMethodAsync(15);
    }
    ~WithAsyncMethod_ExecuteUpdateDeleteS2CellByLocation() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ExecuteUpdateDeleteS2CellByLocation(::grpc::ServerContext* /*context*/, const ::farm::nurture::location::service::proto::UpdateDeleteS2CellByLocationRequest* /*request*/, ::farm::nurture::location::service::proto::UpdateDeleteS2CellByLocationResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestExecuteUpdateDeleteS2CellByLocation(::grpc::ServerContext* context, ::farm::nurture::location::service::proto::UpdateDeleteS2CellByLocationRequest* request, ::grpc::ServerAsyncResponseWriter< ::farm::nurture::location::service::proto::UpdateDeleteS2CellByLocationResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(15, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ExecuteUpdateDeleteS2CellByLocationBulk : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_ExecuteUpdateDeleteS2CellByLocationBulk() {
      ::grpc::Service::MarkMethodAsync(16);
    }
    ~WithAsyncMethod_ExecuteUpdateDeleteS2CellByLocationBulk() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ExecuteUpdateDeleteS2CellByLocationBulk(::grpc::ServerContext* /*context*/, const ::farm::nurture::location::service::proto::BulkUpdateDeleteS2CellByLocationRequest* /*request*/, ::farm::nurture::location::service::proto::BulkUpdateDeleteS2CellByLocationResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestExecuteUpdateDeleteS2CellByLocationBulk(::grpc::ServerContext* context, ::farm::nurture::location::service::proto::BulkUpdateDeleteS2CellByLocationRequest* request, ::grpc::ServerAsyncResponseWriter< ::farm::nurture::location::service::proto::BulkUpdateDeleteS2CellByLocationResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(16, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ExecuteFetchConfigById : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_ExecuteFetchConfigById() {
      ::grpc::Service::MarkMethodAsync(17);
    }
    ~WithAsyncMethod_ExecuteFetchConfigById() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ExecuteFetchConfigById(::grpc::ServerContext* /*context*/, const ::farm::nurture::location::service::proto::FetchConfigByIdRequest* /*request*/, ::farm::nurture::location::service::proto::Config* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestExecuteFetchConfigById(::grpc::ServerContext* context, ::farm::nurture::location::service::proto::FetchConfigByIdRequest* request, ::grpc::ServerAsyncResponseWriter< ::farm::nurture::location::service::proto::Config>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(17, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ExecuteAddLocation : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_ExecuteAddLocation() {
      ::grpc::Service::MarkMethodAsync(18);
    }
    ~WithAsyncMethod_ExecuteAddLocation() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ExecuteAddLocation(::grpc::ServerContext* /*context*/, const ::farm::nurture::location::service::proto::AddLocationRequest* /*request*/, ::farm::nurture::location::service::proto::AddLocationResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestExecuteAddLocation(::grpc::ServerContext* context, ::farm::nurture::location::service::proto::AddLocationRequest* request, ::grpc::ServerAsyncResponseWriter< ::farm::nurture::location::service::proto::AddLocationResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(18, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ExecuteAddLocationBulk : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_ExecuteAddLocationBulk() {
      ::grpc::Service::MarkMethodAsync(19);
    }
    ~WithAsyncMethod_ExecuteAddLocationBulk() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ExecuteAddLocationBulk(::grpc::ServerContext* /*context*/, const ::farm::nurture::location::service::proto::BulkAddLocationRequest* /*request*/, ::farm::nurture::location::service::proto::BulkAddLocationResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestExecuteAddLocationBulk(::grpc::ServerContext* context, ::farm::nurture::location::service::proto::BulkAddLocationRequest* request, ::grpc::ServerAsyncResponseWriter< ::farm::nurture::location::service::proto::BulkAddLocationResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(19, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ExecuteUpdateLocation : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_ExecuteUpdateLocation() {
      ::grpc::Service::MarkMethodAsync(20);
    }
    ~WithAsyncMethod_ExecuteUpdateLocation() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ExecuteUpdateLocation(::grpc::ServerContext* /*context*/, const ::farm::nurture::location::service::proto::UpdateLocationRequest* /*request*/, ::farm::nurture::location::service::proto::UpdateLocationResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestExecuteUpdateLocation(::grpc::ServerContext* context, ::farm::nurture::location::service::proto::UpdateLocationRequest* request, ::grpc::ServerAsyncResponseWriter< ::farm::nurture::location::service::proto::UpdateLocationResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(20, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ExecuteUpdateLocationBulk : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_ExecuteUpdateLocationBulk() {
      ::grpc::Service::MarkMethodAsync(21);
    }
    ~WithAsyncMethod_ExecuteUpdateLocationBulk() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ExecuteUpdateLocationBulk(::grpc::ServerContext* /*context*/, const ::farm::nurture::location::service::proto::BulkUpdateLocationRequest* /*request*/, ::farm::nurture::location::service::proto::BulkUpdateLocationResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestExecuteUpdateLocationBulk(::grpc::ServerContext* context, ::farm::nurture::location::service::proto::BulkUpdateLocationRequest* request, ::grpc::ServerAsyncResponseWriter< ::farm::nurture::location::service::proto::BulkUpdateLocationResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(21, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ExecuteGetLocationsWithBoundary : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_ExecuteGetLocationsWithBoundary() {
      ::grpc::Service::MarkMethodAsync(22);
    }
    ~WithAsyncMethod_ExecuteGetLocationsWithBoundary() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ExecuteGetLocationsWithBoundary(::grpc::ServerContext* /*context*/, const ::farm::nurture::location::service::proto::GetLocationsWithBoundaryRequest* /*request*/, ::farm::nurture::location::service::proto::GetLocationsWithBoundaryResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestExecuteGetLocationsWithBoundary(::grpc::ServerContext* context, ::farm::nurture::location::service::proto::GetLocationsWithBoundaryRequest* request, ::grpc::ServerAsyncResponseWriter< ::farm::nurture::location::service::proto::GetLocationsWithBoundaryResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(22, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ExecuteGetLocations : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_ExecuteGetLocations() {
      ::grpc::Service::MarkMethodAsync(23);
    }
    ~WithAsyncMethod_ExecuteGetLocations() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ExecuteGetLocations(::grpc::ServerContext* /*context*/, const ::farm::nurture::location::service::proto::GetLocationsRequest* /*request*/, ::farm::nurture::location::service::proto::GetLocationsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestExecuteGetLocations(::grpc::ServerContext* context, ::farm::nurture::location::service::proto::GetLocationsRequest* request, ::grpc::ServerAsyncResponseWriter< ::farm::nurture::location::service::proto::GetLocationsResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(23, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ExecuteGetChildGeographies : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_ExecuteGetChildGeographies() {
      ::grpc::Service::MarkMethodAsync(24);
    }
    ~WithAsyncMethod_ExecuteGetChildGeographies() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ExecuteGetChildGeographies(::grpc::ServerContext* /*context*/, const ::farm::nurture::location::service::proto::GetChildGeographiesRequest* /*request*/, ::farm::nurture::location::service::proto::GetChildGeographiesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestExecuteGetChildGeographies(::grpc::ServerContext* context, ::farm::nurture::location::service::proto::GetChildGeographiesRequest* request, ::grpc::ServerAsyncResponseWriter< ::farm::nurture::location::service::proto::GetChildGeographiesResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(24, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ExecuteInsertLocationWithoutBoundary : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_ExecuteInsertLocationWithoutBoundary() {
      ::grpc::Service::MarkMethodAsync(25);
    }
    ~WithAsyncMethod_ExecuteInsertLocationWithoutBoundary() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ExecuteInsertLocationWithoutBoundary(::grpc::ServerContext* /*context*/, const ::farm::nurture::location::service::proto::InsertLocationWithoutBoundaryRequest* /*request*/, ::farm::nurture::location::service::proto::InsertLocationWithoutBoundaryResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestExecuteInsertLocationWithoutBoundary(::grpc::ServerContext* context, ::farm::nurture::location::service::proto::InsertLocationWithoutBoundaryRequest* request, ::grpc::ServerAsyncResponseWriter< ::farm::nurture::location::service::proto::InsertLocationWithoutBoundaryResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(25, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ExecuteInsertLocationWithoutBoundaryBulk : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_ExecuteInsertLocationWithoutBoundaryBulk() {
      ::grpc::Service::MarkMethodAsync(26);
    }
    ~WithAsyncMethod_ExecuteInsertLocationWithoutBoundaryBulk() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ExecuteInsertLocationWithoutBoundaryBulk(::grpc::ServerContext* /*context*/, const ::farm::nurture::location::service::proto::BulkInsertLocationWithoutBoundaryRequest* /*request*/, ::farm::nurture::location::service::proto::BulkInsertLocationWithoutBoundaryResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestExecuteInsertLocationWithoutBoundaryBulk(::grpc::ServerContext* context, ::farm::nurture::location::service::proto::BulkInsertLocationWithoutBoundaryRequest* request, ::grpc::ServerAsyncResponseWriter< ::farm::nurture::location::service::proto::BulkInsertLocationWithoutBoundaryResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(26, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ExecuteUpdateLocationWithoutBoundaryById : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_ExecuteUpdateLocationWithoutBoundaryById() {
      ::grpc::Service::MarkMethodAsync(27);
    }
    ~WithAsyncMethod_ExecuteUpdateLocationWithoutBoundaryById() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ExecuteUpdateLocationWithoutBoundaryById(::grpc::ServerContext* /*context*/, const ::farm::nurture::location::service::proto::UpdateLocationWithoutBoundaryByIdRequest* /*request*/, ::farm::nurture::location::service::proto::UpdateLocationWithoutBoundaryByIdResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestExecuteUpdateLocationWithoutBoundaryById(::grpc::ServerContext* context, ::farm::nurture::location::service::proto::UpdateLocationWithoutBoundaryByIdRequest* request, ::grpc::ServerAsyncResponseWriter< ::farm::nurture::location::service::proto::UpdateLocationWithoutBoundaryByIdResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(27, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ExecuteUpdateLocationWithoutBoundaryByIdBulk : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_ExecuteUpdateLocationWithoutBoundaryByIdBulk() {
      ::grpc::Service::MarkMethodAsync(28);
    }
    ~WithAsyncMethod_ExecuteUpdateLocationWithoutBoundaryByIdBulk() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ExecuteUpdateLocationWithoutBoundaryByIdBulk(::grpc::ServerContext* /*context*/, const ::farm::nurture::location::service::proto::BulkUpdateLocationWithoutBoundaryByIdRequest* /*request*/, ::farm::nurture::location::service::proto::BulkUpdateLocationWithoutBoundaryByIdResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestExecuteUpdateLocationWithoutBoundaryByIdBulk(::grpc::ServerContext* context, ::farm::nurture::location::service::proto::BulkUpdateLocationWithoutBoundaryByIdRequest* request, ::grpc::ServerAsyncResponseWriter< ::farm::nurture::location::service::proto::BulkUpdateLocationWithoutBoundaryByIdResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(28, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ExecuteDeleteLocationById : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_ExecuteDeleteLocationById() {
      ::grpc::Service::MarkMethodAsync(29);
    }
    ~WithAsyncMethod_ExecuteDeleteLocationById() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ExecuteDeleteLocationById(::grpc::ServerContext* /*context*/, const ::farm::nurture::location::service::proto::DeleteLocationByIdRequest* /*request*/, ::farm::nurture::location::service::proto::DeleteLocationByIdResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestExecuteDeleteLocationById(::grpc::ServerContext* context, ::farm::nurture::location::service::proto::DeleteLocationByIdRequest* request, ::grpc::ServerAsyncResponseWriter< ::farm::nurture::location::service::proto::DeleteLocationByIdResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(29, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ExecuteDeleteLocationByIdBulk : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_ExecuteDeleteLocationByIdBulk() {
      ::grpc::Service::MarkMethodAsync(30);
    }
    ~WithAsyncMethod_ExecuteDeleteLocationByIdBulk() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ExecuteDeleteLocationByIdBulk(::grpc::ServerContext* /*context*/, const ::farm::nurture::location::service::proto::BulkDeleteLocationByIdRequest* /*request*/, ::farm::nurture::location::service::proto::BulkDeleteLocationByIdResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestExecuteDeleteLocationByIdBulk(::grpc::ServerContext* context, ::farm::nurture::location::service::proto::BulkDeleteLocationByIdRequest* request, ::grpc::ServerAsyncResponseWriter< ::farm::nurture::location::service::proto::BulkDeleteLocationByIdResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(30, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_Execute : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_Execute() {
      ::grpc::Service::MarkMethodAsync(31);
    }
    ~WithAsyncMethod_Execute() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Execute(::grpc::ServerContext* /*context*/, const ::farm::nurture::location::service::proto::MultiRequests* /*request*/, ::farm::nurture::location::service::proto::MultiResponses* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestExecute(::grpc::ServerContext* context, ::farm::nurture::location::service::proto::MultiRequests* request, ::grpc::ServerAsyncResponseWriter< ::farm::nurture::location::service::proto::MultiResponses>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(31, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  typedef WithAsyncMethod_ExecuteInsertLocation<WithAsyncMethod_ExecuteInsertLocationBulk<WithAsyncMethod_ExecuteInsertLocationS2Cell<WithAsyncMethod_ExecuteInsertLocationS2CellBulk<WithAsyncMethod_ExecuteInsertConfig<WithAsyncMethod_ExecuteInsertConfigBulk<WithAsyncMethod_ExecuteFetchLocationById<WithAsyncMethod_ExecuteFetchLocationByCodeAndNamespace<WithAsyncMethod_ExecuteFetchS2CellById<WithAsyncMethod_ExecuteFetchS2CellByLocation<WithAsyncMethod_ExecuteFetchS2CellByLocationId<WithAsyncMethod_ExecuteUpdateLocationById<WithAsyncMethod_ExecuteUpdateLocationByIdBulk<WithAsyncMethod_ExecuteUpdateLocationLabelById<WithAsyncMethod_ExecuteUpdateLocationLabelByIdBulk<WithAsyncMethod_ExecuteUpdateDeleteS2CellByLocation<WithAsyncMethod_ExecuteUpdateDeleteS2CellByLocationBulk<WithAsyncMethod_ExecuteFetchConfigById<WithAsyncMethod_ExecuteAddLocation<WithAsyncMethod_ExecuteAddLocationBulk<WithAsyncMethod_ExecuteUpdateLocation<WithAsyncMethod_ExecuteUpdateLocationBulk<WithAsyncMethod_ExecuteGetLocationsWithBoundary<WithAsyncMethod_ExecuteGetLocations<WithAsyncMethod_ExecuteGetChildGeographies<WithAsyncMethod_ExecuteInsertLocationWithoutBoundary<WithAsyncMethod_ExecuteInsertLocationWithoutBoundaryBulk<WithAsyncMethod_ExecuteUpdateLocationWithoutBoundaryById<WithAsyncMethod_ExecuteUpdateLocationWithoutBoundaryByIdBulk<WithAsyncMethod_ExecuteDeleteLocationById<WithAsyncMethod_ExecuteDeleteLocationByIdBulk<WithAsyncMethod_Execute<Service > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > AsyncService;
  template <class BaseClass>
  class WithCallbackMethod_ExecuteInsertLocation : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_ExecuteInsertLocation() {
      ::grpc::Service::MarkMethodCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::farm::nurture::location::service::proto::InsertLocationRequest, ::farm::nurture::location::service::proto::InsertLocationResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::farm::nurture::location::service::proto::InsertLocationRequest* request, ::farm::nurture::location::service::proto::InsertLocationResponse* response) { return this->ExecuteInsertLocation(context, request, response); }));}
    void SetMessageAllocatorFor_ExecuteInsertLocation(
        ::grpc::MessageAllocator< ::farm::nurture::location::service::proto::InsertLocationRequest, ::farm::nurture::location::service::proto::InsertLocationResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(0);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::farm::nurture::location::service::proto::InsertLocationRequest, ::farm::nurture::location::service::proto::InsertLocationResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_ExecuteInsertLocation() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ExecuteInsertLocation(::grpc::ServerContext* /*context*/, const ::farm::nurture::location::service::proto::InsertLocationRequest* /*request*/, ::farm::nurture::location::service::proto::InsertLocationResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ExecuteInsertLocation(
      ::grpc::CallbackServerContext* /*context*/, const ::farm::nurture::location::service::proto::InsertLocationRequest* /*request*/, ::farm::nurture::location::service::proto::InsertLocationResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_ExecuteInsertLocationBulk : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_ExecuteInsertLocationBulk() {
      ::grpc::Service::MarkMethodCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::farm::nurture::location::service::proto::BulkInsertLocationRequest, ::farm::nurture::location::service::proto::BulkInsertLocationResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::farm::nurture::location::service::proto::BulkInsertLocationRequest* request, ::farm::nurture::location::service::proto::BulkInsertLocationResponse* response) { return this->ExecuteInsertLocationBulk(context, request, response); }));}
    void SetMessageAllocatorFor_ExecuteInsertLocationBulk(
        ::grpc::MessageAllocator< ::farm::nurture::location::service::proto::BulkInsertLocationRequest, ::farm::nurture::location::service::proto::BulkInsertLocationResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(1);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::farm::nurture::location::service::proto::BulkInsertLocationRequest, ::farm::nurture::location::service::proto::BulkInsertLocationResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_ExecuteInsertLocationBulk() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ExecuteInsertLocationBulk(::grpc::ServerContext* /*context*/, const ::farm::nurture::location::service::proto::BulkInsertLocationRequest* /*request*/, ::farm::nurture::location::service::proto::BulkInsertLocationResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ExecuteInsertLocationBulk(
      ::grpc::CallbackServerContext* /*context*/, const ::farm::nurture::location::service::proto::BulkInsertLocationRequest* /*request*/, ::farm::nurture::location::service::proto::BulkInsertLocationResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_ExecuteInsertLocationS2Cell : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_ExecuteInsertLocationS2Cell() {
      ::grpc::Service::MarkMethodCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::farm::nurture::location::service::proto::InsertLocationS2CellRequest, ::farm::nurture::location::service::proto::InsertLocationS2CellResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::farm::nurture::location::service::proto::InsertLocationS2CellRequest* request, ::farm::nurture::location::service::proto::InsertLocationS2CellResponse* response) { return this->ExecuteInsertLocationS2Cell(context, request, response); }));}
    void SetMessageAllocatorFor_ExecuteInsertLocationS2Cell(
        ::grpc::MessageAllocator< ::farm::nurture::location::service::proto::InsertLocationS2CellRequest, ::farm::nurture::location::service::proto::InsertLocationS2CellResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(2);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::farm::nurture::location::service::proto::InsertLocationS2CellRequest, ::farm::nurture::location::service::proto::InsertLocationS2CellResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_ExecuteInsertLocationS2Cell() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ExecuteInsertLocationS2Cell(::grpc::ServerContext* /*context*/, const ::farm::nurture::location::service::proto::InsertLocationS2CellRequest* /*request*/, ::farm::nurture::location::service::proto::InsertLocationS2CellResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ExecuteInsertLocationS2Cell(
      ::grpc::CallbackServerContext* /*context*/, const ::farm::nurture::location::service::proto::InsertLocationS2CellRequest* /*request*/, ::farm::nurture::location::service::proto::InsertLocationS2CellResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_ExecuteInsertLocationS2CellBulk : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_ExecuteInsertLocationS2CellBulk() {
      ::grpc::Service::MarkMethodCallback(3,
          new ::grpc::internal::CallbackUnaryHandler< ::farm::nurture::location::service::proto::BulkInsertLocationS2CellRequest, ::farm::nurture::location::service::proto::BulkInsertLocationS2CellResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::farm::nurture::location::service::proto::BulkInsertLocationS2CellRequest* request, ::farm::nurture::location::service::proto::BulkInsertLocationS2CellResponse* response) { return this->ExecuteInsertLocationS2CellBulk(context, request, response); }));}
    void SetMessageAllocatorFor_ExecuteInsertLocationS2CellBulk(
        ::grpc::MessageAllocator< ::farm::nurture::location::service::proto::BulkInsertLocationS2CellRequest, ::farm::nurture::location::service::proto::BulkInsertLocationS2CellResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(3);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::farm::nurture::location::service::proto::BulkInsertLocationS2CellRequest, ::farm::nurture::location::service::proto::BulkInsertLocationS2CellResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_ExecuteInsertLocationS2CellBulk() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ExecuteInsertLocationS2CellBulk(::grpc::ServerContext* /*context*/, const ::farm::nurture::location::service::proto::BulkInsertLocationS2CellRequest* /*request*/, ::farm::nurture::location::service::proto::BulkInsertLocationS2CellResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ExecuteInsertLocationS2CellBulk(
      ::grpc::CallbackServerContext* /*context*/, const ::farm::nurture::location::service::proto::BulkInsertLocationS2CellRequest* /*request*/, ::farm::nurture::location::service::proto::BulkInsertLocationS2CellResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_ExecuteInsertConfig : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_ExecuteInsertConfig() {
      ::grpc::Service::MarkMethodCallback(4,
          new ::grpc::internal::CallbackUnaryHandler< ::farm::nurture::location::service::proto::InsertConfigRequest, ::farm::nurture::location::service::proto::InsertConfigResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::farm::nurture::location::service::proto::InsertConfigRequest* request, ::farm::nurture::location::service::proto::InsertConfigResponse* response) { return this->ExecuteInsertConfig(context, request, response); }));}
    void SetMessageAllocatorFor_ExecuteInsertConfig(
        ::grpc::MessageAllocator< ::farm::nurture::location::service::proto::InsertConfigRequest, ::farm::nurture::location::service::proto::InsertConfigResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(4);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::farm::nurture::location::service::proto::InsertConfigRequest, ::farm::nurture::location::service::proto::InsertConfigResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_ExecuteInsertConfig() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ExecuteInsertConfig(::grpc::ServerContext* /*context*/, const ::farm::nurture::location::service::proto::InsertConfigRequest* /*request*/, ::farm::nurture::location::service::proto::InsertConfigResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ExecuteInsertConfig(
      ::grpc::CallbackServerContext* /*context*/, const ::farm::nurture::location::service::proto::InsertConfigRequest* /*request*/, ::farm::nurture::location::service::proto::InsertConfigResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_ExecuteInsertConfigBulk : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_ExecuteInsertConfigBulk() {
      ::grpc::Service::MarkMethodCallback(5,
          new ::grpc::internal::CallbackUnaryHandler< ::farm::nurture::location::service::proto::BulkInsertConfigRequest, ::farm::nurture::location::service::proto::BulkInsertConfigResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::farm::nurture::location::service::proto::BulkInsertConfigRequest* request, ::farm::nurture::location::service::proto::BulkInsertConfigResponse* response) { return this->ExecuteInsertConfigBulk(context, request, response); }));}
    void SetMessageAllocatorFor_ExecuteInsertConfigBulk(
        ::grpc::MessageAllocator< ::farm::nurture::location::service::proto::BulkInsertConfigRequest, ::farm::nurture::location::service::proto::BulkInsertConfigResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(5);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::farm::nurture::location::service::proto::BulkInsertConfigRequest, ::farm::nurture::location::service::proto::BulkInsertConfigResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_ExecuteInsertConfigBulk() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ExecuteInsertConfigBulk(::grpc::ServerContext* /*context*/, const ::farm::nurture::location::service::proto::BulkInsertConfigRequest* /*request*/, ::farm::nurture::location::service::proto::BulkInsertConfigResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ExecuteInsertConfigBulk(
      ::grpc::CallbackServerContext* /*context*/, const ::farm::nurture::location::service::proto::BulkInsertConfigRequest* /*request*/, ::farm::nurture::location::service::proto::BulkInsertConfigResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_ExecuteFetchLocationById : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_ExecuteFetchLocationById() {
      ::grpc::Service::MarkMethodCallback(6,
          new ::grpc::internal::CallbackUnaryHandler< ::farm::nurture::location::service::proto::FetchLocationByIdRequest, ::farm::nurture::location::service::proto::Location>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::farm::nurture::location::service::proto::FetchLocationByIdRequest* request, ::farm::nurture::location::service::proto::Location* response) { return this->ExecuteFetchLocationById(context, request, response); }));}
    void SetMessageAllocatorFor_ExecuteFetchLocationById(
        ::grpc::MessageAllocator< ::farm::nurture::location::service::proto::FetchLocationByIdRequest, ::farm::nurture::location::service::proto::Location>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(6);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::farm::nurture::location::service::proto::FetchLocationByIdRequest, ::farm::nurture::location::service::proto::Location>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_ExecuteFetchLocationById() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ExecuteFetchLocationById(::grpc::ServerContext* /*context*/, const ::farm::nurture::location::service::proto::FetchLocationByIdRequest* /*request*/, ::farm::nurture::location::service::proto::Location* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ExecuteFetchLocationById(
      ::grpc::CallbackServerContext* /*context*/, const ::farm::nurture::location::service::proto::FetchLocationByIdRequest* /*request*/, ::farm::nurture::location::service::proto::Location* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_ExecuteFetchLocationByCodeAndNamespace : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_ExecuteFetchLocationByCodeAndNamespace() {
      ::grpc::Service::MarkMethodCallback(7,
          new ::grpc::internal::CallbackUnaryHandler< ::farm::nurture::location::service::proto::FetchLocationByCodeAndNamespaceRequest, ::farm::nurture::location::service::proto::Location>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::farm::nurture::location::service::proto::FetchLocationByCodeAndNamespaceRequest* request, ::farm::nurture::location::service::proto::Location* response) { return this->ExecuteFetchLocationByCodeAndNamespace(context, request, response); }));}
    void SetMessageAllocatorFor_ExecuteFetchLocationByCodeAndNamespace(
        ::grpc::MessageAllocator< ::farm::nurture::location::service::proto::FetchLocationByCodeAndNamespaceRequest, ::farm::nurture::location::service::proto::Location>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(7);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::farm::nurture::location::service::proto::FetchLocationByCodeAndNamespaceRequest, ::farm::nurture::location::service::proto::Location>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_ExecuteFetchLocationByCodeAndNamespace() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ExecuteFetchLocationByCodeAndNamespace(::grpc::ServerContext* /*context*/, const ::farm::nurture::location::service::proto::FetchLocationByCodeAndNamespaceRequest* /*request*/, ::farm::nurture::location::service::proto::Location* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ExecuteFetchLocationByCodeAndNamespace(
      ::grpc::CallbackServerContext* /*context*/, const ::farm::nurture::location::service::proto::FetchLocationByCodeAndNamespaceRequest* /*request*/, ::farm::nurture::location::service::proto::Location* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_ExecuteFetchS2CellById : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_ExecuteFetchS2CellById() {
      ::grpc::Service::MarkMethodCallback(8,
          new ::grpc::internal::CallbackUnaryHandler< ::farm::nurture::location::service::proto::FetchS2CellByIdRequest, ::farm::nurture::location::service::proto::S2Cell>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::farm::nurture::location::service::proto::FetchS2CellByIdRequest* request, ::farm::nurture::location::service::proto::S2Cell* response) { return this->ExecuteFetchS2CellById(context, request, response); }));}
    void SetMessageAllocatorFor_ExecuteFetchS2CellById(
        ::grpc::MessageAllocator< ::farm::nurture::location::service::proto::FetchS2CellByIdRequest, ::farm::nurture::location::service::proto::S2Cell>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(8);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::farm::nurture::location::service::proto::FetchS2CellByIdRequest, ::farm::nurture::location::service::proto::S2Cell>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_ExecuteFetchS2CellById() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ExecuteFetchS2CellById(::grpc::ServerContext* /*context*/, const ::farm::nurture::location::service::proto::FetchS2CellByIdRequest* /*request*/, ::farm::nurture::location::service::proto::S2Cell* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ExecuteFetchS2CellById(
      ::grpc::CallbackServerContext* /*context*/, const ::farm::nurture::location::service::proto::FetchS2CellByIdRequest* /*request*/, ::farm::nurture::location::service::proto::S2Cell* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_ExecuteFetchS2CellByLocation : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_ExecuteFetchS2CellByLocation() {
      ::grpc::Service::MarkMethodCallback(9,
          new ::grpc::internal::CallbackUnaryHandler< ::farm::nurture::location::service::proto::FetchS2CellByLocationRequest, ::farm::nurture::location::service::proto::S2Cell>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::farm::nurture::location::service::proto::FetchS2CellByLocationRequest* request, ::farm::nurture::location::service::proto::S2Cell* response) { return this->ExecuteFetchS2CellByLocation(context, request, response); }));}
    void SetMessageAllocatorFor_ExecuteFetchS2CellByLocation(
        ::grpc::MessageAllocator< ::farm::nurture::location::service::proto::FetchS2CellByLocationRequest, ::farm::nurture::location::service::proto::S2Cell>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(9);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::farm::nurture::location::service::proto::FetchS2CellByLocationRequest, ::farm::nurture::location::service::proto::S2Cell>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_ExecuteFetchS2CellByLocation() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ExecuteFetchS2CellByLocation(::grpc::ServerContext* /*context*/, const ::farm::nurture::location::service::proto::FetchS2CellByLocationRequest* /*request*/, ::farm::nurture::location::service::proto::S2Cell* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ExecuteFetchS2CellByLocation(
      ::grpc::CallbackServerContext* /*context*/, const ::farm::nurture::location::service::proto::FetchS2CellByLocationRequest* /*request*/, ::farm::nurture::location::service::proto::S2Cell* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_ExecuteFetchS2CellByLocationId : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_ExecuteFetchS2CellByLocationId() {
      ::grpc::Service::MarkMethodCallback(10,
          new ::grpc::internal::CallbackUnaryHandler< ::farm::nurture::location::service::proto::FetchS2CellByLocationIdRequest, ::farm::nurture::location::service::proto::LocationS2Cells>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::farm::nurture::location::service::proto::FetchS2CellByLocationIdRequest* request, ::farm::nurture::location::service::proto::LocationS2Cells* response) { return this->ExecuteFetchS2CellByLocationId(context, request, response); }));}
    void SetMessageAllocatorFor_ExecuteFetchS2CellByLocationId(
        ::grpc::MessageAllocator< ::farm::nurture::location::service::proto::FetchS2CellByLocationIdRequest, ::farm::nurture::location::service::proto::LocationS2Cells>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(10);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::farm::nurture::location::service::proto::FetchS2CellByLocationIdRequest, ::farm::nurture::location::service::proto::LocationS2Cells>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_ExecuteFetchS2CellByLocationId() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ExecuteFetchS2CellByLocationId(::grpc::ServerContext* /*context*/, const ::farm::nurture::location::service::proto::FetchS2CellByLocationIdRequest* /*request*/, ::farm::nurture::location::service::proto::LocationS2Cells* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ExecuteFetchS2CellByLocationId(
      ::grpc::CallbackServerContext* /*context*/, const ::farm::nurture::location::service::proto::FetchS2CellByLocationIdRequest* /*request*/, ::farm::nurture::location::service::proto::LocationS2Cells* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_ExecuteUpdateLocationById : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_ExecuteUpdateLocationById() {
      ::grpc::Service::MarkMethodCallback(11,
          new ::grpc::internal::CallbackUnaryHandler< ::farm::nurture::location::service::proto::UpdateLocationByIdRequest, ::farm::nurture::location::service::proto::UpdateLocationByIdResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::farm::nurture::location::service::proto::UpdateLocationByIdRequest* request, ::farm::nurture::location::service::proto::UpdateLocationByIdResponse* response) { return this->ExecuteUpdateLocationById(context, request, response); }));}
    void SetMessageAllocatorFor_ExecuteUpdateLocationById(
        ::grpc::MessageAllocator< ::farm::nurture::location::service::proto::UpdateLocationByIdRequest, ::farm::nurture::location::service::proto::UpdateLocationByIdResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(11);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::farm::nurture::location::service::proto::UpdateLocationByIdRequest, ::farm::nurture::location::service::proto::UpdateLocationByIdResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_ExecuteUpdateLocationById() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ExecuteUpdateLocationById(::grpc::ServerContext* /*context*/, const ::farm::nurture::location::service::proto::UpdateLocationByIdRequest* /*request*/, ::farm::nurture::location::service::proto::UpdateLocationByIdResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ExecuteUpdateLocationById(
      ::grpc::CallbackServerContext* /*context*/, const ::farm::nurture::location::service::proto::UpdateLocationByIdRequest* /*request*/, ::farm::nurture::location::service::proto::UpdateLocationByIdResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_ExecuteUpdateLocationByIdBulk : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_ExecuteUpdateLocationByIdBulk() {
      ::grpc::Service::MarkMethodCallback(12,
          new ::grpc::internal::CallbackUnaryHandler< ::farm::nurture::location::service::proto::BulkUpdateLocationByIdRequest, ::farm::nurture::location::service::proto::BulkUpdateLocationByIdResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::farm::nurture::location::service::proto::BulkUpdateLocationByIdRequest* request, ::farm::nurture::location::service::proto::BulkUpdateLocationByIdResponse* response) { return this->ExecuteUpdateLocationByIdBulk(context, request, response); }));}
    void SetMessageAllocatorFor_ExecuteUpdateLocationByIdBulk(
        ::grpc::MessageAllocator< ::farm::nurture::location::service::proto::BulkUpdateLocationByIdRequest, ::farm::nurture::location::service::proto::BulkUpdateLocationByIdResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(12);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::farm::nurture::location::service::proto::BulkUpdateLocationByIdRequest, ::farm::nurture::location::service::proto::BulkUpdateLocationByIdResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_ExecuteUpdateLocationByIdBulk() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ExecuteUpdateLocationByIdBulk(::grpc::ServerContext* /*context*/, const ::farm::nurture::location::service::proto::BulkUpdateLocationByIdRequest* /*request*/, ::farm::nurture::location::service::proto::BulkUpdateLocationByIdResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ExecuteUpdateLocationByIdBulk(
      ::grpc::CallbackServerContext* /*context*/, const ::farm::nurture::location::service::proto::BulkUpdateLocationByIdRequest* /*request*/, ::farm::nurture::location::service::proto::BulkUpdateLocationByIdResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_ExecuteUpdateLocationLabelById : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_ExecuteUpdateLocationLabelById() {
      ::grpc::Service::MarkMethodCallback(13,
          new ::grpc::internal::CallbackUnaryHandler< ::farm::nurture::location::service::proto::UpdateLocationLabelByIdRequest, ::farm::nurture::location::service::proto::UpdateLocationLabelByIdResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::farm::nurture::location::service::proto::UpdateLocationLabelByIdRequest* request, ::farm::nurture::location::service::proto::UpdateLocationLabelByIdResponse* response) { return this->ExecuteUpdateLocationLabelById(context, request, response); }));}
    void SetMessageAllocatorFor_ExecuteUpdateLocationLabelById(
        ::grpc::MessageAllocator< ::farm::nurture::location::service::proto::UpdateLocationLabelByIdRequest, ::farm::nurture::location::service::proto::UpdateLocationLabelByIdResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(13);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::farm::nurture::location::service::proto::UpdateLocationLabelByIdRequest, ::farm::nurture::location::service::proto::UpdateLocationLabelByIdResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_ExecuteUpdateLocationLabelById() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ExecuteUpdateLocationLabelById(::grpc::ServerContext* /*context*/, const ::farm::nurture::location::service::proto::UpdateLocationLabelByIdRequest* /*request*/, ::farm::nurture::location::service::proto::UpdateLocationLabelByIdResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ExecuteUpdateLocationLabelById(
      ::grpc::CallbackServerContext* /*context*/, const ::farm::nurture::location::service::proto::UpdateLocationLabelByIdRequest* /*request*/, ::farm::nurture::location::service::proto::UpdateLocationLabelByIdResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_ExecuteUpdateLocationLabelByIdBulk : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_ExecuteUpdateLocationLabelByIdBulk() {
      ::grpc::Service::MarkMethodCallback(14,
          new ::grpc::internal::CallbackUnaryHandler< ::farm::nurture::location::service::proto::BulkUpdateLocationLabelByIdRequest, ::farm::nurture::location::service::proto::BulkUpdateLocationLabelByIdResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::farm::nurture::location::service::proto::BulkUpdateLocationLabelByIdRequest* request, ::farm::nurture::location::service::proto::BulkUpdateLocationLabelByIdResponse* response) { return this->ExecuteUpdateLocationLabelByIdBulk(context, request, response); }));}
    void SetMessageAllocatorFor_ExecuteUpdateLocationLabelByIdBulk(
        ::grpc::MessageAllocator< ::farm::nurture::location::service::proto::BulkUpdateLocationLabelByIdRequest, ::farm::nurture::location::service::proto::BulkUpdateLocationLabelByIdResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(14);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::farm::nurture::location::service::proto::BulkUpdateLocationLabelByIdRequest, ::farm::nurture::location::service::proto::BulkUpdateLocationLabelByIdResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_ExecuteUpdateLocationLabelByIdBulk() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ExecuteUpdateLocationLabelByIdBulk(::grpc::ServerContext* /*context*/, const ::farm::nurture::location::service::proto::BulkUpdateLocationLabelByIdRequest* /*request*/, ::farm::nurture::location::service::proto::BulkUpdateLocationLabelByIdResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ExecuteUpdateLocationLabelByIdBulk(
      ::grpc::CallbackServerContext* /*context*/, const ::farm::nurture::location::service::proto::BulkUpdateLocationLabelByIdRequest* /*request*/, ::farm::nurture::location::service::proto::BulkUpdateLocationLabelByIdResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_ExecuteUpdateDeleteS2CellByLocation : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_ExecuteUpdateDeleteS2CellByLocation() {
      ::grpc::Service::MarkMethodCallback(15,
          new ::grpc::internal::CallbackUnaryHandler< ::farm::nurture::location::service::proto::UpdateDeleteS2CellByLocationRequest, ::farm::nurture::location::service::proto::UpdateDeleteS2CellByLocationResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::farm::nurture::location::service::proto::UpdateDeleteS2CellByLocationRequest* request, ::farm::nurture::location::service::proto::UpdateDeleteS2CellByLocationResponse* response) { return this->ExecuteUpdateDeleteS2CellByLocation(context, request, response); }));}
    void SetMessageAllocatorFor_ExecuteUpdateDeleteS2CellByLocation(
        ::grpc::MessageAllocator< ::farm::nurture::location::service::proto::UpdateDeleteS2CellByLocationRequest, ::farm::nurture::location::service::proto::UpdateDeleteS2CellByLocationResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(15);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::farm::nurture::location::service::proto::UpdateDeleteS2CellByLocationRequest, ::farm::nurture::location::service::proto::UpdateDeleteS2CellByLocationResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_ExecuteUpdateDeleteS2CellByLocation() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ExecuteUpdateDeleteS2CellByLocation(::grpc::ServerContext* /*context*/, const ::farm::nurture::location::service::proto::UpdateDeleteS2CellByLocationRequest* /*request*/, ::farm::nurture::location::service::proto::UpdateDeleteS2CellByLocationResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ExecuteUpdateDeleteS2CellByLocation(
      ::grpc::CallbackServerContext* /*context*/, const ::farm::nurture::location::service::proto::UpdateDeleteS2CellByLocationRequest* /*request*/, ::farm::nurture::location::service::proto::UpdateDeleteS2CellByLocationResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_ExecuteUpdateDeleteS2CellByLocationBulk : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_ExecuteUpdateDeleteS2CellByLocationBulk() {
      ::grpc::Service::MarkMethodCallback(16,
          new ::grpc::internal::CallbackUnaryHandler< ::farm::nurture::location::service::proto::BulkUpdateDeleteS2CellByLocationRequest, ::farm::nurture::location::service::proto::BulkUpdateDeleteS2CellByLocationResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::farm::nurture::location::service::proto::BulkUpdateDeleteS2CellByLocationRequest* request, ::farm::nurture::location::service::proto::BulkUpdateDeleteS2CellByLocationResponse* response) { return this->ExecuteUpdateDeleteS2CellByLocationBulk(context, request, response); }));}
    void SetMessageAllocatorFor_ExecuteUpdateDeleteS2CellByLocationBulk(
        ::grpc::MessageAllocator< ::farm::nurture::location::service::proto::BulkUpdateDeleteS2CellByLocationRequest, ::farm::nurture::location::service::proto::BulkUpdateDeleteS2CellByLocationResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(16);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::farm::nurture::location::service::proto::BulkUpdateDeleteS2CellByLocationRequest, ::farm::nurture::location::service::proto::BulkUpdateDeleteS2CellByLocationResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_ExecuteUpdateDeleteS2CellByLocationBulk() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ExecuteUpdateDeleteS2CellByLocationBulk(::grpc::ServerContext* /*context*/, const ::farm::nurture::location::service::proto::BulkUpdateDeleteS2CellByLocationRequest* /*request*/, ::farm::nurture::location::service::proto::BulkUpdateDeleteS2CellByLocationResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ExecuteUpdateDeleteS2CellByLocationBulk(
      ::grpc::CallbackServerContext* /*context*/, const ::farm::nurture::location::service::proto::BulkUpdateDeleteS2CellByLocationRequest* /*request*/, ::farm::nurture::location::service::proto::BulkUpdateDeleteS2CellByLocationResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_ExecuteFetchConfigById : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_ExecuteFetchConfigById() {
      ::grpc::Service::MarkMethodCallback(17,
          new ::grpc::internal::CallbackUnaryHandler< ::farm::nurture::location::service::proto::FetchConfigByIdRequest, ::farm::nurture::location::service::proto::Config>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::farm::nurture::location::service::proto::FetchConfigByIdRequest* request, ::farm::nurture::location::service::proto::Config* response) { return this->ExecuteFetchConfigById(context, request, response); }));}
    void SetMessageAllocatorFor_ExecuteFetchConfigById(
        ::grpc::MessageAllocator< ::farm::nurture::location::service::proto::FetchConfigByIdRequest, ::farm::nurture::location::service::proto::Config>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(17);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::farm::nurture::location::service::proto::FetchConfigByIdRequest, ::farm::nurture::location::service::proto::Config>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_ExecuteFetchConfigById() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ExecuteFetchConfigById(::grpc::ServerContext* /*context*/, const ::farm::nurture::location::service::proto::FetchConfigByIdRequest* /*request*/, ::farm::nurture::location::service::proto::Config* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ExecuteFetchConfigById(
      ::grpc::CallbackServerContext* /*context*/, const ::farm::nurture::location::service::proto::FetchConfigByIdRequest* /*request*/, ::farm::nurture::location::service::proto::Config* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_ExecuteAddLocation : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_ExecuteAddLocation() {
      ::grpc::Service::MarkMethodCallback(18,
          new ::grpc::internal::CallbackUnaryHandler< ::farm::nurture::location::service::proto::AddLocationRequest, ::farm::nurture::location::service::proto::AddLocationResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::farm::nurture::location::service::proto::AddLocationRequest* request, ::farm::nurture::location::service::proto::AddLocationResponse* response) { return this->ExecuteAddLocation(context, request, response); }));}
    void SetMessageAllocatorFor_ExecuteAddLocation(
        ::grpc::MessageAllocator< ::farm::nurture::location::service::proto::AddLocationRequest, ::farm::nurture::location::service::proto::AddLocationResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(18);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::farm::nurture::location::service::proto::AddLocationRequest, ::farm::nurture::location::service::proto::AddLocationResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_ExecuteAddLocation() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ExecuteAddLocation(::grpc::ServerContext* /*context*/, const ::farm::nurture::location::service::proto::AddLocationRequest* /*request*/, ::farm::nurture::location::service::proto::AddLocationResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ExecuteAddLocation(
      ::grpc::CallbackServerContext* /*context*/, const ::farm::nurture::location::service::proto::AddLocationRequest* /*request*/, ::farm::nurture::location::service::proto::AddLocationResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_ExecuteAddLocationBulk : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_ExecuteAddLocationBulk() {
      ::grpc::Service::MarkMethodCallback(19,
          new ::grpc::internal::CallbackUnaryHandler< ::farm::nurture::location::service::proto::BulkAddLocationRequest, ::farm::nurture::location::service::proto::BulkAddLocationResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::farm::nurture::location::service::proto::BulkAddLocationRequest* request, ::farm::nurture::location::service::proto::BulkAddLocationResponse* response) { return this->ExecuteAddLocationBulk(context, request, response); }));}
    void SetMessageAllocatorFor_ExecuteAddLocationBulk(
        ::grpc::MessageAllocator< ::farm::nurture::location::service::proto::BulkAddLocationRequest, ::farm::nurture::location::service::proto::BulkAddLocationResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(19);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::farm::nurture::location::service::proto::BulkAddLocationRequest, ::farm::nurture::location::service::proto::BulkAddLocationResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_ExecuteAddLocationBulk() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ExecuteAddLocationBulk(::grpc::ServerContext* /*context*/, const ::farm::nurture::location::service::proto::BulkAddLocationRequest* /*request*/, ::farm::nurture::location::service::proto::BulkAddLocationResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ExecuteAddLocationBulk(
      ::grpc::CallbackServerContext* /*context*/, const ::farm::nurture::location::service::proto::BulkAddLocationRequest* /*request*/, ::farm::nurture::location::service::proto::BulkAddLocationResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_ExecuteUpdateLocation : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_ExecuteUpdateLocation() {
      ::grpc::Service::MarkMethodCallback(20,
          new ::grpc::internal::CallbackUnaryHandler< ::farm::nurture::location::service::proto::UpdateLocationRequest, ::farm::nurture::location::service::proto::UpdateLocationResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::farm::nurture::location::service::proto::UpdateLocationRequest* request, ::farm::nurture::location::service::proto::UpdateLocationResponse* response) { return this->ExecuteUpdateLocation(context, request, response); }));}
    void SetMessageAllocatorFor_ExecuteUpdateLocation(
        ::grpc::MessageAllocator< ::farm::nurture::location::service::proto::UpdateLocationRequest, ::farm::nurture::location::service::proto::UpdateLocationResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(20);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::farm::nurture::location::service::proto::UpdateLocationRequest, ::farm::nurture::location::service::proto::UpdateLocationResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_ExecuteUpdateLocation() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ExecuteUpdateLocation(::grpc::ServerContext* /*context*/, const ::farm::nurture::location::service::proto::UpdateLocationRequest* /*request*/, ::farm::nurture::location::service::proto::UpdateLocationResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ExecuteUpdateLocation(
      ::grpc::CallbackServerContext* /*context*/, const ::farm::nurture::location::service::proto::UpdateLocationRequest* /*request*/, ::farm::nurture::location::service::proto::UpdateLocationResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_ExecuteUpdateLocationBulk : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_ExecuteUpdateLocationBulk() {
      ::grpc::Service::MarkMethodCallback(21,
          new ::grpc::internal::CallbackUnaryHandler< ::farm::nurture::location::service::proto::BulkUpdateLocationRequest, ::farm::nurture::location::service::proto::BulkUpdateLocationResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::farm::nurture::location::service::proto::BulkUpdateLocationRequest* request, ::farm::nurture::location::service::proto::BulkUpdateLocationResponse* response) { return this->ExecuteUpdateLocationBulk(context, request, response); }));}
    void SetMessageAllocatorFor_ExecuteUpdateLocationBulk(
        ::grpc::MessageAllocator< ::farm::nurture::location::service::proto::BulkUpdateLocationRequest, ::farm::nurture::location::service::proto::BulkUpdateLocationResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(21);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::farm::nurture::location::service::proto::BulkUpdateLocationRequest, ::farm::nurture::location::service::proto::BulkUpdateLocationResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_ExecuteUpdateLocationBulk() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ExecuteUpdateLocationBulk(::grpc::ServerContext* /*context*/, const ::farm::nurture::location::service::proto::BulkUpdateLocationRequest* /*request*/, ::farm::nurture::location::service::proto::BulkUpdateLocationResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ExecuteUpdateLocationBulk(
      ::grpc::CallbackServerContext* /*context*/, const ::farm::nurture::location::service::proto::BulkUpdateLocationRequest* /*request*/, ::farm::nurture::location::service::proto::BulkUpdateLocationResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_ExecuteGetLocationsWithBoundary : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_ExecuteGetLocationsWithBoundary() {
      ::grpc::Service::MarkMethodCallback(22,
          new ::grpc::internal::CallbackUnaryHandler< ::farm::nurture::location::service::proto::GetLocationsWithBoundaryRequest, ::farm::nurture::location::service::proto::GetLocationsWithBoundaryResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::farm::nurture::location::service::proto::GetLocationsWithBoundaryRequest* request, ::farm::nurture::location::service::proto::GetLocationsWithBoundaryResponse* response) { return this->ExecuteGetLocationsWithBoundary(context, request, response); }));}
    void SetMessageAllocatorFor_ExecuteGetLocationsWithBoundary(
        ::grpc::MessageAllocator< ::farm::nurture::location::service::proto::GetLocationsWithBoundaryRequest, ::farm::nurture::location::service::proto::GetLocationsWithBoundaryResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(22);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::farm::nurture::location::service::proto::GetLocationsWithBoundaryRequest, ::farm::nurture::location::service::proto::GetLocationsWithBoundaryResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_ExecuteGetLocationsWithBoundary() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ExecuteGetLocationsWithBoundary(::grpc::ServerContext* /*context*/, const ::farm::nurture::location::service::proto::GetLocationsWithBoundaryRequest* /*request*/, ::farm::nurture::location::service::proto::GetLocationsWithBoundaryResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ExecuteGetLocationsWithBoundary(
      ::grpc::CallbackServerContext* /*context*/, const ::farm::nurture::location::service::proto::GetLocationsWithBoundaryRequest* /*request*/, ::farm::nurture::location::service::proto::GetLocationsWithBoundaryResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_ExecuteGetLocations : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_ExecuteGetLocations() {
      ::grpc::Service::MarkMethodCallback(23,
          new ::grpc::internal::CallbackUnaryHandler< ::farm::nurture::location::service::proto::GetLocationsRequest, ::farm::nurture::location::service::proto::GetLocationsResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::farm::nurture::location::service::proto::GetLocationsRequest* request, ::farm::nurture::location::service::proto::GetLocationsResponse* response) { return this->ExecuteGetLocations(context, request, response); }));}
    void SetMessageAllocatorFor_ExecuteGetLocations(
        ::grpc::MessageAllocator< ::farm::nurture::location::service::proto::GetLocationsRequest, ::farm::nurture::location::service::proto::GetLocationsResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(23);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::farm::nurture::location::service::proto::GetLocationsRequest, ::farm::nurture::location::service::proto::GetLocationsResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_ExecuteGetLocations() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ExecuteGetLocations(::grpc::ServerContext* /*context*/, const ::farm::nurture::location::service::proto::GetLocationsRequest* /*request*/, ::farm::nurture::location::service::proto::GetLocationsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ExecuteGetLocations(
      ::grpc::CallbackServerContext* /*context*/, const ::farm::nurture::location::service::proto::GetLocationsRequest* /*request*/, ::farm::nurture::location::service::proto::GetLocationsResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_ExecuteGetChildGeographies : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_ExecuteGetChildGeographies() {
      ::grpc::Service::MarkMethodCallback(24,
          new ::grpc::internal::CallbackUnaryHandler< ::farm::nurture::location::service::proto::GetChildGeographiesRequest, ::farm::nurture::location::service::proto::GetChildGeographiesResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::farm::nurture::location::service::proto::GetChildGeographiesRequest* request, ::farm::nurture::location::service::proto::GetChildGeographiesResponse* response) { return this->ExecuteGetChildGeographies(context, request, response); }));}
    void SetMessageAllocatorFor_ExecuteGetChildGeographies(
        ::grpc::MessageAllocator< ::farm::nurture::location::service::proto::GetChildGeographiesRequest, ::farm::nurture::location::service::proto::GetChildGeographiesResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(24);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::farm::nurture::location::service::proto::GetChildGeographiesRequest, ::farm::nurture::location::service::proto::GetChildGeographiesResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_ExecuteGetChildGeographies() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ExecuteGetChildGeographies(::grpc::ServerContext* /*context*/, const ::farm::nurture::location::service::proto::GetChildGeographiesRequest* /*request*/, ::farm::nurture::location::service::proto::GetChildGeographiesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ExecuteGetChildGeographies(
      ::grpc::CallbackServerContext* /*context*/, const ::farm::nurture::location::service::proto::GetChildGeographiesRequest* /*request*/, ::farm::nurture::location::service::proto::GetChildGeographiesResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_ExecuteInsertLocationWithoutBoundary : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_ExecuteInsertLocationWithoutBoundary() {
      ::grpc::Service::MarkMethodCallback(25,
          new ::grpc::internal::CallbackUnaryHandler< ::farm::nurture::location::service::proto::InsertLocationWithoutBoundaryRequest, ::farm::nurture::location::service::proto::InsertLocationWithoutBoundaryResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::farm::nurture::location::service::proto::InsertLocationWithoutBoundaryRequest* request, ::farm::nurture::location::service::proto::InsertLocationWithoutBoundaryResponse* response) { return this->ExecuteInsertLocationWithoutBoundary(context, request, response); }));}
    void SetMessageAllocatorFor_ExecuteInsertLocationWithoutBoundary(
        ::grpc::MessageAllocator< ::farm::nurture::location::service::proto::InsertLocationWithoutBoundaryRequest, ::farm::nurture::location::service::proto::InsertLocationWithoutBoundaryResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(25);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::farm::nurture::location::service::proto::InsertLocationWithoutBoundaryRequest, ::farm::nurture::location::service::proto::InsertLocationWithoutBoundaryResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_ExecuteInsertLocationWithoutBoundary() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ExecuteInsertLocationWithoutBoundary(::grpc::ServerContext* /*context*/, const ::farm::nurture::location::service::proto::InsertLocationWithoutBoundaryRequest* /*request*/, ::farm::nurture::location::service::proto::InsertLocationWithoutBoundaryResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ExecuteInsertLocationWithoutBoundary(
      ::grpc::CallbackServerContext* /*context*/, const ::farm::nurture::location::service::proto::InsertLocationWithoutBoundaryRequest* /*request*/, ::farm::nurture::location::service::proto::InsertLocationWithoutBoundaryResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_ExecuteInsertLocationWithoutBoundaryBulk : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_ExecuteInsertLocationWithoutBoundaryBulk() {
      ::grpc::Service::MarkMethodCallback(26,
          new ::grpc::internal::CallbackUnaryHandler< ::farm::nurture::location::service::proto::BulkInsertLocationWithoutBoundaryRequest, ::farm::nurture::location::service::proto::BulkInsertLocationWithoutBoundaryResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::farm::nurture::location::service::proto::BulkInsertLocationWithoutBoundaryRequest* request, ::farm::nurture::location::service::proto::BulkInsertLocationWithoutBoundaryResponse* response) { return this->ExecuteInsertLocationWithoutBoundaryBulk(context, request, response); }));}
    void SetMessageAllocatorFor_ExecuteInsertLocationWithoutBoundaryBulk(
        ::grpc::MessageAllocator< ::farm::nurture::location::service::proto::BulkInsertLocationWithoutBoundaryRequest, ::farm::nurture::location::service::proto::BulkInsertLocationWithoutBoundaryResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(26);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::farm::nurture::location::service::proto::BulkInsertLocationWithoutBoundaryRequest, ::farm::nurture::location::service::proto::BulkInsertLocationWithoutBoundaryResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_ExecuteInsertLocationWithoutBoundaryBulk() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ExecuteInsertLocationWithoutBoundaryBulk(::grpc::ServerContext* /*context*/, const ::farm::nurture::location::service::proto::BulkInsertLocationWithoutBoundaryRequest* /*request*/, ::farm::nurture::location::service::proto::BulkInsertLocationWithoutBoundaryResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ExecuteInsertLocationWithoutBoundaryBulk(
      ::grpc::CallbackServerContext* /*context*/, const ::farm::nurture::location::service::proto::BulkInsertLocationWithoutBoundaryRequest* /*request*/, ::farm::nurture::location::service::proto::BulkInsertLocationWithoutBoundaryResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_ExecuteUpdateLocationWithoutBoundaryById : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_ExecuteUpdateLocationWithoutBoundaryById() {
      ::grpc::Service::MarkMethodCallback(27,
          new ::grpc::internal::CallbackUnaryHandler< ::farm::nurture::location::service::proto::UpdateLocationWithoutBoundaryByIdRequest, ::farm::nurture::location::service::proto::UpdateLocationWithoutBoundaryByIdResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::farm::nurture::location::service::proto::UpdateLocationWithoutBoundaryByIdRequest* request, ::farm::nurture::location::service::proto::UpdateLocationWithoutBoundaryByIdResponse* response) { return this->ExecuteUpdateLocationWithoutBoundaryById(context, request, response); }));}
    void SetMessageAllocatorFor_ExecuteUpdateLocationWithoutBoundaryById(
        ::grpc::MessageAllocator< ::farm::nurture::location::service::proto::UpdateLocationWithoutBoundaryByIdRequest, ::farm::nurture::location::service::proto::UpdateLocationWithoutBoundaryByIdResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(27);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::farm::nurture::location::service::proto::UpdateLocationWithoutBoundaryByIdRequest, ::farm::nurture::location::service::proto::UpdateLocationWithoutBoundaryByIdResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_ExecuteUpdateLocationWithoutBoundaryById() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ExecuteUpdateLocationWithoutBoundaryById(::grpc::ServerContext* /*context*/, const ::farm::nurture::location::service::proto::UpdateLocationWithoutBoundaryByIdRequest* /*request*/, ::farm::nurture::location::service::proto::UpdateLocationWithoutBoundaryByIdResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ExecuteUpdateLocationWithoutBoundaryById(
      ::grpc::CallbackServerContext* /*context*/, const ::farm::nurture::location::service::proto::UpdateLocationWithoutBoundaryByIdRequest* /*request*/, ::farm::nurture::location::service::proto::UpdateLocationWithoutBoundaryByIdResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_ExecuteUpdateLocationWithoutBoundaryByIdBulk : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_ExecuteUpdateLocationWithoutBoundaryByIdBulk() {
      ::grpc::Service::MarkMethodCallback(28,
          new ::grpc::internal::CallbackUnaryHandler< ::farm::nurture::location::service::proto::BulkUpdateLocationWithoutBoundaryByIdRequest, ::farm::nurture::location::service::proto::BulkUpdateLocationWithoutBoundaryByIdResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::farm::nurture::location::service::proto::BulkUpdateLocationWithoutBoundaryByIdRequest* request, ::farm::nurture::location::service::proto::BulkUpdateLocationWithoutBoundaryByIdResponse* response) { return this->ExecuteUpdateLocationWithoutBoundaryByIdBulk(context, request, response); }));}
    void SetMessageAllocatorFor_ExecuteUpdateLocationWithoutBoundaryByIdBulk(
        ::grpc::MessageAllocator< ::farm::nurture::location::service::proto::BulkUpdateLocationWithoutBoundaryByIdRequest, ::farm::nurture::location::service::proto::BulkUpdateLocationWithoutBoundaryByIdResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(28);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::farm::nurture::location::service::proto::BulkUpdateLocationWithoutBoundaryByIdRequest, ::farm::nurture::location::service::proto::BulkUpdateLocationWithoutBoundaryByIdResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_ExecuteUpdateLocationWithoutBoundaryByIdBulk() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ExecuteUpdateLocationWithoutBoundaryByIdBulk(::grpc::ServerContext* /*context*/, const ::farm::nurture::location::service::proto::BulkUpdateLocationWithoutBoundaryByIdRequest* /*request*/, ::farm::nurture::location::service::proto::BulkUpdateLocationWithoutBoundaryByIdResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ExecuteUpdateLocationWithoutBoundaryByIdBulk(
      ::grpc::CallbackServerContext* /*context*/, const ::farm::nurture::location::service::proto::BulkUpdateLocationWithoutBoundaryByIdRequest* /*request*/, ::farm::nurture::location::service::proto::BulkUpdateLocationWithoutBoundaryByIdResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_ExecuteDeleteLocationById : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_ExecuteDeleteLocationById() {
      ::grpc::Service::MarkMethodCallback(29,
          new ::grpc::internal::CallbackUnaryHandler< ::farm::nurture::location::service::proto::DeleteLocationByIdRequest, ::farm::nurture::location::service::proto::DeleteLocationByIdResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::farm::nurture::location::service::proto::DeleteLocationByIdRequest* request, ::farm::nurture::location::service::proto::DeleteLocationByIdResponse* response) { return this->ExecuteDeleteLocationById(context, request, response); }));}
    void SetMessageAllocatorFor_ExecuteDeleteLocationById(
        ::grpc::MessageAllocator< ::farm::nurture::location::service::proto::DeleteLocationByIdRequest, ::farm::nurture::location::service::proto::DeleteLocationByIdResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(29);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::farm::nurture::location::service::proto::DeleteLocationByIdRequest, ::farm::nurture::location::service::proto::DeleteLocationByIdResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_ExecuteDeleteLocationById() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ExecuteDeleteLocationById(::grpc::ServerContext* /*context*/, const ::farm::nurture::location::service::proto::DeleteLocationByIdRequest* /*request*/, ::farm::nurture::location::service::proto::DeleteLocationByIdResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ExecuteDeleteLocationById(
      ::grpc::CallbackServerContext* /*context*/, const ::farm::nurture::location::service::proto::DeleteLocationByIdRequest* /*request*/, ::farm::nurture::location::service::proto::DeleteLocationByIdResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_ExecuteDeleteLocationByIdBulk : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_ExecuteDeleteLocationByIdBulk() {
      ::grpc::Service::MarkMethodCallback(30,
          new ::grpc::internal::CallbackUnaryHandler< ::farm::nurture::location::service::proto::BulkDeleteLocationByIdRequest, ::farm::nurture::location::service::proto::BulkDeleteLocationByIdResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::farm::nurture::location::service::proto::BulkDeleteLocationByIdRequest* request, ::farm::nurture::location::service::proto::BulkDeleteLocationByIdResponse* response) { return this->ExecuteDeleteLocationByIdBulk(context, request, response); }));}
    void SetMessageAllocatorFor_ExecuteDeleteLocationByIdBulk(
        ::grpc::MessageAllocator< ::farm::nurture::location::service::proto::BulkDeleteLocationByIdRequest, ::farm::nurture::location::service::proto::BulkDeleteLocationByIdResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(30);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::farm::nurture::location::service::proto::BulkDeleteLocationByIdRequest, ::farm::nurture::location::service::proto::BulkDeleteLocationByIdResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_ExecuteDeleteLocationByIdBulk() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ExecuteDeleteLocationByIdBulk(::grpc::ServerContext* /*context*/, const ::farm::nurture::location::service::proto::BulkDeleteLocationByIdRequest* /*request*/, ::farm::nurture::location::service::proto::BulkDeleteLocationByIdResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ExecuteDeleteLocationByIdBulk(
      ::grpc::CallbackServerContext* /*context*/, const ::farm::nurture::location::service::proto::BulkDeleteLocationByIdRequest* /*request*/, ::farm::nurture::location::service::proto::BulkDeleteLocationByIdResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_Execute : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_Execute() {
      ::grpc::Service::MarkMethodCallback(31,
          new ::grpc::internal::CallbackUnaryHandler< ::farm::nurture::location::service::proto::MultiRequests, ::farm::nurture::location::service::proto::MultiResponses>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::farm::nurture::location::service::proto::MultiRequests* request, ::farm::nurture::location::service::proto::MultiResponses* response) { return this->Execute(context, request, response); }));}
    void SetMessageAllocatorFor_Execute(
        ::grpc::MessageAllocator< ::farm::nurture::location::service::proto::MultiRequests, ::farm::nurture::location::service::proto::MultiResponses>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(31);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::farm::nurture::location::service::proto::MultiRequests, ::farm::nurture::location::service::proto::MultiResponses>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_Execute() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Execute(::grpc::ServerContext* /*context*/, const ::farm::nurture::location::service::proto::MultiRequests* /*request*/, ::farm::nurture::location::service::proto::MultiResponses* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* Execute(
      ::grpc::CallbackServerContext* /*context*/, const ::farm::nurture::location::service::proto::MultiRequests* /*request*/, ::farm::nurture::location::service::proto::MultiResponses* /*response*/)  { return nullptr; }
  };
  typedef WithCallbackMethod_ExecuteInsertLocation<WithCallbackMethod_ExecuteInsertLocationBulk<WithCallbackMethod_ExecuteInsertLocationS2Cell<WithCallbackMethod_ExecuteInsertLocationS2CellBulk<WithCallbackMethod_ExecuteInsertConfig<WithCallbackMethod_ExecuteInsertConfigBulk<WithCallbackMethod_ExecuteFetchLocationById<WithCallbackMethod_ExecuteFetchLocationByCodeAndNamespace<WithCallbackMethod_ExecuteFetchS2CellById<WithCallbackMethod_ExecuteFetchS2CellByLocation<WithCallbackMethod_ExecuteFetchS2CellByLocationId<WithCallbackMethod_ExecuteUpdateLocationById<WithCallbackMethod_ExecuteUpdateLocationByIdBulk<WithCallbackMethod_ExecuteUpdateLocationLabelById<WithCallbackMethod_ExecuteUpdateLocationLabelByIdBulk<WithCallbackMethod_ExecuteUpdateDeleteS2CellByLocation<WithCallbackMethod_ExecuteUpdateDeleteS2CellByLocationBulk<WithCallbackMethod_ExecuteFetchConfigById<WithCallbackMethod_ExecuteAddLocation<WithCallbackMethod_ExecuteAddLocationBulk<WithCallbackMethod_ExecuteUpdateLocation<WithCallbackMethod_ExecuteUpdateLocationBulk<WithCallbackMethod_ExecuteGetLocationsWithBoundary<WithCallbackMethod_ExecuteGetLocations<WithCallbackMethod_ExecuteGetChildGeographies<WithCallbackMethod_ExecuteInsertLocationWithoutBoundary<WithCallbackMethod_ExecuteInsertLocationWithoutBoundaryBulk<WithCallbackMethod_ExecuteUpdateLocationWithoutBoundaryById<WithCallbackMethod_ExecuteUpdateLocationWithoutBoundaryByIdBulk<WithCallbackMethod_ExecuteDeleteLocationById<WithCallbackMethod_ExecuteDeleteLocationByIdBulk<WithCallbackMethod_Execute<Service > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > CallbackService;
  typedef CallbackService ExperimentalCallbackService;
  template <class BaseClass>
  class WithGenericMethod_ExecuteInsertLocation : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_ExecuteInsertLocation() {
      ::grpc::Service::MarkMethodGeneric(0);
    }
    ~WithGenericMethod_ExecuteInsertLocation() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ExecuteInsertLocation(::grpc::ServerContext* /*context*/, const ::farm::nurture::location::service::proto::InsertLocationRequest* /*request*/, ::farm::nurture::location::service::proto::InsertLocationResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ExecuteInsertLocationBulk : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_ExecuteInsertLocationBulk() {
      ::grpc::Service::MarkMethodGeneric(1);
    }
    ~WithGenericMethod_ExecuteInsertLocationBulk() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ExecuteInsertLocationBulk(::grpc::ServerContext* /*context*/, const ::farm::nurture::location::service::proto::BulkInsertLocationRequest* /*request*/, ::farm::nurture::location::service::proto::BulkInsertLocationResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ExecuteInsertLocationS2Cell : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_ExecuteInsertLocationS2Cell() {
      ::grpc::Service::MarkMethodGeneric(2);
    }
    ~WithGenericMethod_ExecuteInsertLocationS2Cell() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ExecuteInsertLocationS2Cell(::grpc::ServerContext* /*context*/, const ::farm::nurture::location::service::proto::InsertLocationS2CellRequest* /*request*/, ::farm::nurture::location::service::proto::InsertLocationS2CellResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ExecuteInsertLocationS2CellBulk : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_ExecuteInsertLocationS2CellBulk() {
      ::grpc::Service::MarkMethodGeneric(3);
    }
    ~WithGenericMethod_ExecuteInsertLocationS2CellBulk() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ExecuteInsertLocationS2CellBulk(::grpc::ServerContext* /*context*/, const ::farm::nurture::location::service::proto::BulkInsertLocationS2CellRequest* /*request*/, ::farm::nurture::location::service::proto::BulkInsertLocationS2CellResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ExecuteInsertConfig : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_ExecuteInsertConfig() {
      ::grpc::Service::MarkMethodGeneric(4);
    }
    ~WithGenericMethod_ExecuteInsertConfig() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ExecuteInsertConfig(::grpc::ServerContext* /*context*/, const ::farm::nurture::location::service::proto::InsertConfigRequest* /*request*/, ::farm::nurture::location::service::proto::InsertConfigResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ExecuteInsertConfigBulk : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_ExecuteInsertConfigBulk() {
      ::grpc::Service::MarkMethodGeneric(5);
    }
    ~WithGenericMethod_ExecuteInsertConfigBulk() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ExecuteInsertConfigBulk(::grpc::ServerContext* /*context*/, const ::farm::nurture::location::service::proto::BulkInsertConfigRequest* /*request*/, ::farm::nurture::location::service::proto::BulkInsertConfigResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ExecuteFetchLocationById : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_ExecuteFetchLocationById() {
      ::grpc::Service::MarkMethodGeneric(6);
    }
    ~WithGenericMethod_ExecuteFetchLocationById() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ExecuteFetchLocationById(::grpc::ServerContext* /*context*/, const ::farm::nurture::location::service::proto::FetchLocationByIdRequest* /*request*/, ::farm::nurture::location::service::proto::Location* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ExecuteFetchLocationByCodeAndNamespace : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_ExecuteFetchLocationByCodeAndNamespace() {
      ::grpc::Service::MarkMethodGeneric(7);
    }
    ~WithGenericMethod_ExecuteFetchLocationByCodeAndNamespace() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ExecuteFetchLocationByCodeAndNamespace(::grpc::ServerContext* /*context*/, const ::farm::nurture::location::service::proto::FetchLocationByCodeAndNamespaceRequest* /*request*/, ::farm::nurture::location::service::proto::Location* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ExecuteFetchS2CellById : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_ExecuteFetchS2CellById() {
      ::grpc::Service::MarkMethodGeneric(8);
    }
    ~WithGenericMethod_ExecuteFetchS2CellById() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ExecuteFetchS2CellById(::grpc::ServerContext* /*context*/, const ::farm::nurture::location::service::proto::FetchS2CellByIdRequest* /*request*/, ::farm::nurture::location::service::proto::S2Cell* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ExecuteFetchS2CellByLocation : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_ExecuteFetchS2CellByLocation() {
      ::grpc::Service::MarkMethodGeneric(9);
    }
    ~WithGenericMethod_ExecuteFetchS2CellByLocation() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ExecuteFetchS2CellByLocation(::grpc::ServerContext* /*context*/, const ::farm::nurture::location::service::proto::FetchS2CellByLocationRequest* /*request*/, ::farm::nurture::location::service::proto::S2Cell* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ExecuteFetchS2CellByLocationId : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_ExecuteFetchS2CellByLocationId() {
      ::grpc::Service::MarkMethodGeneric(10);
    }
    ~WithGenericMethod_ExecuteFetchS2CellByLocationId() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ExecuteFetchS2CellByLocationId(::grpc::ServerContext* /*context*/, const ::farm::nurture::location::service::proto::FetchS2CellByLocationIdRequest* /*request*/, ::farm::nurture::location::service::proto::LocationS2Cells* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ExecuteUpdateLocationById : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_ExecuteUpdateLocationById() {
      ::grpc::Service::MarkMethodGeneric(11);
    }
    ~WithGenericMethod_ExecuteUpdateLocationById() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ExecuteUpdateLocationById(::grpc::ServerContext* /*context*/, const ::farm::nurture::location::service::proto::UpdateLocationByIdRequest* /*request*/, ::farm::nurture::location::service::proto::UpdateLocationByIdResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ExecuteUpdateLocationByIdBulk : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_ExecuteUpdateLocationByIdBulk() {
      ::grpc::Service::MarkMethodGeneric(12);
    }
    ~WithGenericMethod_ExecuteUpdateLocationByIdBulk() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ExecuteUpdateLocationByIdBulk(::grpc::ServerContext* /*context*/, const ::farm::nurture::location::service::proto::BulkUpdateLocationByIdRequest* /*request*/, ::farm::nurture::location::service::proto::BulkUpdateLocationByIdResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ExecuteUpdateLocationLabelById : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_ExecuteUpdateLocationLabelById() {
      ::grpc::Service::MarkMethodGeneric(13);
    }
    ~WithGenericMethod_ExecuteUpdateLocationLabelById() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ExecuteUpdateLocationLabelById(::grpc::ServerContext* /*context*/, const ::farm::nurture::location::service::proto::UpdateLocationLabelByIdRequest* /*request*/, ::farm::nurture::location::service::proto::UpdateLocationLabelByIdResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ExecuteUpdateLocationLabelByIdBulk : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_ExecuteUpdateLocationLabelByIdBulk() {
      ::grpc::Service::MarkMethodGeneric(14);
    }
    ~WithGenericMethod_ExecuteUpdateLocationLabelByIdBulk() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ExecuteUpdateLocationLabelByIdBulk(::grpc::ServerContext* /*context*/, const ::farm::nurture::location::service::proto::BulkUpdateLocationLabelByIdRequest* /*request*/, ::farm::nurture::location::service::proto::BulkUpdateLocationLabelByIdResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ExecuteUpdateDeleteS2CellByLocation : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_ExecuteUpdateDeleteS2CellByLocation() {
      ::grpc::Service::MarkMethodGeneric(15);
    }
    ~WithGenericMethod_ExecuteUpdateDeleteS2CellByLocation() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ExecuteUpdateDeleteS2CellByLocation(::grpc::ServerContext* /*context*/, const ::farm::nurture::location::service::proto::UpdateDeleteS2CellByLocationRequest* /*request*/, ::farm::nurture::location::service::proto::UpdateDeleteS2CellByLocationResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ExecuteUpdateDeleteS2CellByLocationBulk : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_ExecuteUpdateDeleteS2CellByLocationBulk() {
      ::grpc::Service::MarkMethodGeneric(16);
    }
    ~WithGenericMethod_ExecuteUpdateDeleteS2CellByLocationBulk() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ExecuteUpdateDeleteS2CellByLocationBulk(::grpc::ServerContext* /*context*/, const ::farm::nurture::location::service::proto::BulkUpdateDeleteS2CellByLocationRequest* /*request*/, ::farm::nurture::location::service::proto::BulkUpdateDeleteS2CellByLocationResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ExecuteFetchConfigById : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_ExecuteFetchConfigById() {
      ::grpc::Service::MarkMethodGeneric(17);
    }
    ~WithGenericMethod_ExecuteFetchConfigById() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ExecuteFetchConfigById(::grpc::ServerContext* /*context*/, const ::farm::nurture::location::service::proto::FetchConfigByIdRequest* /*request*/, ::farm::nurture::location::service::proto::Config* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ExecuteAddLocation : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_ExecuteAddLocation() {
      ::grpc::Service::MarkMethodGeneric(18);
    }
    ~WithGenericMethod_ExecuteAddLocation() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ExecuteAddLocation(::grpc::ServerContext* /*context*/, const ::farm::nurture::location::service::proto::AddLocationRequest* /*request*/, ::farm::nurture::location::service::proto::AddLocationResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ExecuteAddLocationBulk : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_ExecuteAddLocationBulk() {
      ::grpc::Service::MarkMethodGeneric(19);
    }
    ~WithGenericMethod_ExecuteAddLocationBulk() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ExecuteAddLocationBulk(::grpc::ServerContext* /*context*/, const ::farm::nurture::location::service::proto::BulkAddLocationRequest* /*request*/, ::farm::nurture::location::service::proto::BulkAddLocationResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ExecuteUpdateLocation : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_ExecuteUpdateLocation() {
      ::grpc::Service::MarkMethodGeneric(20);
    }
    ~WithGenericMethod_ExecuteUpdateLocation() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ExecuteUpdateLocation(::grpc::ServerContext* /*context*/, const ::farm::nurture::location::service::proto::UpdateLocationRequest* /*request*/, ::farm::nurture::location::service::proto::UpdateLocationResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ExecuteUpdateLocationBulk : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_ExecuteUpdateLocationBulk() {
      ::grpc::Service::MarkMethodGeneric(21);
    }
    ~WithGenericMethod_ExecuteUpdateLocationBulk() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ExecuteUpdateLocationBulk(::grpc::ServerContext* /*context*/, const ::farm::nurture::location::service::proto::BulkUpdateLocationRequest* /*request*/, ::farm::nurture::location::service::proto::BulkUpdateLocationResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ExecuteGetLocationsWithBoundary : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_ExecuteGetLocationsWithBoundary() {
      ::grpc::Service::MarkMethodGeneric(22);
    }
    ~WithGenericMethod_ExecuteGetLocationsWithBoundary() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ExecuteGetLocationsWithBoundary(::grpc::ServerContext* /*context*/, const ::farm::nurture::location::service::proto::GetLocationsWithBoundaryRequest* /*request*/, ::farm::nurture::location::service::proto::GetLocationsWithBoundaryResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ExecuteGetLocations : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_ExecuteGetLocations() {
      ::grpc::Service::MarkMethodGeneric(23);
    }
    ~WithGenericMethod_ExecuteGetLocations() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ExecuteGetLocations(::grpc::ServerContext* /*context*/, const ::farm::nurture::location::service::proto::GetLocationsRequest* /*request*/, ::farm::nurture::location::service::proto::GetLocationsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ExecuteGetChildGeographies : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_ExecuteGetChildGeographies() {
      ::grpc::Service::MarkMethodGeneric(24);
    }
    ~WithGenericMethod_ExecuteGetChildGeographies() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ExecuteGetChildGeographies(::grpc::ServerContext* /*context*/, const ::farm::nurture::location::service::proto::GetChildGeographiesRequest* /*request*/, ::farm::nurture::location::service::proto::GetChildGeographiesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ExecuteInsertLocationWithoutBoundary : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_ExecuteInsertLocationWithoutBoundary() {
      ::grpc::Service::MarkMethodGeneric(25);
    }
    ~WithGenericMethod_ExecuteInsertLocationWithoutBoundary() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ExecuteInsertLocationWithoutBoundary(::grpc::ServerContext* /*context*/, const ::farm::nurture::location::service::proto::InsertLocationWithoutBoundaryRequest* /*request*/, ::farm::nurture::location::service::proto::InsertLocationWithoutBoundaryResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ExecuteInsertLocationWithoutBoundaryBulk : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_ExecuteInsertLocationWithoutBoundaryBulk() {
      ::grpc::Service::MarkMethodGeneric(26);
    }
    ~WithGenericMethod_ExecuteInsertLocationWithoutBoundaryBulk() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ExecuteInsertLocationWithoutBoundaryBulk(::grpc::ServerContext* /*context*/, const ::farm::nurture::location::service::proto::BulkInsertLocationWithoutBoundaryRequest* /*request*/, ::farm::nurture::location::service::proto::BulkInsertLocationWithoutBoundaryResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ExecuteUpdateLocationWithoutBoundaryById : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_ExecuteUpdateLocationWithoutBoundaryById() {
      ::grpc::Service::MarkMethodGeneric(27);
    }
    ~WithGenericMethod_ExecuteUpdateLocationWithoutBoundaryById() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ExecuteUpdateLocationWithoutBoundaryById(::grpc::ServerContext* /*context*/, const ::farm::nurture::location::service::proto::UpdateLocationWithoutBoundaryByIdRequest* /*request*/, ::farm::nurture::location::service::proto::UpdateLocationWithoutBoundaryByIdResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ExecuteUpdateLocationWithoutBoundaryByIdBulk : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_ExecuteUpdateLocationWithoutBoundaryByIdBulk() {
      ::grpc::Service::MarkMethodGeneric(28);
    }
    ~WithGenericMethod_ExecuteUpdateLocationWithoutBoundaryByIdBulk() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ExecuteUpdateLocationWithoutBoundaryByIdBulk(::grpc::ServerContext* /*context*/, const ::farm::nurture::location::service::proto::BulkUpdateLocationWithoutBoundaryByIdRequest* /*request*/, ::farm::nurture::location::service::proto::BulkUpdateLocationWithoutBoundaryByIdResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ExecuteDeleteLocationById : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_ExecuteDeleteLocationById() {
      ::grpc::Service::MarkMethodGeneric(29);
    }
    ~WithGenericMethod_ExecuteDeleteLocationById() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ExecuteDeleteLocationById(::grpc::ServerContext* /*context*/, const ::farm::nurture::location::service::proto::DeleteLocationByIdRequest* /*request*/, ::farm::nurture::location::service::proto::DeleteLocationByIdResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ExecuteDeleteLocationByIdBulk : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_ExecuteDeleteLocationByIdBulk() {
      ::grpc::Service::MarkMethodGeneric(30);
    }
    ~WithGenericMethod_ExecuteDeleteLocationByIdBulk() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ExecuteDeleteLocationByIdBulk(::grpc::ServerContext* /*context*/, const ::farm::nurture::location::service::proto::BulkDeleteLocationByIdRequest* /*request*/, ::farm::nurture::location::service::proto::BulkDeleteLocationByIdResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_Execute : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_Execute() {
      ::grpc::Service::MarkMethodGeneric(31);
    }
    ~WithGenericMethod_Execute() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Execute(::grpc::ServerContext* /*context*/, const ::farm::nurture::location::service::proto::MultiRequests* /*request*/, ::farm::nurture::location::service::proto::MultiResponses* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithRawMethod_ExecuteInsertLocation : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_ExecuteInsertLocation() {
      ::grpc::Service::MarkMethodRaw(0);
    }
    ~WithRawMethod_ExecuteInsertLocation() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ExecuteInsertLocation(::grpc::ServerContext* /*context*/, const ::farm::nurture::location::service::proto::InsertLocationRequest* /*request*/, ::farm::nurture::location::service::proto::InsertLocationResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestExecuteInsertLocation(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_ExecuteInsertLocationBulk : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_ExecuteInsertLocationBulk() {
      ::grpc::Service::MarkMethodRaw(1);
    }
    ~WithRawMethod_ExecuteInsertLocationBulk() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ExecuteInsertLocationBulk(::grpc::ServerContext* /*context*/, const ::farm::nurture::location::service::proto::BulkInsertLocationRequest* /*request*/, ::farm::nurture::location::service::proto::BulkInsertLocationResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestExecuteInsertLocationBulk(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_ExecuteInsertLocationS2Cell : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_ExecuteInsertLocationS2Cell() {
      ::grpc::Service::MarkMethodRaw(2);
    }
    ~WithRawMethod_ExecuteInsertLocationS2Cell() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ExecuteInsertLocationS2Cell(::grpc::ServerContext* /*context*/, const ::farm::nurture::location::service::proto::InsertLocationS2CellRequest* /*request*/, ::farm::nurture::location::service::proto::InsertLocationS2CellResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestExecuteInsertLocationS2Cell(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_ExecuteInsertLocationS2CellBulk : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_ExecuteInsertLocationS2CellBulk() {
      ::grpc::Service::MarkMethodRaw(3);
    }
    ~WithRawMethod_ExecuteInsertLocationS2CellBulk() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ExecuteInsertLocationS2CellBulk(::grpc::ServerContext* /*context*/, const ::farm::nurture::location::service::proto::BulkInsertLocationS2CellRequest* /*request*/, ::farm::nurture::location::service::proto::BulkInsertLocationS2CellResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestExecuteInsertLocationS2CellBulk(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_ExecuteInsertConfig : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_ExecuteInsertConfig() {
      ::grpc::Service::MarkMethodRaw(4);
    }
    ~WithRawMethod_ExecuteInsertConfig() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ExecuteInsertConfig(::grpc::ServerContext* /*context*/, const ::farm::nurture::location::service::proto::InsertConfigRequest* /*request*/, ::farm::nurture::location::service::proto::InsertConfigResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestExecuteInsertConfig(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_ExecuteInsertConfigBulk : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_ExecuteInsertConfigBulk() {
      ::grpc::Service::MarkMethodRaw(5);
    }
    ~WithRawMethod_ExecuteInsertConfigBulk() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ExecuteInsertConfigBulk(::grpc::ServerContext* /*context*/, const ::farm::nurture::location::service::proto::BulkInsertConfigRequest* /*request*/, ::farm::nurture::location::service::proto::BulkInsertConfigResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestExecuteInsertConfigBulk(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(5, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_ExecuteFetchLocationById : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_ExecuteFetchLocationById() {
      ::grpc::Service::MarkMethodRaw(6);
    }
    ~WithRawMethod_ExecuteFetchLocationById() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ExecuteFetchLocationById(::grpc::ServerContext* /*context*/, const ::farm::nurture::location::service::proto::FetchLocationByIdRequest* /*request*/, ::farm::nurture::location::service::proto::Location* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestExecuteFetchLocationById(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(6, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_ExecuteFetchLocationByCodeAndNamespace : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_ExecuteFetchLocationByCodeAndNamespace() {
      ::grpc::Service::MarkMethodRaw(7);
    }
    ~WithRawMethod_ExecuteFetchLocationByCodeAndNamespace() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ExecuteFetchLocationByCodeAndNamespace(::grpc::ServerContext* /*context*/, const ::farm::nurture::location::service::proto::FetchLocationByCodeAndNamespaceRequest* /*request*/, ::farm::nurture::location::service::proto::Location* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestExecuteFetchLocationByCodeAndNamespace(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(7, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_ExecuteFetchS2CellById : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_ExecuteFetchS2CellById() {
      ::grpc::Service::MarkMethodRaw(8);
    }
    ~WithRawMethod_ExecuteFetchS2CellById() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ExecuteFetchS2CellById(::grpc::ServerContext* /*context*/, const ::farm::nurture::location::service::proto::FetchS2CellByIdRequest* /*request*/, ::farm::nurture::location::service::proto::S2Cell* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestExecuteFetchS2CellById(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(8, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_ExecuteFetchS2CellByLocation : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_ExecuteFetchS2CellByLocation() {
      ::grpc::Service::MarkMethodRaw(9);
    }
    ~WithRawMethod_ExecuteFetchS2CellByLocation() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ExecuteFetchS2CellByLocation(::grpc::ServerContext* /*context*/, const ::farm::nurture::location::service::proto::FetchS2CellByLocationRequest* /*request*/, ::farm::nurture::location::service::proto::S2Cell* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestExecuteFetchS2CellByLocation(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(9, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_ExecuteFetchS2CellByLocationId : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_ExecuteFetchS2CellByLocationId() {
      ::grpc::Service::MarkMethodRaw(10);
    }
    ~WithRawMethod_ExecuteFetchS2CellByLocationId() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ExecuteFetchS2CellByLocationId(::grpc::ServerContext* /*context*/, const ::farm::nurture::location::service::proto::FetchS2CellByLocationIdRequest* /*request*/, ::farm::nurture::location::service::proto::LocationS2Cells* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestExecuteFetchS2CellByLocationId(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(10, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_ExecuteUpdateLocationById : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_ExecuteUpdateLocationById() {
      ::grpc::Service::MarkMethodRaw(11);
    }
    ~WithRawMethod_ExecuteUpdateLocationById() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ExecuteUpdateLocationById(::grpc::ServerContext* /*context*/, const ::farm::nurture::location::service::proto::UpdateLocationByIdRequest* /*request*/, ::farm::nurture::location::service::proto::UpdateLocationByIdResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestExecuteUpdateLocationById(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(11, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_ExecuteUpdateLocationByIdBulk : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_ExecuteUpdateLocationByIdBulk() {
      ::grpc::Service::MarkMethodRaw(12);
    }
    ~WithRawMethod_ExecuteUpdateLocationByIdBulk() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ExecuteUpdateLocationByIdBulk(::grpc::ServerContext* /*context*/, const ::farm::nurture::location::service::proto::BulkUpdateLocationByIdRequest* /*request*/, ::farm::nurture::location::service::proto::BulkUpdateLocationByIdResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestExecuteUpdateLocationByIdBulk(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(12, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_ExecuteUpdateLocationLabelById : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_ExecuteUpdateLocationLabelById() {
      ::grpc::Service::MarkMethodRaw(13);
    }
    ~WithRawMethod_ExecuteUpdateLocationLabelById() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ExecuteUpdateLocationLabelById(::grpc::ServerContext* /*context*/, const ::farm::nurture::location::service::proto::UpdateLocationLabelByIdRequest* /*request*/, ::farm::nurture::location::service::proto::UpdateLocationLabelByIdResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestExecuteUpdateLocationLabelById(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(13, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_ExecuteUpdateLocationLabelByIdBulk : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_ExecuteUpdateLocationLabelByIdBulk() {
      ::grpc::Service::MarkMethodRaw(14);
    }
    ~WithRawMethod_ExecuteUpdateLocationLabelByIdBulk() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ExecuteUpdateLocationLabelByIdBulk(::grpc::ServerContext* /*context*/, const ::farm::nurture::location::service::proto::BulkUpdateLocationLabelByIdRequest* /*request*/, ::farm::nurture::location::service::proto::BulkUpdateLocationLabelByIdResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestExecuteUpdateLocationLabelByIdBulk(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(14, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_ExecuteUpdateDeleteS2CellByLocation : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_ExecuteUpdateDeleteS2CellByLocation() {
      ::grpc::Service::MarkMethodRaw(15);
    }
    ~WithRawMethod_ExecuteUpdateDeleteS2CellByLocation() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ExecuteUpdateDeleteS2CellByLocation(::grpc::ServerContext* /*context*/, const ::farm::nurture::location::service::proto::UpdateDeleteS2CellByLocationRequest* /*request*/, ::farm::nurture::location::service::proto::UpdateDeleteS2CellByLocationResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestExecuteUpdateDeleteS2CellByLocation(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(15, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_ExecuteUpdateDeleteS2CellByLocationBulk : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_ExecuteUpdateDeleteS2CellByLocationBulk() {
      ::grpc::Service::MarkMethodRaw(16);
    }
    ~WithRawMethod_ExecuteUpdateDeleteS2CellByLocationBulk() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ExecuteUpdateDeleteS2CellByLocationBulk(::grpc::ServerContext* /*context*/, const ::farm::nurture::location::service::proto::BulkUpdateDeleteS2CellByLocationRequest* /*request*/, ::farm::nurture::location::service::proto::BulkUpdateDeleteS2CellByLocationResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestExecuteUpdateDeleteS2CellByLocationBulk(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(16, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_ExecuteFetchConfigById : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_ExecuteFetchConfigById() {
      ::grpc::Service::MarkMethodRaw(17);
    }
    ~WithRawMethod_ExecuteFetchConfigById() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ExecuteFetchConfigById(::grpc::ServerContext* /*context*/, const ::farm::nurture::location::service::proto::FetchConfigByIdRequest* /*request*/, ::farm::nurture::location::service::proto::Config* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestExecuteFetchConfigById(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(17, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_ExecuteAddLocation : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_ExecuteAddLocation() {
      ::grpc::Service::MarkMethodRaw(18);
    }
    ~WithRawMethod_ExecuteAddLocation() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ExecuteAddLocation(::grpc::ServerContext* /*context*/, const ::farm::nurture::location::service::proto::AddLocationRequest* /*request*/, ::farm::nurture::location::service::proto::AddLocationResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestExecuteAddLocation(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(18, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_ExecuteAddLocationBulk : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_ExecuteAddLocationBulk() {
      ::grpc::Service::MarkMethodRaw(19);
    }
    ~WithRawMethod_ExecuteAddLocationBulk() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ExecuteAddLocationBulk(::grpc::ServerContext* /*context*/, const ::farm::nurture::location::service::proto::BulkAddLocationRequest* /*request*/, ::farm::nurture::location::service::proto::BulkAddLocationResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestExecuteAddLocationBulk(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(19, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_ExecuteUpdateLocation : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_ExecuteUpdateLocation() {
      ::grpc::Service::MarkMethodRaw(20);
    }
    ~WithRawMethod_ExecuteUpdateLocation() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ExecuteUpdateLocation(::grpc::ServerContext* /*context*/, const ::farm::nurture::location::service::proto::UpdateLocationRequest* /*request*/, ::farm::nurture::location::service::proto::UpdateLocationResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestExecuteUpdateLocation(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(20, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_ExecuteUpdateLocationBulk : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_ExecuteUpdateLocationBulk() {
      ::grpc::Service::MarkMethodRaw(21);
    }
    ~WithRawMethod_ExecuteUpdateLocationBulk() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ExecuteUpdateLocationBulk(::grpc::ServerContext* /*context*/, const ::farm::nurture::location::service::proto::BulkUpdateLocationRequest* /*request*/, ::farm::nurture::location::service::proto::BulkUpdateLocationResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestExecuteUpdateLocationBulk(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(21, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_ExecuteGetLocationsWithBoundary : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_ExecuteGetLocationsWithBoundary() {
      ::grpc::Service::MarkMethodRaw(22);
    }
    ~WithRawMethod_ExecuteGetLocationsWithBoundary() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ExecuteGetLocationsWithBoundary(::grpc::ServerContext* /*context*/, const ::farm::nurture::location::service::proto::GetLocationsWithBoundaryRequest* /*request*/, ::farm::nurture::location::service::proto::GetLocationsWithBoundaryResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestExecuteGetLocationsWithBoundary(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(22, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_ExecuteGetLocations : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_ExecuteGetLocations() {
      ::grpc::Service::MarkMethodRaw(23);
    }
    ~WithRawMethod_ExecuteGetLocations() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ExecuteGetLocations(::grpc::ServerContext* /*context*/, const ::farm::nurture::location::service::proto::GetLocationsRequest* /*request*/, ::farm::nurture::location::service::proto::GetLocationsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestExecuteGetLocations(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(23, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_ExecuteGetChildGeographies : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_ExecuteGetChildGeographies() {
      ::grpc::Service::MarkMethodRaw(24);
    }
    ~WithRawMethod_ExecuteGetChildGeographies() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ExecuteGetChildGeographies(::grpc::ServerContext* /*context*/, const ::farm::nurture::location::service::proto::GetChildGeographiesRequest* /*request*/, ::farm::nurture::location::service::proto::GetChildGeographiesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestExecuteGetChildGeographies(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(24, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_ExecuteInsertLocationWithoutBoundary : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_ExecuteInsertLocationWithoutBoundary() {
      ::grpc::Service::MarkMethodRaw(25);
    }
    ~WithRawMethod_ExecuteInsertLocationWithoutBoundary() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ExecuteInsertLocationWithoutBoundary(::grpc::ServerContext* /*context*/, const ::farm::nurture::location::service::proto::InsertLocationWithoutBoundaryRequest* /*request*/, ::farm::nurture::location::service::proto::InsertLocationWithoutBoundaryResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestExecuteInsertLocationWithoutBoundary(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(25, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_ExecuteInsertLocationWithoutBoundaryBulk : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_ExecuteInsertLocationWithoutBoundaryBulk() {
      ::grpc::Service::MarkMethodRaw(26);
    }
    ~WithRawMethod_ExecuteInsertLocationWithoutBoundaryBulk() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ExecuteInsertLocationWithoutBoundaryBulk(::grpc::ServerContext* /*context*/, const ::farm::nurture::location::service::proto::BulkInsertLocationWithoutBoundaryRequest* /*request*/, ::farm::nurture::location::service::proto::BulkInsertLocationWithoutBoundaryResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestExecuteInsertLocationWithoutBoundaryBulk(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(26, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_ExecuteUpdateLocationWithoutBoundaryById : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_ExecuteUpdateLocationWithoutBoundaryById() {
      ::grpc::Service::MarkMethodRaw(27);
    }
    ~WithRawMethod_ExecuteUpdateLocationWithoutBoundaryById() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ExecuteUpdateLocationWithoutBoundaryById(::grpc::ServerContext* /*context*/, const ::farm::nurture::location::service::proto::UpdateLocationWithoutBoundaryByIdRequest* /*request*/, ::farm::nurture::location::service::proto::UpdateLocationWithoutBoundaryByIdResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestExecuteUpdateLocationWithoutBoundaryById(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(27, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_ExecuteUpdateLocationWithoutBoundaryByIdBulk : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_ExecuteUpdateLocationWithoutBoundaryByIdBulk() {
      ::grpc::Service::MarkMethodRaw(28);
    }
    ~WithRawMethod_ExecuteUpdateLocationWithoutBoundaryByIdBulk() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ExecuteUpdateLocationWithoutBoundaryByIdBulk(::grpc::ServerContext* /*context*/, const ::farm::nurture::location::service::proto::BulkUpdateLocationWithoutBoundaryByIdRequest* /*request*/, ::farm::nurture::location::service::proto::BulkUpdateLocationWithoutBoundaryByIdResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestExecuteUpdateLocationWithoutBoundaryByIdBulk(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(28, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_ExecuteDeleteLocationById : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_ExecuteDeleteLocationById() {
      ::grpc::Service::MarkMethodRaw(29);
    }
    ~WithRawMethod_ExecuteDeleteLocationById() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ExecuteDeleteLocationById(::grpc::ServerContext* /*context*/, const ::farm::nurture::location::service::proto::DeleteLocationByIdRequest* /*request*/, ::farm::nurture::location::service::proto::DeleteLocationByIdResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestExecuteDeleteLocationById(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(29, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_ExecuteDeleteLocationByIdBulk : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_ExecuteDeleteLocationByIdBulk() {
      ::grpc::Service::MarkMethodRaw(30);
    }
    ~WithRawMethod_ExecuteDeleteLocationByIdBulk() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ExecuteDeleteLocationByIdBulk(::grpc::ServerContext* /*context*/, const ::farm::nurture::location::service::proto::BulkDeleteLocationByIdRequest* /*request*/, ::farm::nurture::location::service::proto::BulkDeleteLocationByIdResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestExecuteDeleteLocationByIdBulk(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(30, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_Execute : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_Execute() {
      ::grpc::Service::MarkMethodRaw(31);
    }
    ~WithRawMethod_Execute() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Execute(::grpc::ServerContext* /*context*/, const ::farm::nurture::location::service::proto::MultiRequests* /*request*/, ::farm::nurture::location::service::proto::MultiResponses* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestExecute(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(31, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_ExecuteInsertLocation : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_ExecuteInsertLocation() {
      ::grpc::Service::MarkMethodRawCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->ExecuteInsertLocation(context, request, response); }));
    }
    ~WithRawCallbackMethod_ExecuteInsertLocation() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ExecuteInsertLocation(::grpc::ServerContext* /*context*/, const ::farm::nurture::location::service::proto::InsertLocationRequest* /*request*/, ::farm::nurture::location::service::proto::InsertLocationResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ExecuteInsertLocation(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_ExecuteInsertLocationBulk : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_ExecuteInsertLocationBulk() {
      ::grpc::Service::MarkMethodRawCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->ExecuteInsertLocationBulk(context, request, response); }));
    }
    ~WithRawCallbackMethod_ExecuteInsertLocationBulk() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ExecuteInsertLocationBulk(::grpc::ServerContext* /*context*/, const ::farm::nurture::location::service::proto::BulkInsertLocationRequest* /*request*/, ::farm::nurture::location::service::proto::BulkInsertLocationResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ExecuteInsertLocationBulk(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_ExecuteInsertLocationS2Cell : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_ExecuteInsertLocationS2Cell() {
      ::grpc::Service::MarkMethodRawCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->ExecuteInsertLocationS2Cell(context, request, response); }));
    }
    ~WithRawCallbackMethod_ExecuteInsertLocationS2Cell() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ExecuteInsertLocationS2Cell(::grpc::ServerContext* /*context*/, const ::farm::nurture::location::service::proto::InsertLocationS2CellRequest* /*request*/, ::farm::nurture::location::service::proto::InsertLocationS2CellResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ExecuteInsertLocationS2Cell(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_ExecuteInsertLocationS2CellBulk : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_ExecuteInsertLocationS2CellBulk() {
      ::grpc::Service::MarkMethodRawCallback(3,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->ExecuteInsertLocationS2CellBulk(context, request, response); }));
    }
    ~WithRawCallbackMethod_ExecuteInsertLocationS2CellBulk() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ExecuteInsertLocationS2CellBulk(::grpc::ServerContext* /*context*/, const ::farm::nurture::location::service::proto::BulkInsertLocationS2CellRequest* /*request*/, ::farm::nurture::location::service::proto::BulkInsertLocationS2CellResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ExecuteInsertLocationS2CellBulk(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_ExecuteInsertConfig : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_ExecuteInsertConfig() {
      ::grpc::Service::MarkMethodRawCallback(4,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->ExecuteInsertConfig(context, request, response); }));
    }
    ~WithRawCallbackMethod_ExecuteInsertConfig() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ExecuteInsertConfig(::grpc::ServerContext* /*context*/, const ::farm::nurture::location::service::proto::InsertConfigRequest* /*request*/, ::farm::nurture::location::service::proto::InsertConfigResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ExecuteInsertConfig(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_ExecuteInsertConfigBulk : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_ExecuteInsertConfigBulk() {
      ::grpc::Service::MarkMethodRawCallback(5,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->ExecuteInsertConfigBulk(context, request, response); }));
    }
    ~WithRawCallbackMethod_ExecuteInsertConfigBulk() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ExecuteInsertConfigBulk(::grpc::ServerContext* /*context*/, const ::farm::nurture::location::service::proto::BulkInsertConfigRequest* /*request*/, ::farm::nurture::location::service::proto::BulkInsertConfigResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ExecuteInsertConfigBulk(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_ExecuteFetchLocationById : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_ExecuteFetchLocationById() {
      ::grpc::Service::MarkMethodRawCallback(6,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->ExecuteFetchLocationById(context, request, response); }));
    }
    ~WithRawCallbackMethod_ExecuteFetchLocationById() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ExecuteFetchLocationById(::grpc::ServerContext* /*context*/, const ::farm::nurture::location::service::proto::FetchLocationByIdRequest* /*request*/, ::farm::nurture::location::service::proto::Location* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ExecuteFetchLocationById(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_ExecuteFetchLocationByCodeAndNamespace : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_ExecuteFetchLocationByCodeAndNamespace() {
      ::grpc::Service::MarkMethodRawCallback(7,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->ExecuteFetchLocationByCodeAndNamespace(context, request, response); }));
    }
    ~WithRawCallbackMethod_ExecuteFetchLocationByCodeAndNamespace() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ExecuteFetchLocationByCodeAndNamespace(::grpc::ServerContext* /*context*/, const ::farm::nurture::location::service::proto::FetchLocationByCodeAndNamespaceRequest* /*request*/, ::farm::nurture::location::service::proto::Location* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ExecuteFetchLocationByCodeAndNamespace(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_ExecuteFetchS2CellById : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_ExecuteFetchS2CellById() {
      ::grpc::Service::MarkMethodRawCallback(8,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->ExecuteFetchS2CellById(context, request, response); }));
    }
    ~WithRawCallbackMethod_ExecuteFetchS2CellById() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ExecuteFetchS2CellById(::grpc::ServerContext* /*context*/, const ::farm::nurture::location::service::proto::FetchS2CellByIdRequest* /*request*/, ::farm::nurture::location::service::proto::S2Cell* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ExecuteFetchS2CellById(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_ExecuteFetchS2CellByLocation : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_ExecuteFetchS2CellByLocation() {
      ::grpc::Service::MarkMethodRawCallback(9,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->ExecuteFetchS2CellByLocation(context, request, response); }));
    }
    ~WithRawCallbackMethod_ExecuteFetchS2CellByLocation() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ExecuteFetchS2CellByLocation(::grpc::ServerContext* /*context*/, const ::farm::nurture::location::service::proto::FetchS2CellByLocationRequest* /*request*/, ::farm::nurture::location::service::proto::S2Cell* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ExecuteFetchS2CellByLocation(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_ExecuteFetchS2CellByLocationId : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_ExecuteFetchS2CellByLocationId() {
      ::grpc::Service::MarkMethodRawCallback(10,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->ExecuteFetchS2CellByLocationId(context, request, response); }));
    }
    ~WithRawCallbackMethod_ExecuteFetchS2CellByLocationId() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ExecuteFetchS2CellByLocationId(::grpc::ServerContext* /*context*/, const ::farm::nurture::location::service::proto::FetchS2CellByLocationIdRequest* /*request*/, ::farm::nurture::location::service::proto::LocationS2Cells* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ExecuteFetchS2CellByLocationId(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_ExecuteUpdateLocationById : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_ExecuteUpdateLocationById() {
      ::grpc::Service::MarkMethodRawCallback(11,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->ExecuteUpdateLocationById(context, request, response); }));
    }
    ~WithRawCallbackMethod_ExecuteUpdateLocationById() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ExecuteUpdateLocationById(::grpc::ServerContext* /*context*/, const ::farm::nurture::location::service::proto::UpdateLocationByIdRequest* /*request*/, ::farm::nurture::location::service::proto::UpdateLocationByIdResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ExecuteUpdateLocationById(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_ExecuteUpdateLocationByIdBulk : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_ExecuteUpdateLocationByIdBulk() {
      ::grpc::Service::MarkMethodRawCallback(12,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->ExecuteUpdateLocationByIdBulk(context, request, response); }));
    }
    ~WithRawCallbackMethod_ExecuteUpdateLocationByIdBulk() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ExecuteUpdateLocationByIdBulk(::grpc::ServerContext* /*context*/, const ::farm::nurture::location::service::proto::BulkUpdateLocationByIdRequest* /*request*/, ::farm::nurture::location::service::proto::BulkUpdateLocationByIdResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ExecuteUpdateLocationByIdBulk(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_ExecuteUpdateLocationLabelById : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_ExecuteUpdateLocationLabelById() {
      ::grpc::Service::MarkMethodRawCallback(13,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->ExecuteUpdateLocationLabelById(context, request, response); }));
    }
    ~WithRawCallbackMethod_ExecuteUpdateLocationLabelById() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ExecuteUpdateLocationLabelById(::grpc::ServerContext* /*context*/, const ::farm::nurture::location::service::proto::UpdateLocationLabelByIdRequest* /*request*/, ::farm::nurture::location::service::proto::UpdateLocationLabelByIdResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ExecuteUpdateLocationLabelById(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_ExecuteUpdateLocationLabelByIdBulk : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_ExecuteUpdateLocationLabelByIdBulk() {
      ::grpc::Service::MarkMethodRawCallback(14,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->ExecuteUpdateLocationLabelByIdBulk(context, request, response); }));
    }
    ~WithRawCallbackMethod_ExecuteUpdateLocationLabelByIdBulk() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ExecuteUpdateLocationLabelByIdBulk(::grpc::ServerContext* /*context*/, const ::farm::nurture::location::service::proto::BulkUpdateLocationLabelByIdRequest* /*request*/, ::farm::nurture::location::service::proto::BulkUpdateLocationLabelByIdResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ExecuteUpdateLocationLabelByIdBulk(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_ExecuteUpdateDeleteS2CellByLocation : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_ExecuteUpdateDeleteS2CellByLocation() {
      ::grpc::Service::MarkMethodRawCallback(15,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->ExecuteUpdateDeleteS2CellByLocation(context, request, response); }));
    }
    ~WithRawCallbackMethod_ExecuteUpdateDeleteS2CellByLocation() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ExecuteUpdateDeleteS2CellByLocation(::grpc::ServerContext* /*context*/, const ::farm::nurture::location::service::proto::UpdateDeleteS2CellByLocationRequest* /*request*/, ::farm::nurture::location::service::proto::UpdateDeleteS2CellByLocationResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ExecuteUpdateDeleteS2CellByLocation(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_ExecuteUpdateDeleteS2CellByLocationBulk : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_ExecuteUpdateDeleteS2CellByLocationBulk() {
      ::grpc::Service::MarkMethodRawCallback(16,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->ExecuteUpdateDeleteS2CellByLocationBulk(context, request, response); }));
    }
    ~WithRawCallbackMethod_ExecuteUpdateDeleteS2CellByLocationBulk() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ExecuteUpdateDeleteS2CellByLocationBulk(::grpc::ServerContext* /*context*/, const ::farm::nurture::location::service::proto::BulkUpdateDeleteS2CellByLocationRequest* /*request*/, ::farm::nurture::location::service::proto::BulkUpdateDeleteS2CellByLocationResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ExecuteUpdateDeleteS2CellByLocationBulk(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_ExecuteFetchConfigById : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_ExecuteFetchConfigById() {
      ::grpc::Service::MarkMethodRawCallback(17,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->ExecuteFetchConfigById(context, request, response); }));
    }
    ~WithRawCallbackMethod_ExecuteFetchConfigById() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ExecuteFetchConfigById(::grpc::ServerContext* /*context*/, const ::farm::nurture::location::service::proto::FetchConfigByIdRequest* /*request*/, ::farm::nurture::location::service::proto::Config* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ExecuteFetchConfigById(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_ExecuteAddLocation : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_ExecuteAddLocation() {
      ::grpc::Service::MarkMethodRawCallback(18,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->ExecuteAddLocation(context, request, response); }));
    }
    ~WithRawCallbackMethod_ExecuteAddLocation() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ExecuteAddLocation(::grpc::ServerContext* /*context*/, const ::farm::nurture::location::service::proto::AddLocationRequest* /*request*/, ::farm::nurture::location::service::proto::AddLocationResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ExecuteAddLocation(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_ExecuteAddLocationBulk : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_ExecuteAddLocationBulk() {
      ::grpc::Service::MarkMethodRawCallback(19,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->ExecuteAddLocationBulk(context, request, response); }));
    }
    ~WithRawCallbackMethod_ExecuteAddLocationBulk() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ExecuteAddLocationBulk(::grpc::ServerContext* /*context*/, const ::farm::nurture::location::service::proto::BulkAddLocationRequest* /*request*/, ::farm::nurture::location::service::proto::BulkAddLocationResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ExecuteAddLocationBulk(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_ExecuteUpdateLocation : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_ExecuteUpdateLocation() {
      ::grpc::Service::MarkMethodRawCallback(20,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->ExecuteUpdateLocation(context, request, response); }));
    }
    ~WithRawCallbackMethod_ExecuteUpdateLocation() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ExecuteUpdateLocation(::grpc::ServerContext* /*context*/, const ::farm::nurture::location::service::proto::UpdateLocationRequest* /*request*/, ::farm::nurture::location::service::proto::UpdateLocationResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ExecuteUpdateLocation(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_ExecuteUpdateLocationBulk : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_ExecuteUpdateLocationBulk() {
      ::grpc::Service::MarkMethodRawCallback(21,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->ExecuteUpdateLocationBulk(context, request, response); }));
    }
    ~WithRawCallbackMethod_ExecuteUpdateLocationBulk() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ExecuteUpdateLocationBulk(::grpc::ServerContext* /*context*/, const ::farm::nurture::location::service::proto::BulkUpdateLocationRequest* /*request*/, ::farm::nurture::location::service::proto::BulkUpdateLocationResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ExecuteUpdateLocationBulk(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_ExecuteGetLocationsWithBoundary : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_ExecuteGetLocationsWithBoundary() {
      ::grpc::Service::MarkMethodRawCallback(22,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->ExecuteGetLocationsWithBoundary(context, request, response); }));
    }
    ~WithRawCallbackMethod_ExecuteGetLocationsWithBoundary() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ExecuteGetLocationsWithBoundary(::grpc::ServerContext* /*context*/, const ::farm::nurture::location::service::proto::GetLocationsWithBoundaryRequest* /*request*/, ::farm::nurture::location::service::proto::GetLocationsWithBoundaryResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ExecuteGetLocationsWithBoundary(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_ExecuteGetLocations : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_ExecuteGetLocations() {
      ::grpc::Service::MarkMethodRawCallback(23,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->ExecuteGetLocations(context, request, response); }));
    }
    ~WithRawCallbackMethod_ExecuteGetLocations() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ExecuteGetLocations(::grpc::ServerContext* /*context*/, const ::farm::nurture::location::service::proto::GetLocationsRequest* /*request*/, ::farm::nurture::location::service::proto::GetLocationsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ExecuteGetLocations(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_ExecuteGetChildGeographies : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_ExecuteGetChildGeographies() {
      ::grpc::Service::MarkMethodRawCallback(24,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->ExecuteGetChildGeographies(context, request, response); }));
    }
    ~WithRawCallbackMethod_ExecuteGetChildGeographies() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ExecuteGetChildGeographies(::grpc::ServerContext* /*context*/, const ::farm::nurture::location::service::proto::GetChildGeographiesRequest* /*request*/, ::farm::nurture::location::service::proto::GetChildGeographiesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ExecuteGetChildGeographies(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_ExecuteInsertLocationWithoutBoundary : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_ExecuteInsertLocationWithoutBoundary() {
      ::grpc::Service::MarkMethodRawCallback(25,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->ExecuteInsertLocationWithoutBoundary(context, request, response); }));
    }
    ~WithRawCallbackMethod_ExecuteInsertLocationWithoutBoundary() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ExecuteInsertLocationWithoutBoundary(::grpc::ServerContext* /*context*/, const ::farm::nurture::location::service::proto::InsertLocationWithoutBoundaryRequest* /*request*/, ::farm::nurture::location::service::proto::InsertLocationWithoutBoundaryResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ExecuteInsertLocationWithoutBoundary(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_ExecuteInsertLocationWithoutBoundaryBulk : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_ExecuteInsertLocationWithoutBoundaryBulk() {
      ::grpc::Service::MarkMethodRawCallback(26,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->ExecuteInsertLocationWithoutBoundaryBulk(context, request, response); }));
    }
    ~WithRawCallbackMethod_ExecuteInsertLocationWithoutBoundaryBulk() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ExecuteInsertLocationWithoutBoundaryBulk(::grpc::ServerContext* /*context*/, const ::farm::nurture::location::service::proto::BulkInsertLocationWithoutBoundaryRequest* /*request*/, ::farm::nurture::location::service::proto::BulkInsertLocationWithoutBoundaryResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ExecuteInsertLocationWithoutBoundaryBulk(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_ExecuteUpdateLocationWithoutBoundaryById : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_ExecuteUpdateLocationWithoutBoundaryById() {
      ::grpc::Service::MarkMethodRawCallback(27,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->ExecuteUpdateLocationWithoutBoundaryById(context, request, response); }));
    }
    ~WithRawCallbackMethod_ExecuteUpdateLocationWithoutBoundaryById() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ExecuteUpdateLocationWithoutBoundaryById(::grpc::ServerContext* /*context*/, const ::farm::nurture::location::service::proto::UpdateLocationWithoutBoundaryByIdRequest* /*request*/, ::farm::nurture::location::service::proto::UpdateLocationWithoutBoundaryByIdResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ExecuteUpdateLocationWithoutBoundaryById(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_ExecuteUpdateLocationWithoutBoundaryByIdBulk : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_ExecuteUpdateLocationWithoutBoundaryByIdBulk() {
      ::grpc::Service::MarkMethodRawCallback(28,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->ExecuteUpdateLocationWithoutBoundaryByIdBulk(context, request, response); }));
    }
    ~WithRawCallbackMethod_ExecuteUpdateLocationWithoutBoundaryByIdBulk() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ExecuteUpdateLocationWithoutBoundaryByIdBulk(::grpc::ServerContext* /*context*/, const ::farm::nurture::location::service::proto::BulkUpdateLocationWithoutBoundaryByIdRequest* /*request*/, ::farm::nurture::location::service::proto::BulkUpdateLocationWithoutBoundaryByIdResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ExecuteUpdateLocationWithoutBoundaryByIdBulk(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_ExecuteDeleteLocationById : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_ExecuteDeleteLocationById() {
      ::grpc::Service::MarkMethodRawCallback(29,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->ExecuteDeleteLocationById(context, request, response); }));
    }
    ~WithRawCallbackMethod_ExecuteDeleteLocationById() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ExecuteDeleteLocationById(::grpc::ServerContext* /*context*/, const ::farm::nurture::location::service::proto::DeleteLocationByIdRequest* /*request*/, ::farm::nurture::location::service::proto::DeleteLocationByIdResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ExecuteDeleteLocationById(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_ExecuteDeleteLocationByIdBulk : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_ExecuteDeleteLocationByIdBulk() {
      ::grpc::Service::MarkMethodRawCallback(30,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->ExecuteDeleteLocationByIdBulk(context, request, response); }));
    }
    ~WithRawCallbackMethod_ExecuteDeleteLocationByIdBulk() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ExecuteDeleteLocationByIdBulk(::grpc::ServerContext* /*context*/, const ::farm::nurture::location::service::proto::BulkDeleteLocationByIdRequest* /*request*/, ::farm::nurture::location::service::proto::BulkDeleteLocationByIdResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ExecuteDeleteLocationByIdBulk(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_Execute : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_Execute() {
      ::grpc::Service::MarkMethodRawCallback(31,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->Execute(context, request, response); }));
    }
    ~WithRawCallbackMethod_Execute() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Execute(::grpc::ServerContext* /*context*/, const ::farm::nurture::location::service::proto::MultiRequests* /*request*/, ::farm::nurture::location::service::proto::MultiResponses* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* Execute(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ExecuteInsertLocation : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_ExecuteInsertLocation() {
      ::grpc::Service::MarkMethodStreamed(0,
        new ::grpc::internal::StreamedUnaryHandler<
          ::farm::nurture::location::service::proto::InsertLocationRequest, ::farm::nurture::location::service::proto::InsertLocationResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::farm::nurture::location::service::proto::InsertLocationRequest, ::farm::nurture::location::service::proto::InsertLocationResponse>* streamer) {
                       return this->StreamedExecuteInsertLocation(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_ExecuteInsertLocation() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ExecuteInsertLocation(::grpc::ServerContext* /*context*/, const ::farm::nurture::location::service::proto::InsertLocationRequest* /*request*/, ::farm::nurture::location::service::proto::InsertLocationResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedExecuteInsertLocation(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::farm::nurture::location::service::proto::InsertLocationRequest,::farm::nurture::location::service::proto::InsertLocationResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ExecuteInsertLocationBulk : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_ExecuteInsertLocationBulk() {
      ::grpc::Service::MarkMethodStreamed(1,
        new ::grpc::internal::StreamedUnaryHandler<
          ::farm::nurture::location::service::proto::BulkInsertLocationRequest, ::farm::nurture::location::service::proto::BulkInsertLocationResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::farm::nurture::location::service::proto::BulkInsertLocationRequest, ::farm::nurture::location::service::proto::BulkInsertLocationResponse>* streamer) {
                       return this->StreamedExecuteInsertLocationBulk(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_ExecuteInsertLocationBulk() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ExecuteInsertLocationBulk(::grpc::ServerContext* /*context*/, const ::farm::nurture::location::service::proto::BulkInsertLocationRequest* /*request*/, ::farm::nurture::location::service::proto::BulkInsertLocationResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedExecuteInsertLocationBulk(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::farm::nurture::location::service::proto::BulkInsertLocationRequest,::farm::nurture::location::service::proto::BulkInsertLocationResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ExecuteInsertLocationS2Cell : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_ExecuteInsertLocationS2Cell() {
      ::grpc::Service::MarkMethodStreamed(2,
        new ::grpc::internal::StreamedUnaryHandler<
          ::farm::nurture::location::service::proto::InsertLocationS2CellRequest, ::farm::nurture::location::service::proto::InsertLocationS2CellResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::farm::nurture::location::service::proto::InsertLocationS2CellRequest, ::farm::nurture::location::service::proto::InsertLocationS2CellResponse>* streamer) {
                       return this->StreamedExecuteInsertLocationS2Cell(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_ExecuteInsertLocationS2Cell() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ExecuteInsertLocationS2Cell(::grpc::ServerContext* /*context*/, const ::farm::nurture::location::service::proto::InsertLocationS2CellRequest* /*request*/, ::farm::nurture::location::service::proto::InsertLocationS2CellResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedExecuteInsertLocationS2Cell(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::farm::nurture::location::service::proto::InsertLocationS2CellRequest,::farm::nurture::location::service::proto::InsertLocationS2CellResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ExecuteInsertLocationS2CellBulk : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_ExecuteInsertLocationS2CellBulk() {
      ::grpc::Service::MarkMethodStreamed(3,
        new ::grpc::internal::StreamedUnaryHandler<
          ::farm::nurture::location::service::proto::BulkInsertLocationS2CellRequest, ::farm::nurture::location::service::proto::BulkInsertLocationS2CellResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::farm::nurture::location::service::proto::BulkInsertLocationS2CellRequest, ::farm::nurture::location::service::proto::BulkInsertLocationS2CellResponse>* streamer) {
                       return this->StreamedExecuteInsertLocationS2CellBulk(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_ExecuteInsertLocationS2CellBulk() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ExecuteInsertLocationS2CellBulk(::grpc::ServerContext* /*context*/, const ::farm::nurture::location::service::proto::BulkInsertLocationS2CellRequest* /*request*/, ::farm::nurture::location::service::proto::BulkInsertLocationS2CellResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedExecuteInsertLocationS2CellBulk(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::farm::nurture::location::service::proto::BulkInsertLocationS2CellRequest,::farm::nurture::location::service::proto::BulkInsertLocationS2CellResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ExecuteInsertConfig : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_ExecuteInsertConfig() {
      ::grpc::Service::MarkMethodStreamed(4,
        new ::grpc::internal::StreamedUnaryHandler<
          ::farm::nurture::location::service::proto::InsertConfigRequest, ::farm::nurture::location::service::proto::InsertConfigResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::farm::nurture::location::service::proto::InsertConfigRequest, ::farm::nurture::location::service::proto::InsertConfigResponse>* streamer) {
                       return this->StreamedExecuteInsertConfig(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_ExecuteInsertConfig() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ExecuteInsertConfig(::grpc::ServerContext* /*context*/, const ::farm::nurture::location::service::proto::InsertConfigRequest* /*request*/, ::farm::nurture::location::service::proto::InsertConfigResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedExecuteInsertConfig(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::farm::nurture::location::service::proto::InsertConfigRequest,::farm::nurture::location::service::proto::InsertConfigResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ExecuteInsertConfigBulk : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_ExecuteInsertConfigBulk() {
      ::grpc::Service::MarkMethodStreamed(5,
        new ::grpc::internal::StreamedUnaryHandler<
          ::farm::nurture::location::service::proto::BulkInsertConfigRequest, ::farm::nurture::location::service::proto::BulkInsertConfigResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::farm::nurture::location::service::proto::BulkInsertConfigRequest, ::farm::nurture::location::service::proto::BulkInsertConfigResponse>* streamer) {
                       return this->StreamedExecuteInsertConfigBulk(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_ExecuteInsertConfigBulk() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ExecuteInsertConfigBulk(::grpc::ServerContext* /*context*/, const ::farm::nurture::location::service::proto::BulkInsertConfigRequest* /*request*/, ::farm::nurture::location::service::proto::BulkInsertConfigResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedExecuteInsertConfigBulk(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::farm::nurture::location::service::proto::BulkInsertConfigRequest,::farm::nurture::location::service::proto::BulkInsertConfigResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ExecuteFetchLocationById : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_ExecuteFetchLocationById() {
      ::grpc::Service::MarkMethodStreamed(6,
        new ::grpc::internal::StreamedUnaryHandler<
          ::farm::nurture::location::service::proto::FetchLocationByIdRequest, ::farm::nurture::location::service::proto::Location>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::farm::nurture::location::service::proto::FetchLocationByIdRequest, ::farm::nurture::location::service::proto::Location>* streamer) {
                       return this->StreamedExecuteFetchLocationById(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_ExecuteFetchLocationById() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ExecuteFetchLocationById(::grpc::ServerContext* /*context*/, const ::farm::nurture::location::service::proto::FetchLocationByIdRequest* /*request*/, ::farm::nurture::location::service::proto::Location* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedExecuteFetchLocationById(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::farm::nurture::location::service::proto::FetchLocationByIdRequest,::farm::nurture::location::service::proto::Location>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ExecuteFetchLocationByCodeAndNamespace : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_ExecuteFetchLocationByCodeAndNamespace() {
      ::grpc::Service::MarkMethodStreamed(7,
        new ::grpc::internal::StreamedUnaryHandler<
          ::farm::nurture::location::service::proto::FetchLocationByCodeAndNamespaceRequest, ::farm::nurture::location::service::proto::Location>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::farm::nurture::location::service::proto::FetchLocationByCodeAndNamespaceRequest, ::farm::nurture::location::service::proto::Location>* streamer) {
                       return this->StreamedExecuteFetchLocationByCodeAndNamespace(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_ExecuteFetchLocationByCodeAndNamespace() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ExecuteFetchLocationByCodeAndNamespace(::grpc::ServerContext* /*context*/, const ::farm::nurture::location::service::proto::FetchLocationByCodeAndNamespaceRequest* /*request*/, ::farm::nurture::location::service::proto::Location* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedExecuteFetchLocationByCodeAndNamespace(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::farm::nurture::location::service::proto::FetchLocationByCodeAndNamespaceRequest,::farm::nurture::location::service::proto::Location>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ExecuteFetchS2CellById : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_ExecuteFetchS2CellById() {
      ::grpc::Service::MarkMethodStreamed(8,
        new ::grpc::internal::StreamedUnaryHandler<
          ::farm::nurture::location::service::proto::FetchS2CellByIdRequest, ::farm::nurture::location::service::proto::S2Cell>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::farm::nurture::location::service::proto::FetchS2CellByIdRequest, ::farm::nurture::location::service::proto::S2Cell>* streamer) {
                       return this->StreamedExecuteFetchS2CellById(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_ExecuteFetchS2CellById() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ExecuteFetchS2CellById(::grpc::ServerContext* /*context*/, const ::farm::nurture::location::service::proto::FetchS2CellByIdRequest* /*request*/, ::farm::nurture::location::service::proto::S2Cell* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedExecuteFetchS2CellById(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::farm::nurture::location::service::proto::FetchS2CellByIdRequest,::farm::nurture::location::service::proto::S2Cell>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ExecuteFetchS2CellByLocation : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_ExecuteFetchS2CellByLocation() {
      ::grpc::Service::MarkMethodStreamed(9,
        new ::grpc::internal::StreamedUnaryHandler<
          ::farm::nurture::location::service::proto::FetchS2CellByLocationRequest, ::farm::nurture::location::service::proto::S2Cell>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::farm::nurture::location::service::proto::FetchS2CellByLocationRequest, ::farm::nurture::location::service::proto::S2Cell>* streamer) {
                       return this->StreamedExecuteFetchS2CellByLocation(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_ExecuteFetchS2CellByLocation() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ExecuteFetchS2CellByLocation(::grpc::ServerContext* /*context*/, const ::farm::nurture::location::service::proto::FetchS2CellByLocationRequest* /*request*/, ::farm::nurture::location::service::proto::S2Cell* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedExecuteFetchS2CellByLocation(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::farm::nurture::location::service::proto::FetchS2CellByLocationRequest,::farm::nurture::location::service::proto::S2Cell>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ExecuteFetchS2CellByLocationId : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_ExecuteFetchS2CellByLocationId() {
      ::grpc::Service::MarkMethodStreamed(10,
        new ::grpc::internal::StreamedUnaryHandler<
          ::farm::nurture::location::service::proto::FetchS2CellByLocationIdRequest, ::farm::nurture::location::service::proto::LocationS2Cells>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::farm::nurture::location::service::proto::FetchS2CellByLocationIdRequest, ::farm::nurture::location::service::proto::LocationS2Cells>* streamer) {
                       return this->StreamedExecuteFetchS2CellByLocationId(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_ExecuteFetchS2CellByLocationId() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ExecuteFetchS2CellByLocationId(::grpc::ServerContext* /*context*/, const ::farm::nurture::location::service::proto::FetchS2CellByLocationIdRequest* /*request*/, ::farm::nurture::location::service::proto::LocationS2Cells* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedExecuteFetchS2CellByLocationId(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::farm::nurture::location::service::proto::FetchS2CellByLocationIdRequest,::farm::nurture::location::service::proto::LocationS2Cells>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ExecuteUpdateLocationById : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_ExecuteUpdateLocationById() {
      ::grpc::Service::MarkMethodStreamed(11,
        new ::grpc::internal::StreamedUnaryHandler<
          ::farm::nurture::location::service::proto::UpdateLocationByIdRequest, ::farm::nurture::location::service::proto::UpdateLocationByIdResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::farm::nurture::location::service::proto::UpdateLocationByIdRequest, ::farm::nurture::location::service::proto::UpdateLocationByIdResponse>* streamer) {
                       return this->StreamedExecuteUpdateLocationById(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_ExecuteUpdateLocationById() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ExecuteUpdateLocationById(::grpc::ServerContext* /*context*/, const ::farm::nurture::location::service::proto::UpdateLocationByIdRequest* /*request*/, ::farm::nurture::location::service::proto::UpdateLocationByIdResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedExecuteUpdateLocationById(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::farm::nurture::location::service::proto::UpdateLocationByIdRequest,::farm::nurture::location::service::proto::UpdateLocationByIdResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ExecuteUpdateLocationByIdBulk : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_ExecuteUpdateLocationByIdBulk() {
      ::grpc::Service::MarkMethodStreamed(12,
        new ::grpc::internal::StreamedUnaryHandler<
          ::farm::nurture::location::service::proto::BulkUpdateLocationByIdRequest, ::farm::nurture::location::service::proto::BulkUpdateLocationByIdResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::farm::nurture::location::service::proto::BulkUpdateLocationByIdRequest, ::farm::nurture::location::service::proto::BulkUpdateLocationByIdResponse>* streamer) {
                       return this->StreamedExecuteUpdateLocationByIdBulk(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_ExecuteUpdateLocationByIdBulk() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ExecuteUpdateLocationByIdBulk(::grpc::ServerContext* /*context*/, const ::farm::nurture::location::service::proto::BulkUpdateLocationByIdRequest* /*request*/, ::farm::nurture::location::service::proto::BulkUpdateLocationByIdResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedExecuteUpdateLocationByIdBulk(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::farm::nurture::location::service::proto::BulkUpdateLocationByIdRequest,::farm::nurture::location::service::proto::BulkUpdateLocationByIdResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ExecuteUpdateLocationLabelById : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_ExecuteUpdateLocationLabelById() {
      ::grpc::Service::MarkMethodStreamed(13,
        new ::grpc::internal::StreamedUnaryHandler<
          ::farm::nurture::location::service::proto::UpdateLocationLabelByIdRequest, ::farm::nurture::location::service::proto::UpdateLocationLabelByIdResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::farm::nurture::location::service::proto::UpdateLocationLabelByIdRequest, ::farm::nurture::location::service::proto::UpdateLocationLabelByIdResponse>* streamer) {
                       return this->StreamedExecuteUpdateLocationLabelById(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_ExecuteUpdateLocationLabelById() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ExecuteUpdateLocationLabelById(::grpc::ServerContext* /*context*/, const ::farm::nurture::location::service::proto::UpdateLocationLabelByIdRequest* /*request*/, ::farm::nurture::location::service::proto::UpdateLocationLabelByIdResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedExecuteUpdateLocationLabelById(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::farm::nurture::location::service::proto::UpdateLocationLabelByIdRequest,::farm::nurture::location::service::proto::UpdateLocationLabelByIdResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ExecuteUpdateLocationLabelByIdBulk : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_ExecuteUpdateLocationLabelByIdBulk() {
      ::grpc::Service::MarkMethodStreamed(14,
        new ::grpc::internal::StreamedUnaryHandler<
          ::farm::nurture::location::service::proto::BulkUpdateLocationLabelByIdRequest, ::farm::nurture::location::service::proto::BulkUpdateLocationLabelByIdResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::farm::nurture::location::service::proto::BulkUpdateLocationLabelByIdRequest, ::farm::nurture::location::service::proto::BulkUpdateLocationLabelByIdResponse>* streamer) {
                       return this->StreamedExecuteUpdateLocationLabelByIdBulk(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_ExecuteUpdateLocationLabelByIdBulk() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ExecuteUpdateLocationLabelByIdBulk(::grpc::ServerContext* /*context*/, const ::farm::nurture::location::service::proto::BulkUpdateLocationLabelByIdRequest* /*request*/, ::farm::nurture::location::service::proto::BulkUpdateLocationLabelByIdResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedExecuteUpdateLocationLabelByIdBulk(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::farm::nurture::location::service::proto::BulkUpdateLocationLabelByIdRequest,::farm::nurture::location::service::proto::BulkUpdateLocationLabelByIdResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ExecuteUpdateDeleteS2CellByLocation : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_ExecuteUpdateDeleteS2CellByLocation() {
      ::grpc::Service::MarkMethodStreamed(15,
        new ::grpc::internal::StreamedUnaryHandler<
          ::farm::nurture::location::service::proto::UpdateDeleteS2CellByLocationRequest, ::farm::nurture::location::service::proto::UpdateDeleteS2CellByLocationResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::farm::nurture::location::service::proto::UpdateDeleteS2CellByLocationRequest, ::farm::nurture::location::service::proto::UpdateDeleteS2CellByLocationResponse>* streamer) {
                       return this->StreamedExecuteUpdateDeleteS2CellByLocation(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_ExecuteUpdateDeleteS2CellByLocation() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ExecuteUpdateDeleteS2CellByLocation(::grpc::ServerContext* /*context*/, const ::farm::nurture::location::service::proto::UpdateDeleteS2CellByLocationRequest* /*request*/, ::farm::nurture::location::service::proto::UpdateDeleteS2CellByLocationResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedExecuteUpdateDeleteS2CellByLocation(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::farm::nurture::location::service::proto::UpdateDeleteS2CellByLocationRequest,::farm::nurture::location::service::proto::UpdateDeleteS2CellByLocationResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ExecuteUpdateDeleteS2CellByLocationBulk : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_ExecuteUpdateDeleteS2CellByLocationBulk() {
      ::grpc::Service::MarkMethodStreamed(16,
        new ::grpc::internal::StreamedUnaryHandler<
          ::farm::nurture::location::service::proto::BulkUpdateDeleteS2CellByLocationRequest, ::farm::nurture::location::service::proto::BulkUpdateDeleteS2CellByLocationResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::farm::nurture::location::service::proto::BulkUpdateDeleteS2CellByLocationRequest, ::farm::nurture::location::service::proto::BulkUpdateDeleteS2CellByLocationResponse>* streamer) {
                       return this->StreamedExecuteUpdateDeleteS2CellByLocationBulk(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_ExecuteUpdateDeleteS2CellByLocationBulk() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ExecuteUpdateDeleteS2CellByLocationBulk(::grpc::ServerContext* /*context*/, const ::farm::nurture::location::service::proto::BulkUpdateDeleteS2CellByLocationRequest* /*request*/, ::farm::nurture::location::service::proto::BulkUpdateDeleteS2CellByLocationResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedExecuteUpdateDeleteS2CellByLocationBulk(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::farm::nurture::location::service::proto::BulkUpdateDeleteS2CellByLocationRequest,::farm::nurture::location::service::proto::BulkUpdateDeleteS2CellByLocationResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ExecuteFetchConfigById : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_ExecuteFetchConfigById() {
      ::grpc::Service::MarkMethodStreamed(17,
        new ::grpc::internal::StreamedUnaryHandler<
          ::farm::nurture::location::service::proto::FetchConfigByIdRequest, ::farm::nurture::location::service::proto::Config>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::farm::nurture::location::service::proto::FetchConfigByIdRequest, ::farm::nurture::location::service::proto::Config>* streamer) {
                       return this->StreamedExecuteFetchConfigById(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_ExecuteFetchConfigById() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ExecuteFetchConfigById(::grpc::ServerContext* /*context*/, const ::farm::nurture::location::service::proto::FetchConfigByIdRequest* /*request*/, ::farm::nurture::location::service::proto::Config* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedExecuteFetchConfigById(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::farm::nurture::location::service::proto::FetchConfigByIdRequest,::farm::nurture::location::service::proto::Config>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ExecuteAddLocation : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_ExecuteAddLocation() {
      ::grpc::Service::MarkMethodStreamed(18,
        new ::grpc::internal::StreamedUnaryHandler<
          ::farm::nurture::location::service::proto::AddLocationRequest, ::farm::nurture::location::service::proto::AddLocationResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::farm::nurture::location::service::proto::AddLocationRequest, ::farm::nurture::location::service::proto::AddLocationResponse>* streamer) {
                       return this->StreamedExecuteAddLocation(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_ExecuteAddLocation() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ExecuteAddLocation(::grpc::ServerContext* /*context*/, const ::farm::nurture::location::service::proto::AddLocationRequest* /*request*/, ::farm::nurture::location::service::proto::AddLocationResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedExecuteAddLocation(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::farm::nurture::location::service::proto::AddLocationRequest,::farm::nurture::location::service::proto::AddLocationResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ExecuteAddLocationBulk : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_ExecuteAddLocationBulk() {
      ::grpc::Service::MarkMethodStreamed(19,
        new ::grpc::internal::StreamedUnaryHandler<
          ::farm::nurture::location::service::proto::BulkAddLocationRequest, ::farm::nurture::location::service::proto::BulkAddLocationResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::farm::nurture::location::service::proto::BulkAddLocationRequest, ::farm::nurture::location::service::proto::BulkAddLocationResponse>* streamer) {
                       return this->StreamedExecuteAddLocationBulk(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_ExecuteAddLocationBulk() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ExecuteAddLocationBulk(::grpc::ServerContext* /*context*/, const ::farm::nurture::location::service::proto::BulkAddLocationRequest* /*request*/, ::farm::nurture::location::service::proto::BulkAddLocationResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedExecuteAddLocationBulk(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::farm::nurture::location::service::proto::BulkAddLocationRequest,::farm::nurture::location::service::proto::BulkAddLocationResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ExecuteUpdateLocation : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_ExecuteUpdateLocation() {
      ::grpc::Service::MarkMethodStreamed(20,
        new ::grpc::internal::StreamedUnaryHandler<
          ::farm::nurture::location::service::proto::UpdateLocationRequest, ::farm::nurture::location::service::proto::UpdateLocationResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::farm::nurture::location::service::proto::UpdateLocationRequest, ::farm::nurture::location::service::proto::UpdateLocationResponse>* streamer) {
                       return this->StreamedExecuteUpdateLocation(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_ExecuteUpdateLocation() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ExecuteUpdateLocation(::grpc::ServerContext* /*context*/, const ::farm::nurture::location::service::proto::UpdateLocationRequest* /*request*/, ::farm::nurture::location::service::proto::UpdateLocationResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedExecuteUpdateLocation(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::farm::nurture::location::service::proto::UpdateLocationRequest,::farm::nurture::location::service::proto::UpdateLocationResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ExecuteUpdateLocationBulk : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_ExecuteUpdateLocationBulk() {
      ::grpc::Service::MarkMethodStreamed(21,
        new ::grpc::internal::StreamedUnaryHandler<
          ::farm::nurture::location::service::proto::BulkUpdateLocationRequest, ::farm::nurture::location::service::proto::BulkUpdateLocationResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::farm::nurture::location::service::proto::BulkUpdateLocationRequest, ::farm::nurture::location::service::proto::BulkUpdateLocationResponse>* streamer) {
                       return this->StreamedExecuteUpdateLocationBulk(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_ExecuteUpdateLocationBulk() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ExecuteUpdateLocationBulk(::grpc::ServerContext* /*context*/, const ::farm::nurture::location::service::proto::BulkUpdateLocationRequest* /*request*/, ::farm::nurture::location::service::proto::BulkUpdateLocationResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedExecuteUpdateLocationBulk(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::farm::nurture::location::service::proto::BulkUpdateLocationRequest,::farm::nurture::location::service::proto::BulkUpdateLocationResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ExecuteGetLocationsWithBoundary : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_ExecuteGetLocationsWithBoundary() {
      ::grpc::Service::MarkMethodStreamed(22,
        new ::grpc::internal::StreamedUnaryHandler<
          ::farm::nurture::location::service::proto::GetLocationsWithBoundaryRequest, ::farm::nurture::location::service::proto::GetLocationsWithBoundaryResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::farm::nurture::location::service::proto::GetLocationsWithBoundaryRequest, ::farm::nurture::location::service::proto::GetLocationsWithBoundaryResponse>* streamer) {
                       return this->StreamedExecuteGetLocationsWithBoundary(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_ExecuteGetLocationsWithBoundary() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ExecuteGetLocationsWithBoundary(::grpc::ServerContext* /*context*/, const ::farm::nurture::location::service::proto::GetLocationsWithBoundaryRequest* /*request*/, ::farm::nurture::location::service::proto::GetLocationsWithBoundaryResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedExecuteGetLocationsWithBoundary(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::farm::nurture::location::service::proto::GetLocationsWithBoundaryRequest,::farm::nurture::location::service::proto::GetLocationsWithBoundaryResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ExecuteGetLocations : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_ExecuteGetLocations() {
      ::grpc::Service::MarkMethodStreamed(23,
        new ::grpc::internal::StreamedUnaryHandler<
          ::farm::nurture::location::service::proto::GetLocationsRequest, ::farm::nurture::location::service::proto::GetLocationsResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::farm::nurture::location::service::proto::GetLocationsRequest, ::farm::nurture::location::service::proto::GetLocationsResponse>* streamer) {
                       return this->StreamedExecuteGetLocations(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_ExecuteGetLocations() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ExecuteGetLocations(::grpc::ServerContext* /*context*/, const ::farm::nurture::location::service::proto::GetLocationsRequest* /*request*/, ::farm::nurture::location::service::proto::GetLocationsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedExecuteGetLocations(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::farm::nurture::location::service::proto::GetLocationsRequest,::farm::nurture::location::service::proto::GetLocationsResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ExecuteGetChildGeographies : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_ExecuteGetChildGeographies() {
      ::grpc::Service::MarkMethodStreamed(24,
        new ::grpc::internal::StreamedUnaryHandler<
          ::farm::nurture::location::service::proto::GetChildGeographiesRequest, ::farm::nurture::location::service::proto::GetChildGeographiesResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::farm::nurture::location::service::proto::GetChildGeographiesRequest, ::farm::nurture::location::service::proto::GetChildGeographiesResponse>* streamer) {
                       return this->StreamedExecuteGetChildGeographies(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_ExecuteGetChildGeographies() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ExecuteGetChildGeographies(::grpc::ServerContext* /*context*/, const ::farm::nurture::location::service::proto::GetChildGeographiesRequest* /*request*/, ::farm::nurture::location::service::proto::GetChildGeographiesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedExecuteGetChildGeographies(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::farm::nurture::location::service::proto::GetChildGeographiesRequest,::farm::nurture::location::service::proto::GetChildGeographiesResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ExecuteInsertLocationWithoutBoundary : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_ExecuteInsertLocationWithoutBoundary() {
      ::grpc::Service::MarkMethodStreamed(25,
        new ::grpc::internal::StreamedUnaryHandler<
          ::farm::nurture::location::service::proto::InsertLocationWithoutBoundaryRequest, ::farm::nurture::location::service::proto::InsertLocationWithoutBoundaryResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::farm::nurture::location::service::proto::InsertLocationWithoutBoundaryRequest, ::farm::nurture::location::service::proto::InsertLocationWithoutBoundaryResponse>* streamer) {
                       return this->StreamedExecuteInsertLocationWithoutBoundary(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_ExecuteInsertLocationWithoutBoundary() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ExecuteInsertLocationWithoutBoundary(::grpc::ServerContext* /*context*/, const ::farm::nurture::location::service::proto::InsertLocationWithoutBoundaryRequest* /*request*/, ::farm::nurture::location::service::proto::InsertLocationWithoutBoundaryResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedExecuteInsertLocationWithoutBoundary(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::farm::nurture::location::service::proto::InsertLocationWithoutBoundaryRequest,::farm::nurture::location::service::proto::InsertLocationWithoutBoundaryResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ExecuteInsertLocationWithoutBoundaryBulk : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_ExecuteInsertLocationWithoutBoundaryBulk() {
      ::grpc::Service::MarkMethodStreamed(26,
        new ::grpc::internal::StreamedUnaryHandler<
          ::farm::nurture::location::service::proto::BulkInsertLocationWithoutBoundaryRequest, ::farm::nurture::location::service::proto::BulkInsertLocationWithoutBoundaryResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::farm::nurture::location::service::proto::BulkInsertLocationWithoutBoundaryRequest, ::farm::nurture::location::service::proto::BulkInsertLocationWithoutBoundaryResponse>* streamer) {
                       return this->StreamedExecuteInsertLocationWithoutBoundaryBulk(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_ExecuteInsertLocationWithoutBoundaryBulk() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ExecuteInsertLocationWithoutBoundaryBulk(::grpc::ServerContext* /*context*/, const ::farm::nurture::location::service::proto::BulkInsertLocationWithoutBoundaryRequest* /*request*/, ::farm::nurture::location::service::proto::BulkInsertLocationWithoutBoundaryResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedExecuteInsertLocationWithoutBoundaryBulk(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::farm::nurture::location::service::proto::BulkInsertLocationWithoutBoundaryRequest,::farm::nurture::location::service::proto::BulkInsertLocationWithoutBoundaryResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ExecuteUpdateLocationWithoutBoundaryById : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_ExecuteUpdateLocationWithoutBoundaryById() {
      ::grpc::Service::MarkMethodStreamed(27,
        new ::grpc::internal::StreamedUnaryHandler<
          ::farm::nurture::location::service::proto::UpdateLocationWithoutBoundaryByIdRequest, ::farm::nurture::location::service::proto::UpdateLocationWithoutBoundaryByIdResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::farm::nurture::location::service::proto::UpdateLocationWithoutBoundaryByIdRequest, ::farm::nurture::location::service::proto::UpdateLocationWithoutBoundaryByIdResponse>* streamer) {
                       return this->StreamedExecuteUpdateLocationWithoutBoundaryById(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_ExecuteUpdateLocationWithoutBoundaryById() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ExecuteUpdateLocationWithoutBoundaryById(::grpc::ServerContext* /*context*/, const ::farm::nurture::location::service::proto::UpdateLocationWithoutBoundaryByIdRequest* /*request*/, ::farm::nurture::location::service::proto::UpdateLocationWithoutBoundaryByIdResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedExecuteUpdateLocationWithoutBoundaryById(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::farm::nurture::location::service::proto::UpdateLocationWithoutBoundaryByIdRequest,::farm::nurture::location::service::proto::UpdateLocationWithoutBoundaryByIdResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ExecuteUpdateLocationWithoutBoundaryByIdBulk : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_ExecuteUpdateLocationWithoutBoundaryByIdBulk() {
      ::grpc::Service::MarkMethodStreamed(28,
        new ::grpc::internal::StreamedUnaryHandler<
          ::farm::nurture::location::service::proto::BulkUpdateLocationWithoutBoundaryByIdRequest, ::farm::nurture::location::service::proto::BulkUpdateLocationWithoutBoundaryByIdResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::farm::nurture::location::service::proto::BulkUpdateLocationWithoutBoundaryByIdRequest, ::farm::nurture::location::service::proto::BulkUpdateLocationWithoutBoundaryByIdResponse>* streamer) {
                       return this->StreamedExecuteUpdateLocationWithoutBoundaryByIdBulk(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_ExecuteUpdateLocationWithoutBoundaryByIdBulk() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ExecuteUpdateLocationWithoutBoundaryByIdBulk(::grpc::ServerContext* /*context*/, const ::farm::nurture::location::service::proto::BulkUpdateLocationWithoutBoundaryByIdRequest* /*request*/, ::farm::nurture::location::service::proto::BulkUpdateLocationWithoutBoundaryByIdResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedExecuteUpdateLocationWithoutBoundaryByIdBulk(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::farm::nurture::location::service::proto::BulkUpdateLocationWithoutBoundaryByIdRequest,::farm::nurture::location::service::proto::BulkUpdateLocationWithoutBoundaryByIdResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ExecuteDeleteLocationById : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_ExecuteDeleteLocationById() {
      ::grpc::Service::MarkMethodStreamed(29,
        new ::grpc::internal::StreamedUnaryHandler<
          ::farm::nurture::location::service::proto::DeleteLocationByIdRequest, ::farm::nurture::location::service::proto::DeleteLocationByIdResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::farm::nurture::location::service::proto::DeleteLocationByIdRequest, ::farm::nurture::location::service::proto::DeleteLocationByIdResponse>* streamer) {
                       return this->StreamedExecuteDeleteLocationById(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_ExecuteDeleteLocationById() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ExecuteDeleteLocationById(::grpc::ServerContext* /*context*/, const ::farm::nurture::location::service::proto::DeleteLocationByIdRequest* /*request*/, ::farm::nurture::location::service::proto::DeleteLocationByIdResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedExecuteDeleteLocationById(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::farm::nurture::location::service::proto::DeleteLocationByIdRequest,::farm::nurture::location::service::proto::DeleteLocationByIdResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ExecuteDeleteLocationByIdBulk : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_ExecuteDeleteLocationByIdBulk() {
      ::grpc::Service::MarkMethodStreamed(30,
        new ::grpc::internal::StreamedUnaryHandler<
          ::farm::nurture::location::service::proto::BulkDeleteLocationByIdRequest, ::farm::nurture::location::service::proto::BulkDeleteLocationByIdResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::farm::nurture::location::service::proto::BulkDeleteLocationByIdRequest, ::farm::nurture::location::service::proto::BulkDeleteLocationByIdResponse>* streamer) {
                       return this->StreamedExecuteDeleteLocationByIdBulk(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_ExecuteDeleteLocationByIdBulk() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ExecuteDeleteLocationByIdBulk(::grpc::ServerContext* /*context*/, const ::farm::nurture::location::service::proto::BulkDeleteLocationByIdRequest* /*request*/, ::farm::nurture::location::service::proto::BulkDeleteLocationByIdResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedExecuteDeleteLocationByIdBulk(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::farm::nurture::location::service::proto::BulkDeleteLocationByIdRequest,::farm::nurture::location::service::proto::BulkDeleteLocationByIdResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_Execute : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_Execute() {
      ::grpc::Service::MarkMethodStreamed(31,
        new ::grpc::internal::StreamedUnaryHandler<
          ::farm::nurture::location::service::proto::MultiRequests, ::farm::nurture::location::service::proto::MultiResponses>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::farm::nurture::location::service::proto::MultiRequests, ::farm::nurture::location::service::proto::MultiResponses>* streamer) {
                       return this->StreamedExecute(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_Execute() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status Execute(::grpc::ServerContext* /*context*/, const ::farm::nurture::location::service::proto::MultiRequests* /*request*/, ::farm::nurture::location::service::proto::MultiResponses* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedExecute(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::farm::nurture::location::service::proto::MultiRequests,::farm::nurture::location::service::proto::MultiResponses>* server_unary_streamer) = 0;
  };
  typedef WithStreamedUnaryMethod_ExecuteInsertLocation<WithStreamedUnaryMethod_ExecuteInsertLocationBulk<WithStreamedUnaryMethod_ExecuteInsertLocationS2Cell<WithStreamedUnaryMethod_ExecuteInsertLocationS2CellBulk<WithStreamedUnaryMethod_ExecuteInsertConfig<WithStreamedUnaryMethod_ExecuteInsertConfigBulk<WithStreamedUnaryMethod_ExecuteFetchLocationById<WithStreamedUnaryMethod_ExecuteFetchLocationByCodeAndNamespace<WithStreamedUnaryMethod_ExecuteFetchS2CellById<WithStreamedUnaryMethod_ExecuteFetchS2CellByLocation<WithStreamedUnaryMethod_ExecuteFetchS2CellByLocationId<WithStreamedUnaryMethod_ExecuteUpdateLocationById<WithStreamedUnaryMethod_ExecuteUpdateLocationByIdBulk<WithStreamedUnaryMethod_ExecuteUpdateLocationLabelById<WithStreamedUnaryMethod_ExecuteUpdateLocationLabelByIdBulk<WithStreamedUnaryMethod_ExecuteUpdateDeleteS2CellByLocation<WithStreamedUnaryMethod_ExecuteUpdateDeleteS2CellByLocationBulk<WithStreamedUnaryMethod_ExecuteFetchConfigById<WithStreamedUnaryMethod_ExecuteAddLocation<WithStreamedUnaryMethod_ExecuteAddLocationBulk<WithStreamedUnaryMethod_ExecuteUpdateLocation<WithStreamedUnaryMethod_ExecuteUpdateLocationBulk<WithStreamedUnaryMethod_ExecuteGetLocationsWithBoundary<WithStreamedUnaryMethod_ExecuteGetLocations<WithStreamedUnaryMethod_ExecuteGetChildGeographies<WithStreamedUnaryMethod_ExecuteInsertLocationWithoutBoundary<WithStreamedUnaryMethod_ExecuteInsertLocationWithoutBoundaryBulk<WithStreamedUnaryMethod_ExecuteUpdateLocationWithoutBoundaryById<WithStreamedUnaryMethod_ExecuteUpdateLocationWithoutBoundaryByIdBulk<WithStreamedUnaryMethod_ExecuteDeleteLocationById<WithStreamedUnaryMethod_ExecuteDeleteLocationByIdBulk<WithStreamedUnaryMethod_Execute<Service > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > StreamedUnaryService;
  typedef Service SplitStreamedService;
  typedef WithStreamedUnaryMethod_ExecuteInsertLocation<WithStreamedUnaryMethod_ExecuteInsertLocationBulk<WithStreamedUnaryMethod_ExecuteInsertLocationS2Cell<WithStreamedUnaryMethod_ExecuteInsertLocationS2CellBulk<WithStreamedUnaryMethod_ExecuteInsertConfig<WithStreamedUnaryMethod_ExecuteInsertConfigBulk<WithStreamedUnaryMethod_ExecuteFetchLocationById<WithStreamedUnaryMethod_ExecuteFetchLocationByCodeAndNamespace<WithStreamedUnaryMethod_ExecuteFetchS2CellById<WithStreamedUnaryMethod_ExecuteFetchS2CellByLocation<WithStreamedUnaryMethod_ExecuteFetchS2CellByLocationId<WithStreamedUnaryMethod_ExecuteUpdateLocationById<WithStreamedUnaryMethod_ExecuteUpdateLocationByIdBulk<WithStreamedUnaryMethod_ExecuteUpdateLocationLabelById<WithStreamedUnaryMethod_ExecuteUpdateLocationLabelByIdBulk<WithStreamedUnaryMethod_ExecuteUpdateDeleteS2CellByLocation<WithStreamedUnaryMethod_ExecuteUpdateDeleteS2CellByLocationBulk<WithStreamedUnaryMethod_ExecuteFetchConfigById<WithStreamedUnaryMethod_ExecuteAddLocation<WithStreamedUnaryMethod_ExecuteAddLocationBulk<WithStreamedUnaryMethod_ExecuteUpdateLocation<WithStreamedUnaryMethod_ExecuteUpdateLocationBulk<WithStreamedUnaryMethod_ExecuteGetLocationsWithBoundary<WithStreamedUnaryMethod_ExecuteGetLocations<WithStreamedUnaryMethod_ExecuteGetChildGeographies<WithStreamedUnaryMethod_ExecuteInsertLocationWithoutBoundary<WithStreamedUnaryMethod_ExecuteInsertLocationWithoutBoundaryBulk<WithStreamedUnaryMethod_ExecuteUpdateLocationWithoutBoundaryById<WithStreamedUnaryMethod_ExecuteUpdateLocationWithoutBoundaryByIdBulk<WithStreamedUnaryMethod_ExecuteDeleteLocationById<WithStreamedUnaryMethod_ExecuteDeleteLocationByIdBulk<WithStreamedUnaryMethod_Execute<Service > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > StreamedService;
};

}  // namespace proto
}  // namespace service
}  // namespace location
}  // namespace nurture
}  // namespace farm


#endif  // GRPC_LocationService_2flocation_5fservice_2eproto__INCLUDED
