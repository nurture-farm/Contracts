// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.14.0
// source: Common/headers.proto

package Common

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type RequestHeaders struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClientId          string           `protobuf:"bytes,1,opt,name=clientId,proto3" json:"clientId,omitempty"`
	TracingId         string           `protobuf:"bytes,2,opt,name=tracingId,proto3" json:"tracingId,omitempty"`
	TraceDetails      bool             `protobuf:"varint,3,opt,name=traceDetails,proto3" json:"traceDetails,omitempty"`
	I18N              string           `protobuf:"bytes,4,opt,name=i18N,proto3" json:"i18N,omitempty"`
	Latitude          float32          `protobuf:"fixed32,5,opt,name=latitude,proto3" json:"latitude,omitempty"`
	Longitude         float32          `protobuf:"fixed32,6,opt,name=longitude,proto3" json:"longitude,omitempty"`
	Accuracy          float32          `protobuf:"fixed32,7,opt,name=accuracy,proto3" json:"accuracy,omitempty"`
	ExperimentId      string           `protobuf:"bytes,8,opt,name=experimentId,proto3" json:"experimentId,omitempty"`
	LanguageCode      LanguageCode     `protobuf:"varint,9,opt,name=languageCode,proto3,enum=farm.nurture.core.contracts.common.LanguageCode" json:"languageCode,omitempty"`
	SecurityToken     string           `protobuf:"bytes,10,opt,name=securityToken,proto3" json:"securityToken,omitempty"`
	Attribs           []*Attribs       `protobuf:"bytes,11,rep,name=attribs,proto3" json:"attribs,omitempty"`
	PrefferedUserName string           `protobuf:"bytes,12,opt,name=prefferedUserName,proto3" json:"prefferedUserName,omitempty"`
	Language          Language         `protobuf:"varint,13,opt,name=language,proto3,enum=farm.nurture.core.contracts.common.Language" json:"language,omitempty"`
	Country           Country          `protobuf:"varint,14,opt,name=country,proto3,enum=farm.nurture.core.contracts.common.Country" json:"country,omitempty"`
	AuthToken         string           `protobuf:"bytes,15,opt,name=authToken,proto3" json:"authToken,omitempty"`
	AppToken          string           `protobuf:"bytes,16,opt,name=appToken,proto3" json:"appToken,omitempty"`
	UpdatedByEvent    *ActorEventTrace `protobuf:"bytes,17,opt,name=updatedByEvent,proto3" json:"updatedByEvent,omitempty"`
	AppType           AppType          `protobuf:"varint,18,opt,name=appType,proto3,enum=farm.nurture.core.contracts.common.AppType" json:"appType,omitempty"`
	AppVersion        int64            `protobuf:"varint,19,opt,name=appVersion,proto3" json:"appVersion,omitempty"`
	SessionId         string           `protobuf:"bytes,20,opt,name=sessionId,proto3" json:"sessionId,omitempty"`
	AppName           ClientType       `protobuf:"varint,21,opt,name=appName,proto3,enum=farm.nurture.core.contracts.common.ClientType" json:"appName,omitempty"`
	User              *ActorID         `protobuf:"bytes,22,opt,name=user,proto3" json:"user,omitempty"`
	DeviceId          string           `protobuf:"bytes,23,opt,name=deviceId,proto3" json:"deviceId,omitempty"`
}

func (x *RequestHeaders) Reset() {
	*x = RequestHeaders{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Common_headers_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestHeaders) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestHeaders) ProtoMessage() {}

func (x *RequestHeaders) ProtoReflect() protoreflect.Message {
	mi := &file_Common_headers_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestHeaders.ProtoReflect.Descriptor instead.
func (*RequestHeaders) Descriptor() ([]byte, []int) {
	return file_Common_headers_proto_rawDescGZIP(), []int{0}
}

func (x *RequestHeaders) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *RequestHeaders) GetTracingId() string {
	if x != nil {
		return x.TracingId
	}
	return ""
}

func (x *RequestHeaders) GetTraceDetails() bool {
	if x != nil {
		return x.TraceDetails
	}
	return false
}

func (x *RequestHeaders) GetI18N() string {
	if x != nil {
		return x.I18N
	}
	return ""
}

func (x *RequestHeaders) GetLatitude() float32 {
	if x != nil {
		return x.Latitude
	}
	return 0
}

func (x *RequestHeaders) GetLongitude() float32 {
	if x != nil {
		return x.Longitude
	}
	return 0
}

func (x *RequestHeaders) GetAccuracy() float32 {
	if x != nil {
		return x.Accuracy
	}
	return 0
}

func (x *RequestHeaders) GetExperimentId() string {
	if x != nil {
		return x.ExperimentId
	}
	return ""
}

func (x *RequestHeaders) GetLanguageCode() LanguageCode {
	if x != nil {
		return x.LanguageCode
	}
	return LanguageCode_NO_LANGUAGE_CODE
}

func (x *RequestHeaders) GetSecurityToken() string {
	if x != nil {
		return x.SecurityToken
	}
	return ""
}

func (x *RequestHeaders) GetAttribs() []*Attribs {
	if x != nil {
		return x.Attribs
	}
	return nil
}

func (x *RequestHeaders) GetPrefferedUserName() string {
	if x != nil {
		return x.PrefferedUserName
	}
	return ""
}

func (x *RequestHeaders) GetLanguage() Language {
	if x != nil {
		return x.Language
	}
	return Language_NO_LANGUAGE
}

func (x *RequestHeaders) GetCountry() Country {
	if x != nil {
		return x.Country
	}
	return Country_NO_COUNTRY
}

func (x *RequestHeaders) GetAuthToken() string {
	if x != nil {
		return x.AuthToken
	}
	return ""
}

func (x *RequestHeaders) GetAppToken() string {
	if x != nil {
		return x.AppToken
	}
	return ""
}

func (x *RequestHeaders) GetUpdatedByEvent() *ActorEventTrace {
	if x != nil {
		return x.UpdatedByEvent
	}
	return nil
}

func (x *RequestHeaders) GetAppType() AppType {
	if x != nil {
		return x.AppType
	}
	return AppType_NO_APP_TYPE
}

func (x *RequestHeaders) GetAppVersion() int64 {
	if x != nil {
		return x.AppVersion
	}
	return 0
}

func (x *RequestHeaders) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *RequestHeaders) GetAppName() ClientType {
	if x != nil {
		return x.AppName
	}
	return ClientType_NO_CLIENT_TYPE
}

func (x *RequestHeaders) GetUser() *ActorID {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *RequestHeaders) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

type Attribs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key   string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *Attribs) Reset() {
	*x = Attribs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Common_headers_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Attribs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Attribs) ProtoMessage() {}

func (x *Attribs) ProtoReflect() protoreflect.Message {
	mi := &file_Common_headers_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Attribs.ProtoReflect.Descriptor instead.
func (*Attribs) Descriptor() ([]byte, []int) {
	return file_Common_headers_proto_rawDescGZIP(), []int{1}
}

func (x *Attribs) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *Attribs) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type DataPlatformMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EventName    string                 `protobuf:"bytes,1,opt,name=eventName,proto3" json:"eventName,omitempty"`
	ExternalId   string                 `protobuf:"bytes,2,opt,name=externalId,proto3" json:"externalId,omitempty"`
	DpSource     DPSource               `protobuf:"varint,3,opt,name=dpSource,proto3,enum=farm.nurture.core.contracts.common.DPSource" json:"dpSource,omitempty"`
	VersionCode  int32                  `protobuf:"varint,4,opt,name=versionCode,proto3" json:"versionCode,omitempty"`
	VersionName  string                 `protobuf:"bytes,5,opt,name=versionName,proto3" json:"versionName,omitempty"`
	OsVersion    string                 `protobuf:"bytes,6,opt,name=osVersion,proto3" json:"osVersion,omitempty"`
	AppNameType  *AppNameType           `protobuf:"bytes,7,opt,name=appNameType,proto3" json:"appNameType,omitempty"`
	EventType    EventType              `protobuf:"varint,8,opt,name=eventType,proto3,enum=farm.nurture.core.contracts.common.EventType" json:"eventType,omitempty"`
	SessionId    int64                  `protobuf:"varint,9,opt,name=sessionId,proto3" json:"sessionId,omitempty"`
	Timestamp    *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Actor        *ActorID               `protobuf:"bytes,11,opt,name=actor,proto3" json:"actor,omitempty"`
	EventData    []byte                 `protobuf:"bytes,12,opt,name=eventData,proto3" json:"eventData,omitempty"`
	EventSubType EventSubType           `protobuf:"varint,13,opt,name=eventSubType,proto3,enum=farm.nurture.core.contracts.common.EventSubType" json:"eventSubType,omitempty"`
	Namespace    NameSpace              `protobuf:"varint,14,opt,name=namespace,proto3,enum=farm.nurture.core.contracts.common.NameSpace" json:"namespace,omitempty"`
	EventIndex   int32                  `protobuf:"varint,15,opt,name=eventIndex,proto3" json:"eventIndex,omitempty"`
}

func (x *DataPlatformMessage) Reset() {
	*x = DataPlatformMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Common_headers_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DataPlatformMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataPlatformMessage) ProtoMessage() {}

func (x *DataPlatformMessage) ProtoReflect() protoreflect.Message {
	mi := &file_Common_headers_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataPlatformMessage.ProtoReflect.Descriptor instead.
func (*DataPlatformMessage) Descriptor() ([]byte, []int) {
	return file_Common_headers_proto_rawDescGZIP(), []int{2}
}

func (x *DataPlatformMessage) GetEventName() string {
	if x != nil {
		return x.EventName
	}
	return ""
}

func (x *DataPlatformMessage) GetExternalId() string {
	if x != nil {
		return x.ExternalId
	}
	return ""
}

func (x *DataPlatformMessage) GetDpSource() DPSource {
	if x != nil {
		return x.DpSource
	}
	return DPSource_NO_DP_SOURCE
}

func (x *DataPlatformMessage) GetVersionCode() int32 {
	if x != nil {
		return x.VersionCode
	}
	return 0
}

func (x *DataPlatformMessage) GetVersionName() string {
	if x != nil {
		return x.VersionName
	}
	return ""
}

func (x *DataPlatformMessage) GetOsVersion() string {
	if x != nil {
		return x.OsVersion
	}
	return ""
}

func (x *DataPlatformMessage) GetAppNameType() *AppNameType {
	if x != nil {
		return x.AppNameType
	}
	return nil
}

func (x *DataPlatformMessage) GetEventType() EventType {
	if x != nil {
		return x.EventType
	}
	return EventType_NO_WORKFLOW
}

func (x *DataPlatformMessage) GetSessionId() int64 {
	if x != nil {
		return x.SessionId
	}
	return 0
}

func (x *DataPlatformMessage) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *DataPlatformMessage) GetActor() *ActorID {
	if x != nil {
		return x.Actor
	}
	return nil
}

func (x *DataPlatformMessage) GetEventData() []byte {
	if x != nil {
		return x.EventData
	}
	return nil
}

func (x *DataPlatformMessage) GetEventSubType() EventSubType {
	if x != nil {
		return x.EventSubType
	}
	return EventSubType_NO_EVENT_SUBTYPE
}

func (x *DataPlatformMessage) GetNamespace() NameSpace {
	if x != nil {
		return x.Namespace
	}
	return NameSpace_NO_NAMESPACE
}

func (x *DataPlatformMessage) GetEventIndex() int32 {
	if x != nil {
		return x.EventIndex
	}
	return 0
}

type AppNameType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key   string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *AppNameType) Reset() {
	*x = AppNameType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Common_headers_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppNameType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppNameType) ProtoMessage() {}

func (x *AppNameType) ProtoReflect() protoreflect.Message {
	mi := &file_Common_headers_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppNameType.ProtoReflect.Descriptor instead.
func (*AppNameType) Descriptor() ([]byte, []int) {
	return file_Common_headers_proto_rawDescGZIP(), []int{3}
}

func (x *AppNameType) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *AppNameType) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

var File_Common_headers_proto protoreflect.FileDescriptor

var file_Common_headers_proto_rawDesc = []byte{
	0x0a, 0x14, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x22, 0x66, 0x61, 0x72, 0x6d, 0x2e, 0x6e, 0x75, 0x72,
	0x74, 0x75, 0x72, 0x65, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61,
	0x63, 0x74, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x1a, 0x12, 0x43, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2f, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x15,
	0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xc1, 0x08, 0x0a, 0x0e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x72, 0x61, 0x63, 0x69, 0x6e, 0x67,
	0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x72, 0x61, 0x63, 0x69, 0x6e,
	0x67, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x74, 0x72, 0x61, 0x63, 0x65, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x74, 0x72, 0x61, 0x63, 0x65,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x31, 0x38, 0x4e, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x31, 0x38, 0x4e, 0x12, 0x1a, 0x0a, 0x08, 0x6c,
	0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x02, 0x52, 0x08, 0x6c,
	0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6c, 0x6f, 0x6e, 0x67, 0x69,
	0x74, 0x75, 0x64, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x02, 0x52, 0x09, 0x6c, 0x6f, 0x6e, 0x67,
	0x69, 0x74, 0x75, 0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x63, 0x63, 0x75, 0x72, 0x61, 0x63,
	0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x02, 0x52, 0x08, 0x61, 0x63, 0x63, 0x75, 0x72, 0x61, 0x63,
	0x79, 0x12, 0x22, 0x0a, 0x0c, 0x65, 0x78, 0x70, 0x65, 0x72, 0x69, 0x6d, 0x65, 0x6e, 0x74, 0x49,
	0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x78, 0x70, 0x65, 0x72, 0x69, 0x6d,
	0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x54, 0x0a, 0x0c, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67,
	0x65, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x30, 0x2e, 0x66, 0x61,
	0x72, 0x6d, 0x2e, 0x6e, 0x75, 0x72, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e,
	0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x0c, 0x6c,
	0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x73,
	0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x12, 0x45, 0x0a, 0x07, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x73, 0x18, 0x0b, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x66, 0x61, 0x72, 0x6d, 0x2e, 0x6e, 0x75, 0x72, 0x74, 0x75, 0x72,
	0x65, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x73, 0x52,
	0x07, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x73, 0x12, 0x2c, 0x0a, 0x11, 0x70, 0x72, 0x65, 0x66,
	0x66, 0x65, 0x72, 0x65, 0x64, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x11, 0x70, 0x72, 0x65, 0x66, 0x66, 0x65, 0x72, 0x65, 0x64, 0x55, 0x73,
	0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x48, 0x0a, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61,
	0x67, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2c, 0x2e, 0x66, 0x61, 0x72, 0x6d, 0x2e,
	0x6e, 0x75, 0x72, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x63, 0x6f, 0x6e,
	0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4c, 0x61,
	0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x52, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65,
	0x12, 0x45, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x0e, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x2b, 0x2e, 0x66, 0x61, 0x72, 0x6d, 0x2e, 0x6e, 0x75, 0x72, 0x74, 0x75, 0x72, 0x65,
	0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x75, 0x74, 0x68, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x75, 0x74, 0x68,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x70, 0x70, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x61, 0x70, 0x70, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x12, 0x5b, 0x0a, 0x0e, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x66, 0x61, 0x72, 0x6d,
	0x2e, 0x6e, 0x75, 0x72, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x63, 0x6f,
	0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x41,
	0x63, 0x74, 0x6f, 0x72, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x72, 0x61, 0x63, 0x65, 0x52, 0x0e,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x45,
	0x0a, 0x07, 0x61, 0x70, 0x70, 0x54, 0x79, 0x70, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x2b, 0x2e, 0x66, 0x61, 0x72, 0x6d, 0x2e, 0x6e, 0x75, 0x72, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x63,
	0x6f, 0x72, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x41, 0x70, 0x70, 0x54, 0x79, 0x70, 0x65, 0x52, 0x07, 0x61, 0x70,
	0x70, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x70, 0x70, 0x56, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x18, 0x13, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x61, 0x70, 0x70, 0x56, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x49, 0x64, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x49, 0x64, 0x12, 0x48, 0x0a, 0x07, 0x61, 0x70, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x15,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x2e, 0x2e, 0x66, 0x61, 0x72, 0x6d, 0x2e, 0x6e, 0x75, 0x72, 0x74,
	0x75, 0x72, 0x65, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63,
	0x74, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x07, 0x61, 0x70, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x3f, 0x0a,
	0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x16, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x66, 0x61,
	0x72, 0x6d, 0x2e, 0x6e, 0x75, 0x72, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e,
	0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x41, 0x63, 0x74, 0x6f, 0x72, 0x49, 0x44, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x12, 0x1a,
	0x0a, 0x08, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x18, 0x17, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x22, 0x31, 0x0a, 0x07, 0x41, 0x74,
	0x74, 0x72, 0x69, 0x62, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x9b, 0x06,
	0x0a, 0x13, 0x44, 0x61, 0x74, 0x61, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x49,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61,
	0x6c, 0x49, 0x64, 0x12, 0x48, 0x0a, 0x08, 0x64, 0x70, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2c, 0x2e, 0x66, 0x61, 0x72, 0x6d, 0x2e, 0x6e, 0x75, 0x72,
	0x74, 0x75, 0x72, 0x65, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61,
	0x63, 0x74, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x44, 0x50, 0x53, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x52, 0x08, 0x64, 0x70, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x20, 0x0a,
	0x0b, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0b, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x12,
	0x20, 0x0a, 0x0b, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6f, 0x73, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6f, 0x73, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12,
	0x51, 0x0a, 0x0b, 0x61, 0x70, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x66, 0x61, 0x72, 0x6d, 0x2e, 0x6e, 0x75, 0x72, 0x74,
	0x75, 0x72, 0x65, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63,
	0x74, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x41, 0x70, 0x70, 0x4e, 0x61, 0x6d,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0b, 0x61, 0x70, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x4b, 0x0a, 0x09, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2d, 0x2e, 0x66, 0x61, 0x72, 0x6d, 0x2e, 0x6e, 0x75, 0x72,
	0x74, 0x75, 0x72, 0x65, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61,
	0x63, 0x74, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x09, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x1c, 0x0a, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x38, 0x0a,
	0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x74, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x41, 0x0a, 0x05, 0x61, 0x63, 0x74, 0x6f, 0x72,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x66, 0x61, 0x72, 0x6d, 0x2e, 0x6e, 0x75,
	0x72, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72,
	0x61, 0x63, 0x74, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x41, 0x63, 0x74, 0x6f,
	0x72, 0x49, 0x44, 0x52, 0x05, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x54, 0x0a, 0x0c, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x53, 0x75, 0x62, 0x54, 0x79, 0x70, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x30,
	0x2e, 0x66, 0x61, 0x72, 0x6d, 0x2e, 0x6e, 0x75, 0x72, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x63, 0x6f,
	0x72, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x53, 0x75, 0x62, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x0c, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x53, 0x75, 0x62, 0x54, 0x79, 0x70, 0x65, 0x12, 0x4b,
	0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x2d, 0x2e, 0x66, 0x61, 0x72, 0x6d, 0x2e, 0x6e, 0x75, 0x72, 0x74, 0x75, 0x72, 0x65,
	0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4e, 0x61, 0x6d, 0x65, 0x53, 0x70, 0x61, 0x63, 0x65,
	0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0a, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x22, 0x35, 0x0a, 0x0b, 0x41,
	0x70, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x42, 0x52, 0x0a, 0x22, 0x66, 0x61, 0x72, 0x6d, 0x2e, 0x6e, 0x75, 0x72, 0x74, 0x75,
	0x72, 0x65, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74,
	0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x50, 0x01, 0x5a, 0x27, 0x63, 0x6f, 0x64, 0x65,
	0x2e, 0x6e, 0x75, 0x72, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x66, 0x61, 0x72, 0x6d, 0x2f, 0x43, 0x6f,
	0x72, 0x65, 0x2f, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x2f, 0x43, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0xa0, 0x01, 0x01, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_Common_headers_proto_rawDescOnce sync.Once
	file_Common_headers_proto_rawDescData = file_Common_headers_proto_rawDesc
)

func file_Common_headers_proto_rawDescGZIP() []byte {
	file_Common_headers_proto_rawDescOnce.Do(func() {
		file_Common_headers_proto_rawDescData = protoimpl.X.CompressGZIP(file_Common_headers_proto_rawDescData)
	})
	return file_Common_headers_proto_rawDescData
}

var file_Common_headers_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_Common_headers_proto_goTypes = []interface{}{
	(*RequestHeaders)(nil),        // 0: farm.nurture.core.contracts.common.RequestHeaders
	(*Attribs)(nil),               // 1: farm.nurture.core.contracts.common.Attribs
	(*DataPlatformMessage)(nil),   // 2: farm.nurture.core.contracts.common.DataPlatformMessage
	(*AppNameType)(nil),           // 3: farm.nurture.core.contracts.common.AppNameType
	(LanguageCode)(0),             // 4: farm.nurture.core.contracts.common.LanguageCode
	(Language)(0),                 // 5: farm.nurture.core.contracts.common.Language
	(Country)(0),                  // 6: farm.nurture.core.contracts.common.Country
	(*ActorEventTrace)(nil),       // 7: farm.nurture.core.contracts.common.ActorEventTrace
	(AppType)(0),                  // 8: farm.nurture.core.contracts.common.AppType
	(ClientType)(0),               // 9: farm.nurture.core.contracts.common.ClientType
	(*ActorID)(nil),               // 10: farm.nurture.core.contracts.common.ActorID
	(DPSource)(0),                 // 11: farm.nurture.core.contracts.common.DPSource
	(EventType)(0),                // 12: farm.nurture.core.contracts.common.EventType
	(*timestamppb.Timestamp)(nil), // 13: google.protobuf.Timestamp
	(EventSubType)(0),             // 14: farm.nurture.core.contracts.common.EventSubType
	(NameSpace)(0),                // 15: farm.nurture.core.contracts.common.NameSpace
}
var file_Common_headers_proto_depIdxs = []int32{
	4,  // 0: farm.nurture.core.contracts.common.RequestHeaders.languageCode:type_name -> farm.nurture.core.contracts.common.LanguageCode
	1,  // 1: farm.nurture.core.contracts.common.RequestHeaders.attribs:type_name -> farm.nurture.core.contracts.common.Attribs
	5,  // 2: farm.nurture.core.contracts.common.RequestHeaders.language:type_name -> farm.nurture.core.contracts.common.Language
	6,  // 3: farm.nurture.core.contracts.common.RequestHeaders.country:type_name -> farm.nurture.core.contracts.common.Country
	7,  // 4: farm.nurture.core.contracts.common.RequestHeaders.updatedByEvent:type_name -> farm.nurture.core.contracts.common.ActorEventTrace
	8,  // 5: farm.nurture.core.contracts.common.RequestHeaders.appType:type_name -> farm.nurture.core.contracts.common.AppType
	9,  // 6: farm.nurture.core.contracts.common.RequestHeaders.appName:type_name -> farm.nurture.core.contracts.common.ClientType
	10, // 7: farm.nurture.core.contracts.common.RequestHeaders.user:type_name -> farm.nurture.core.contracts.common.ActorID
	11, // 8: farm.nurture.core.contracts.common.DataPlatformMessage.dpSource:type_name -> farm.nurture.core.contracts.common.DPSource
	3,  // 9: farm.nurture.core.contracts.common.DataPlatformMessage.appNameType:type_name -> farm.nurture.core.contracts.common.AppNameType
	12, // 10: farm.nurture.core.contracts.common.DataPlatformMessage.eventType:type_name -> farm.nurture.core.contracts.common.EventType
	13, // 11: farm.nurture.core.contracts.common.DataPlatformMessage.timestamp:type_name -> google.protobuf.Timestamp
	10, // 12: farm.nurture.core.contracts.common.DataPlatformMessage.actor:type_name -> farm.nurture.core.contracts.common.ActorID
	14, // 13: farm.nurture.core.contracts.common.DataPlatformMessage.eventSubType:type_name -> farm.nurture.core.contracts.common.EventSubType
	15, // 14: farm.nurture.core.contracts.common.DataPlatformMessage.namespace:type_name -> farm.nurture.core.contracts.common.NameSpace
	15, // [15:15] is the sub-list for method output_type
	15, // [15:15] is the sub-list for method input_type
	15, // [15:15] is the sub-list for extension type_name
	15, // [15:15] is the sub-list for extension extendee
	0,  // [0:15] is the sub-list for field type_name
}

func init() { file_Common_headers_proto_init() }
func file_Common_headers_proto_init() {
	if File_Common_headers_proto != nil {
		return
	}
	file_Common_enums_proto_init()
	file_Common_entities_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_Common_headers_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestHeaders); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Common_headers_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Attribs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Common_headers_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DataPlatformMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Common_headers_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppNameType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_Common_headers_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_Common_headers_proto_goTypes,
		DependencyIndexes: file_Common_headers_proto_depIdxs,
		MessageInfos:      file_Common_headers_proto_msgTypes,
	}.Build()
	File_Common_headers_proto = out.File
	file_Common_headers_proto_rawDesc = nil
	file_Common_headers_proto_goTypes = nil
	file_Common_headers_proto_depIdxs = nil
}
