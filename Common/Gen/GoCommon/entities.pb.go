// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.14.0
// source: Common/entities.proto

package Common

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type ActorID struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActorType ActorType `protobuf:"varint,1,opt,name=actor_type,json=actorType,proto3,enum=farm.nurture.core.contracts.common.ActorType" json:"actor_type,omitempty"`
	ActorId   int64     `protobuf:"varint,2,opt,name=actor_id,json=actorId,proto3" json:"actor_id,omitempty"`
}

func (x *ActorID) Reset() {
	*x = ActorID{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Common_entities_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActorID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActorID) ProtoMessage() {}

func (x *ActorID) ProtoReflect() protoreflect.Message {
	mi := &file_Common_entities_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActorID.ProtoReflect.Descriptor instead.
func (*ActorID) Descriptor() ([]byte, []int) {
	return file_Common_entities_proto_rawDescGZIP(), []int{0}
}

func (x *ActorID) GetActorType() ActorType {
	if x != nil {
		return x.ActorType
	}
	return ActorType_NO_ACTOR
}

func (x *ActorID) GetActorId() int64 {
	if x != nil {
		return x.ActorId
	}
	return 0
}

type Location struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Latitude  float64 `protobuf:"fixed64,1,opt,name=latitude,proto3" json:"latitude,omitempty"`
	Longitude float64 `protobuf:"fixed64,2,opt,name=longitude,proto3" json:"longitude,omitempty"`
	Accuracy  float64 `protobuf:"fixed64,3,opt,name=accuracy,proto3" json:"accuracy,omitempty"`
}

func (x *Location) Reset() {
	*x = Location{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Common_entities_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Location) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Location) ProtoMessage() {}

func (x *Location) ProtoReflect() protoreflect.Message {
	mi := &file_Common_entities_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Location.ProtoReflect.Descriptor instead.
func (*Location) Descriptor() ([]byte, []int) {
	return file_Common_entities_proto_rawDescGZIP(), []int{1}
}

func (x *Location) GetLatitude() float64 {
	if x != nil {
		return x.Latitude
	}
	return 0
}

func (x *Location) GetLongitude() float64 {
	if x != nil {
		return x.Longitude
	}
	return 0
}

func (x *Location) GetAccuracy() float64 {
	if x != nil {
		return x.Accuracy
	}
	return 0
}

type ActorEventTrace struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Actor     *ActorID               `protobuf:"bytes,1,opt,name=actor,proto3" json:"actor,omitempty"`
	Timestamp *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
}

func (x *ActorEventTrace) Reset() {
	*x = ActorEventTrace{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Common_entities_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActorEventTrace) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActorEventTrace) ProtoMessage() {}

func (x *ActorEventTrace) ProtoReflect() protoreflect.Message {
	mi := &file_Common_entities_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActorEventTrace.ProtoReflect.Descriptor instead.
func (*ActorEventTrace) Descriptor() ([]byte, []int) {
	return file_Common_entities_proto_rawDescGZIP(), []int{2}
}

func (x *ActorEventTrace) GetActor() *ActorID {
	if x != nil {
		return x.Actor
	}
	return nil
}

func (x *ActorEventTrace) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

type Geography struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GeographyType GeographyType `protobuf:"varint,1,opt,name=geographyType,proto3,enum=farm.nurture.core.contracts.common.GeographyType" json:"geographyType,omitempty"`
	GeographyId   int64         `protobuf:"varint,2,opt,name=geographyId,proto3" json:"geographyId,omitempty"`
}

func (x *Geography) Reset() {
	*x = Geography{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Common_entities_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Geography) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Geography) ProtoMessage() {}

func (x *Geography) ProtoReflect() protoreflect.Message {
	mi := &file_Common_entities_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Geography.ProtoReflect.Descriptor instead.
func (*Geography) Descriptor() ([]byte, []int) {
	return file_Common_entities_proto_rawDescGZIP(), []int{3}
}

func (x *Geography) GetGeographyType() GeographyType {
	if x != nil {
		return x.GeographyType
	}
	return GeographyType_ZONE
}

func (x *Geography) GetGeographyId() int64 {
	if x != nil {
		return x.GeographyId
	}
	return 0
}

type KafkaProductInterestProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FarmerMobileNumber string  `protobuf:"bytes,1,opt,name=farmerMobileNumber,proto3" json:"farmerMobileNumber,omitempty"`
	FarmerName         string  `protobuf:"bytes,2,opt,name=farmerName,proto3" json:"farmerName,omitempty"`
	ProductName        string  `protobuf:"bytes,3,opt,name=productName,proto3" json:"productName,omitempty"`
	ProductBrandName   string  `protobuf:"bytes,4,opt,name=productBrandName,proto3" json:"productBrandName,omitempty"`
	ProductCode        string  `protobuf:"bytes,5,opt,name=productCode,proto3" json:"productCode,omitempty"`
	Latitude           float64 `protobuf:"fixed64,6,opt,name=latitude,proto3" json:"latitude,omitempty"`
	Longitude          float64 `protobuf:"fixed64,7,opt,name=longitude,proto3" json:"longitude,omitempty"`
	District           string  `protobuf:"bytes,8,opt,name=district,proto3" json:"district,omitempty"`
	State              string  `protobuf:"bytes,9,opt,name=state,proto3" json:"state,omitempty"`
	Enquiry            int64   `protobuf:"varint,10,opt,name=enquiry,proto3" json:"enquiry,omitempty"`
	FarmerId           int64   `protobuf:"varint,11,opt,name=farmerId,proto3" json:"farmerId,omitempty"`
}

func (x *KafkaProductInterestProto) Reset() {
	*x = KafkaProductInterestProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Common_entities_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KafkaProductInterestProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KafkaProductInterestProto) ProtoMessage() {}

func (x *KafkaProductInterestProto) ProtoReflect() protoreflect.Message {
	mi := &file_Common_entities_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KafkaProductInterestProto.ProtoReflect.Descriptor instead.
func (*KafkaProductInterestProto) Descriptor() ([]byte, []int) {
	return file_Common_entities_proto_rawDescGZIP(), []int{4}
}

func (x *KafkaProductInterestProto) GetFarmerMobileNumber() string {
	if x != nil {
		return x.FarmerMobileNumber
	}
	return ""
}

func (x *KafkaProductInterestProto) GetFarmerName() string {
	if x != nil {
		return x.FarmerName
	}
	return ""
}

func (x *KafkaProductInterestProto) GetProductName() string {
	if x != nil {
		return x.ProductName
	}
	return ""
}

func (x *KafkaProductInterestProto) GetProductBrandName() string {
	if x != nil {
		return x.ProductBrandName
	}
	return ""
}

func (x *KafkaProductInterestProto) GetProductCode() string {
	if x != nil {
		return x.ProductCode
	}
	return ""
}

func (x *KafkaProductInterestProto) GetLatitude() float64 {
	if x != nil {
		return x.Latitude
	}
	return 0
}

func (x *KafkaProductInterestProto) GetLongitude() float64 {
	if x != nil {
		return x.Longitude
	}
	return 0
}

func (x *KafkaProductInterestProto) GetDistrict() string {
	if x != nil {
		return x.District
	}
	return ""
}

func (x *KafkaProductInterestProto) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *KafkaProductInterestProto) GetEnquiry() int64 {
	if x != nil {
		return x.Enquiry
	}
	return 0
}

func (x *KafkaProductInterestProto) GetFarmerId() int64 {
	if x != nil {
		return x.FarmerId
	}
	return 0
}

type RoleGeoPair struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Role    string `protobuf:"bytes,1,opt,name=role,proto3" json:"role,omitempty"`
	GeoId   int64  `protobuf:"varint,2,opt,name=geoId,proto3" json:"geoId,omitempty"`
	SubRole string `protobuf:"bytes,3,opt,name=subRole,proto3" json:"subRole,omitempty"`
}

func (x *RoleGeoPair) Reset() {
	*x = RoleGeoPair{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Common_entities_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoleGeoPair) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoleGeoPair) ProtoMessage() {}

func (x *RoleGeoPair) ProtoReflect() protoreflect.Message {
	mi := &file_Common_entities_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoleGeoPair.ProtoReflect.Descriptor instead.
func (*RoleGeoPair) Descriptor() ([]byte, []int) {
	return file_Common_entities_proto_rawDescGZIP(), []int{5}
}

func (x *RoleGeoPair) GetRole() string {
	if x != nil {
		return x.Role
	}
	return ""
}

func (x *RoleGeoPair) GetGeoId() int64 {
	if x != nil {
		return x.GeoId
	}
	return 0
}

func (x *RoleGeoPair) GetSubRole() string {
	if x != nil {
		return x.SubRole
	}
	return ""
}

type UserAttributes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LocationHierarchy    *LocationHierarchy `protobuf:"bytes,1,opt,name=locationHierarchy,proto3" json:"locationHierarchy,omitempty"`
	ProductReferenceType string             `protobuf:"bytes,2,opt,name=product_reference_type,json=productReferenceType,proto3" json:"product_reference_type,omitempty"`
	ProductReferenceId   string             `protobuf:"bytes,3,opt,name=product_reference_id,json=productReferenceId,proto3" json:"product_reference_id,omitempty"`
	BookingSource        BookingSource      `protobuf:"varint,4,opt,name=booking_source,json=bookingSource,proto3,enum=farm.nurture.core.contracts.common.BookingSource" json:"booking_source,omitempty"`
	Crop                 []string           `protobuf:"bytes,5,rep,name=crop,proto3" json:"crop,omitempty"`
	IsDSRSignedUp        bool               `protobuf:"varint,6,opt,name=isDSRSignedUp,proto3" json:"isDSRSignedUp,omitempty"`
	BookingCount         int64              `protobuf:"varint,7,opt,name=bookingCount,proto3" json:"bookingCount,omitempty"`
	IsKavach             bool               `protobuf:"varint,8,opt,name=isKavach,proto3" json:"isKavach,omitempty"`
}

func (x *UserAttributes) Reset() {
	*x = UserAttributes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Common_entities_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserAttributes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserAttributes) ProtoMessage() {}

func (x *UserAttributes) ProtoReflect() protoreflect.Message {
	mi := &file_Common_entities_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserAttributes.ProtoReflect.Descriptor instead.
func (*UserAttributes) Descriptor() ([]byte, []int) {
	return file_Common_entities_proto_rawDescGZIP(), []int{6}
}

func (x *UserAttributes) GetLocationHierarchy() *LocationHierarchy {
	if x != nil {
		return x.LocationHierarchy
	}
	return nil
}

func (x *UserAttributes) GetProductReferenceType() string {
	if x != nil {
		return x.ProductReferenceType
	}
	return ""
}

func (x *UserAttributes) GetProductReferenceId() string {
	if x != nil {
		return x.ProductReferenceId
	}
	return ""
}

func (x *UserAttributes) GetBookingSource() BookingSource {
	if x != nil {
		return x.BookingSource
	}
	return BookingSource_NO_BOOKING_SOURCE
}

func (x *UserAttributes) GetCrop() []string {
	if x != nil {
		return x.Crop
	}
	return nil
}

func (x *UserAttributes) GetIsDSRSignedUp() bool {
	if x != nil {
		return x.IsDSRSignedUp
	}
	return false
}

func (x *UserAttributes) GetBookingCount() int64 {
	if x != nil {
		return x.BookingCount
	}
	return 0
}

func (x *UserAttributes) GetIsKavach() bool {
	if x != nil {
		return x.IsKavach
	}
	return false
}

type LocationHierarchy struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Loc []string `protobuf:"bytes,1,rep,name=loc,proto3" json:"loc,omitempty"`
}

func (x *LocationHierarchy) Reset() {
	*x = LocationHierarchy{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Common_entities_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LocationHierarchy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LocationHierarchy) ProtoMessage() {}

func (x *LocationHierarchy) ProtoReflect() protoreflect.Message {
	mi := &file_Common_entities_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LocationHierarchy.ProtoReflect.Descriptor instead.
func (*LocationHierarchy) Descriptor() ([]byte, []int) {
	return file_Common_entities_proto_rawDescGZIP(), []int{7}
}

func (x *LocationHierarchy) GetLoc() []string {
	if x != nil {
		return x.Loc
	}
	return nil
}

type ProductDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MaterialCode        string   `protobuf:"bytes,1,opt,name=materialCode,proto3" json:"materialCode,omitempty"`
	Unit                UnitType `protobuf:"varint,2,opt,name=unit,proto3,enum=farm.nurture.core.contracts.common.UnitType" json:"unit,omitempty"`
	TolerancePercentage float64  `protobuf:"fixed64,3,opt,name=tolerancePercentage,proto3" json:"tolerancePercentage,omitempty"`
	DosagePerAcre       float64  `protobuf:"fixed64,4,opt,name=dosagePerAcre,proto3" json:"dosagePerAcre,omitempty"`
	UnitPackSize        float64  `protobuf:"fixed64,5,opt,name=unitPackSize,proto3" json:"unitPackSize,omitempty"`
}

func (x *ProductDetails) Reset() {
	*x = ProductDetails{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Common_entities_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductDetails) ProtoMessage() {}

func (x *ProductDetails) ProtoReflect() protoreflect.Message {
	mi := &file_Common_entities_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductDetails.ProtoReflect.Descriptor instead.
func (*ProductDetails) Descriptor() ([]byte, []int) {
	return file_Common_entities_proto_rawDescGZIP(), []int{8}
}

func (x *ProductDetails) GetMaterialCode() string {
	if x != nil {
		return x.MaterialCode
	}
	return ""
}

func (x *ProductDetails) GetUnit() UnitType {
	if x != nil {
		return x.Unit
	}
	return UnitType_NO_UNIT_TYPE
}

func (x *ProductDetails) GetTolerancePercentage() float64 {
	if x != nil {
		return x.TolerancePercentage
	}
	return 0
}

func (x *ProductDetails) GetDosagePerAcre() float64 {
	if x != nil {
		return x.DosagePerAcre
	}
	return 0
}

func (x *ProductDetails) GetUnitPackSize() float64 {
	if x != nil {
		return x.UnitPackSize
	}
	return 0
}

type IOTStats struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsMalfunctioned           bool      `protobuf:"varint,1,opt,name=isMalfunctioned,proto3" json:"isMalfunctioned,omitempty"`
	IotAcre                   float64   `protobuf:"fixed64,2,opt,name=iotAcre,proto3" json:"iotAcre,omitempty"`
	AllowAcreChangePercentage float64   `protobuf:"fixed64,3,opt,name=allowAcreChangePercentage,proto3" json:"allowAcreChangePercentage,omitempty"`
	TotalPingsCount           int64     `protobuf:"varint,4,opt,name=totalPingsCount,proto3" json:"totalPingsCount,omitempty"`
	Timeslot                  *TimeSlot `protobuf:"bytes,5,opt,name=timeslot,proto3" json:"timeslot,omitempty"`
	EngineOnCount             int64     `protobuf:"varint,6,opt,name=engineOnCount,proto3" json:"engineOnCount,omitempty"`
	SpeedCount                int64     `protobuf:"varint,7,opt,name=speedCount,proto3" json:"speedCount,omitempty"`
	PingDensityPerMinute      float64   `protobuf:"fixed64,8,opt,name=pingDensityPerMinute,proto3" json:"pingDensityPerMinute,omitempty"`
	IsMisbehaved              bool      `protobuf:"varint,9,opt,name=isMisbehaved,proto3" json:"isMisbehaved,omitempty"`
	DeviceId                  string    `protobuf:"bytes,10,opt,name=deviceId,proto3" json:"deviceId,omitempty"`
	MachineNumber             string    `protobuf:"bytes,11,opt,name=machineNumber,proto3" json:"machineNumber,omitempty"`
}

func (x *IOTStats) Reset() {
	*x = IOTStats{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Common_entities_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IOTStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IOTStats) ProtoMessage() {}

func (x *IOTStats) ProtoReflect() protoreflect.Message {
	mi := &file_Common_entities_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IOTStats.ProtoReflect.Descriptor instead.
func (*IOTStats) Descriptor() ([]byte, []int) {
	return file_Common_entities_proto_rawDescGZIP(), []int{9}
}

func (x *IOTStats) GetIsMalfunctioned() bool {
	if x != nil {
		return x.IsMalfunctioned
	}
	return false
}

func (x *IOTStats) GetIotAcre() float64 {
	if x != nil {
		return x.IotAcre
	}
	return 0
}

func (x *IOTStats) GetAllowAcreChangePercentage() float64 {
	if x != nil {
		return x.AllowAcreChangePercentage
	}
	return 0
}

func (x *IOTStats) GetTotalPingsCount() int64 {
	if x != nil {
		return x.TotalPingsCount
	}
	return 0
}

func (x *IOTStats) GetTimeslot() *TimeSlot {
	if x != nil {
		return x.Timeslot
	}
	return nil
}

func (x *IOTStats) GetEngineOnCount() int64 {
	if x != nil {
		return x.EngineOnCount
	}
	return 0
}

func (x *IOTStats) GetSpeedCount() int64 {
	if x != nil {
		return x.SpeedCount
	}
	return 0
}

func (x *IOTStats) GetPingDensityPerMinute() float64 {
	if x != nil {
		return x.PingDensityPerMinute
	}
	return 0
}

func (x *IOTStats) GetIsMisbehaved() bool {
	if x != nil {
		return x.IsMisbehaved
	}
	return false
}

func (x *IOTStats) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

func (x *IOTStats) GetMachineNumber() string {
	if x != nil {
		return x.MachineNumber
	}
	return ""
}

var File_Common_entities_proto protoreflect.FileDescriptor

var file_Common_entities_proto_rawDesc = []byte{
	0x0a, 0x15, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x22, 0x66, 0x61, 0x72, 0x6d, 0x2e, 0x6e, 0x75,
	0x72, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72,
	0x61, 0x63, 0x74, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x1a, 0x12, 0x43, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2f, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x16, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x73, 0x6c,
	0x6f, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x72, 0x0a, 0x07, 0x41, 0x63, 0x74, 0x6f,
	0x72, 0x49, 0x44, 0x12, 0x4c, 0x0a, 0x0a, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2d, 0x2e, 0x66, 0x61, 0x72, 0x6d, 0x2e, 0x6e,
	0x75, 0x72, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x74,
	0x72, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x41, 0x63, 0x74,
	0x6f, 0x72, 0x54, 0x79, 0x70, 0x65, 0x52, 0x09, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x07, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x22, 0x60, 0x0a, 0x08,
	0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x74, 0x69,
	0x74, 0x75, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x6c, 0x61, 0x74, 0x69,
	0x74, 0x75, 0x64, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6c, 0x6f, 0x6e, 0x67, 0x69, 0x74, 0x75, 0x64,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x6c, 0x6f, 0x6e, 0x67, 0x69, 0x74, 0x75,
	0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x63, 0x63, 0x75, 0x72, 0x61, 0x63, 0x79, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x61, 0x63, 0x63, 0x75, 0x72, 0x61, 0x63, 0x79, 0x22, 0x8e,
	0x01, 0x0a, 0x0f, 0x41, 0x63, 0x74, 0x6f, 0x72, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x72, 0x61,
	0x63, 0x65, 0x12, 0x41, 0x0a, 0x05, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x2b, 0x2e, 0x66, 0x61, 0x72, 0x6d, 0x2e, 0x6e, 0x75, 0x72, 0x74, 0x75, 0x72, 0x65,
	0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x41, 0x63, 0x74, 0x6f, 0x72, 0x49, 0x44, 0x52, 0x05,
	0x61, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x38, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x22,
	0x86, 0x01, 0x0a, 0x09, 0x47, 0x65, 0x6f, 0x67, 0x72, 0x61, 0x70, 0x68, 0x79, 0x12, 0x57, 0x0a,
	0x0d, 0x67, 0x65, 0x6f, 0x67, 0x72, 0x61, 0x70, 0x68, 0x79, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x31, 0x2e, 0x66, 0x61, 0x72, 0x6d, 0x2e, 0x6e, 0x75, 0x72, 0x74,
	0x75, 0x72, 0x65, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63,
	0x74, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x6f, 0x67, 0x72, 0x61,
	0x70, 0x68, 0x79, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0d, 0x67, 0x65, 0x6f, 0x67, 0x72, 0x61, 0x70,
	0x68, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x67, 0x65, 0x6f, 0x67, 0x72, 0x61,
	0x70, 0x68, 0x79, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x67, 0x65, 0x6f,
	0x67, 0x72, 0x61, 0x70, 0x68, 0x79, 0x49, 0x64, 0x22, 0xfd, 0x02, 0x0a, 0x19, 0x4b, 0x61, 0x66,
	0x6b, 0x61, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73,
	0x74, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x2e, 0x0a, 0x12, 0x66, 0x61, 0x72, 0x6d, 0x65, 0x72,
	0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x12, 0x66, 0x61, 0x72, 0x6d, 0x65, 0x72, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65,
	0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x66, 0x61, 0x72, 0x6d, 0x65, 0x72,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x66, 0x61, 0x72, 0x6d,
	0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2a, 0x0a, 0x10, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x10, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x42, 0x72, 0x61, 0x6e, 0x64,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43,
	0x6f, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x74, 0x69, 0x74, 0x75,
	0x64, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x6c, 0x61, 0x74, 0x69, 0x74, 0x75,
	0x64, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6c, 0x6f, 0x6e, 0x67, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x6c, 0x6f, 0x6e, 0x67, 0x69, 0x74, 0x75, 0x64, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x64, 0x69, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x12, 0x14, 0x0a, 0x05,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x71, 0x75, 0x69, 0x72, 0x79, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x07, 0x65, 0x6e, 0x71, 0x75, 0x69, 0x72, 0x79, 0x12, 0x1a, 0x0a, 0x08,
	0x66, 0x61, 0x72, 0x6d, 0x65, 0x72, 0x49, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08,
	0x66, 0x61, 0x72, 0x6d, 0x65, 0x72, 0x49, 0x64, 0x22, 0x51, 0x0a, 0x0b, 0x52, 0x6f, 0x6c, 0x65,
	0x47, 0x65, 0x6f, 0x50, 0x61, 0x69, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x67,
	0x65, 0x6f, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x67, 0x65, 0x6f, 0x49,
	0x64, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x62, 0x52, 0x6f, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x73, 0x75, 0x62, 0x52, 0x6f, 0x6c, 0x65, 0x22, 0xb1, 0x03, 0x0a, 0x0e,
	0x55, 0x73, 0x65, 0x72, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x12, 0x63,
	0x0a, 0x11, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x69, 0x65, 0x72, 0x61, 0x72,
	0x63, 0x68, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x66, 0x61, 0x72, 0x6d,
	0x2e, 0x6e, 0x75, 0x72, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x63, 0x6f,
	0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4c,
	0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x69, 0x65, 0x72, 0x61, 0x72, 0x63, 0x68, 0x79,
	0x52, 0x11, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x69, 0x65, 0x72, 0x61, 0x72,
	0x63, 0x68, 0x79, 0x12, 0x34, 0x0a, 0x16, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x72,
	0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x14, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x66, 0x65,
	0x72, 0x65, 0x6e, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x30, 0x0a, 0x14, 0x70, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x5f, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x12, 0x58, 0x0a, 0x0e, 0x62,
	0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x31, 0x2e, 0x66, 0x61, 0x72, 0x6d, 0x2e, 0x6e, 0x75, 0x72, 0x74, 0x75,
	0x72, 0x65, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74,
	0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x42, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67,
	0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x0d, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x53,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x72, 0x6f, 0x70, 0x18, 0x05, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x04, 0x63, 0x72, 0x6f, 0x70, 0x12, 0x24, 0x0a, 0x0d, 0x69, 0x73, 0x44,
	0x53, 0x52, 0x53, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x55, 0x70, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0d, 0x69, 0x73, 0x44, 0x53, 0x52, 0x53, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x55, 0x70, 0x12,
	0x22, 0x0a, 0x0c, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x73, 0x4b, 0x61, 0x76, 0x61, 0x63, 0x68, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x4b, 0x61, 0x76, 0x61, 0x63, 0x68, 0x22,
	0x25, 0x0a, 0x11, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x69, 0x65, 0x72, 0x61,
	0x72, 0x63, 0x68, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6c, 0x6f, 0x63, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x03, 0x6c, 0x6f, 0x63, 0x22, 0xf2, 0x01, 0x0a, 0x0e, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x6d, 0x61, 0x74,
	0x65, 0x72, 0x69, 0x61, 0x6c, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x40, 0x0a,
	0x04, 0x75, 0x6e, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2c, 0x2e, 0x66, 0x61,
	0x72, 0x6d, 0x2e, 0x6e, 0x75, 0x72, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e,
	0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x55, 0x6e, 0x69, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x75, 0x6e, 0x69, 0x74, 0x12,
	0x30, 0x0a, 0x13, 0x74, 0x6f, 0x6c, 0x65, 0x72, 0x61, 0x6e, 0x63, 0x65, 0x50, 0x65, 0x72, 0x63,
	0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x13, 0x74, 0x6f,
	0x6c, 0x65, 0x72, 0x61, 0x6e, 0x63, 0x65, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67,
	0x65, 0x12, 0x24, 0x0a, 0x0d, 0x64, 0x6f, 0x73, 0x61, 0x67, 0x65, 0x50, 0x65, 0x72, 0x41, 0x63,
	0x72, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0d, 0x64, 0x6f, 0x73, 0x61, 0x67, 0x65,
	0x50, 0x65, 0x72, 0x41, 0x63, 0x72, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x75, 0x6e, 0x69, 0x74, 0x50,
	0x61, 0x63, 0x6b, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0c, 0x75,
	0x6e, 0x69, 0x74, 0x50, 0x61, 0x63, 0x6b, 0x53, 0x69, 0x7a, 0x65, 0x22, 0xe0, 0x03, 0x0a, 0x08,
	0x49, 0x4f, 0x54, 0x53, 0x74, 0x61, 0x74, 0x73, 0x12, 0x28, 0x0a, 0x0f, 0x69, 0x73, 0x4d, 0x61,
	0x6c, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0f, 0x69, 0x73, 0x4d, 0x61, 0x6c, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x65, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x69, 0x6f, 0x74, 0x41, 0x63, 0x72, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x07, 0x69, 0x6f, 0x74, 0x41, 0x63, 0x72, 0x65, 0x12, 0x3c, 0x0a, 0x19,
	0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x41, 0x63, 0x72, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x50,
	0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x19, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x41, 0x63, 0x72, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x50, 0x69, 0x6e, 0x67, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x69, 0x6e, 0x67, 0x73, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x48, 0x0a, 0x08, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x6c, 0x6f, 0x74,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x66, 0x61, 0x72, 0x6d, 0x2e, 0x6e, 0x75,
	0x72, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72,
	0x61, 0x63, 0x74, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x53, 0x6c, 0x6f, 0x74, 0x52, 0x08, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x6c, 0x6f, 0x74, 0x12, 0x24,
	0x0a, 0x0d, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x4f, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x4f, 0x6e, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x70, 0x65, 0x65, 0x64, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x73, 0x70, 0x65, 0x65, 0x64, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x32, 0x0a, 0x14, 0x70, 0x69, 0x6e, 0x67, 0x44, 0x65, 0x6e, 0x73,
	0x69, 0x74, 0x79, 0x50, 0x65, 0x72, 0x4d, 0x69, 0x6e, 0x75, 0x74, 0x65, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x14, 0x70, 0x69, 0x6e, 0x67, 0x44, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x79, 0x50,
	0x65, 0x72, 0x4d, 0x69, 0x6e, 0x75, 0x74, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x69, 0x73, 0x4d, 0x69,
	0x73, 0x62, 0x65, 0x68, 0x61, 0x76, 0x65, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c,
	0x69, 0x73, 0x4d, 0x69, 0x73, 0x62, 0x65, 0x68, 0x61, 0x76, 0x65, 0x64, 0x12, 0x1a, 0x0a, 0x08,
	0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x6d, 0x61, 0x63, 0x68,
	0x69, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0d, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x42, 0x53,
	0x0a, 0x22, 0x66, 0x61, 0x72, 0x6d, 0x2e, 0x6e, 0x75, 0x72, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x63,
	0x6f, 0x72, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x50, 0x01, 0x5a, 0x28, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x6e, 0x75, 0x72, 0x74, 0x75, 0x72, 0x65, 0x2d, 0x66, 0x61, 0x72, 0x6d, 0x2f,
	0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x2f, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0xa0, 0x01, 0x01, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_Common_entities_proto_rawDescOnce sync.Once
	file_Common_entities_proto_rawDescData = file_Common_entities_proto_rawDesc
)

func file_Common_entities_proto_rawDescGZIP() []byte {
	file_Common_entities_proto_rawDescOnce.Do(func() {
		file_Common_entities_proto_rawDescData = protoimpl.X.CompressGZIP(file_Common_entities_proto_rawDescData)
	})
	return file_Common_entities_proto_rawDescData
}

var file_Common_entities_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_Common_entities_proto_goTypes = []interface{}{
	(*ActorID)(nil),                   // 0: farm.nurture.core.contracts.common.ActorID
	(*Location)(nil),                  // 1: farm.nurture.core.contracts.common.Location
	(*ActorEventTrace)(nil),           // 2: farm.nurture.core.contracts.common.ActorEventTrace
	(*Geography)(nil),                 // 3: farm.nurture.core.contracts.common.Geography
	(*KafkaProductInterestProto)(nil), // 4: farm.nurture.core.contracts.common.KafkaProductInterestProto
	(*RoleGeoPair)(nil),               // 5: farm.nurture.core.contracts.common.RoleGeoPair
	(*UserAttributes)(nil),            // 6: farm.nurture.core.contracts.common.UserAttributes
	(*LocationHierarchy)(nil),         // 7: farm.nurture.core.contracts.common.LocationHierarchy
	(*ProductDetails)(nil),            // 8: farm.nurture.core.contracts.common.ProductDetails
	(*IOTStats)(nil),                  // 9: farm.nurture.core.contracts.common.IOTStats
	(ActorType)(0),                    // 10: farm.nurture.core.contracts.common.ActorType
	(*timestamppb.Timestamp)(nil),     // 11: google.protobuf.Timestamp
	(GeographyType)(0),                // 12: farm.nurture.core.contracts.common.GeographyType
	(BookingSource)(0),                // 13: farm.nurture.core.contracts.common.BookingSource
	(UnitType)(0),                     // 14: farm.nurture.core.contracts.common.UnitType
	(*TimeSlot)(nil),                  // 15: farm.nurture.core.contracts.common.TimeSlot
}
var file_Common_entities_proto_depIdxs = []int32{
	10, // 0: farm.nurture.core.contracts.common.ActorID.actor_type:type_name -> farm.nurture.core.contracts.common.ActorType
	0,  // 1: farm.nurture.core.contracts.common.ActorEventTrace.actor:type_name -> farm.nurture.core.contracts.common.ActorID
	11, // 2: farm.nurture.core.contracts.common.ActorEventTrace.timestamp:type_name -> google.protobuf.Timestamp
	12, // 3: farm.nurture.core.contracts.common.Geography.geographyType:type_name -> farm.nurture.core.contracts.common.GeographyType
	7,  // 4: farm.nurture.core.contracts.common.UserAttributes.locationHierarchy:type_name -> farm.nurture.core.contracts.common.LocationHierarchy
	13, // 5: farm.nurture.core.contracts.common.UserAttributes.booking_source:type_name -> farm.nurture.core.contracts.common.BookingSource
	14, // 6: farm.nurture.core.contracts.common.ProductDetails.unit:type_name -> farm.nurture.core.contracts.common.UnitType
	15, // 7: farm.nurture.core.contracts.common.IOTStats.timeslot:type_name -> farm.nurture.core.contracts.common.TimeSlot
	8,  // [8:8] is the sub-list for method output_type
	8,  // [8:8] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_Common_entities_proto_init() }
func file_Common_entities_proto_init() {
	if File_Common_entities_proto != nil {
		return
	}
	file_Common_enums_proto_init()
	file_Common_time_slot_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_Common_entities_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActorID); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Common_entities_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Location); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Common_entities_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActorEventTrace); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Common_entities_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Geography); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Common_entities_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KafkaProductInterestProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Common_entities_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoleGeoPair); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Common_entities_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserAttributes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Common_entities_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LocationHierarchy); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Common_entities_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProductDetails); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Common_entities_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IOTStats); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_Common_entities_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_Common_entities_proto_goTypes,
		DependencyIndexes: file_Common_entities_proto_depIdxs,
		MessageInfos:      file_Common_entities_proto_msgTypes,
	}.Build()
	File_Common_entities_proto = out.File
	file_Common_entities_proto_rawDesc = nil
	file_Common_entities_proto_goTypes = nil
	file_Common_entities_proto_depIdxs = nil
}
